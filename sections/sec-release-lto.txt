
max11619-adc:	file format elf32-littlearm

Disassembly of section .text:

000000c0 <__stext>:
      c0:      	ldr	r4, [pc, #44] <$d>
      c2:      	mov	lr, r4
      c4:      	bl	0xfda <__pre_init>      @ imm = #3858
      c8:      	mov	lr, r4
      ca:      	ldr	r0, [pc, #40] <$d+0x6>
      cc:      	ldr	r1, [pc, #40] <$d+0x8>
      ce:      	movs	r2, #0
      d0:      	cmp	r1, r0
      d2:      	beq	0xd8 <__stext+0x18>     @ imm = #2
      d4:      	stm	r0!, {r2}
      d6:      	b	0xd0 <__stext+0x10>     @ imm = #-10
      d8:      	ldr	r0, [pc, #32] <$d+0xc>
      da:      	ldr	r1, [pc, #36] <$d+0x12>
      dc:      	ldr	r2, [pc, #36] <$d+0x14>
      de:      	cmp	r1, r0
      e0:      	beq	0xe8 <__stext+0x28>     @ imm = #4
      e2:      	ldm	r2!, {r3}
      e4:      	stm	r0!, {r3}
      e6:      	b	0xde <__stext+0x1e>     @ imm = #-12
      e8:      	push	{lr}
      ea:      	bl	0x598 <main>            @ imm = #1194
      ee:      	udf	#0

000000f0 <$d>:
      f0:	ff ff ff ff	.word	0xffffffff
      f4:	00 00 00 10	.word	0x10000000
      f8:	44 04 00 10	.word	0x10000444
      fc:	00 00 00 10	.word	0x10000000
     100:	00 00 00 10	.word	0x10000000
     104:	98 44 00 00	.word	0x00004498

00000108 <<T as core::convert::Into<U>>::into::hb25a0bfbd844ac2a>:
     108:      	push	{r7, lr}
     10a:      	add	r7, sp, #0
     10c:      	bl	0x980 <<va108xx_hal::time::Hertz as core::convert::From<va108xx_hal::time::MegaHertz>>::from::h1147aa80a554a3b5> @ imm = #2160
     110:      	pop	{r7, pc}
     112:      	bmi	0xbe <__eexceptions+0x7e> @ imm = #-88

00000114 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c>:
     114:      	push	{r4, r5, r6, r7, lr}
     116:      	add	r7, sp, #12
     118:      	sub	sp, #44
     11a:      	mov	r6, r3
     11c:      	str	r2, [sp, #40]
     11e:      	str	r1, [sp, #32]
     120:      	mov	r5, r0
     122:      	ldr	r4, [r7, #12]
     124:      	ldr	r0, [r7, #8]
     126:      	cmp	r0, #0
     128:      	beq	0x130 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x1c> @ imm = #4
     12a:      	movs	r1, #5
     12c:      	bl	0x968 <va108xx_hal::clock::enable_peripheral_clock::hc38ebef0d89f3d24> @ imm = #2104
     130:      	cmp	r4, #0
     132:      	beq	0x17a <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x66> @ imm = #68
     134:      	str	r6, [sp, #36]
     136:      	ldrb	r6, [r4, #5]
     138:      	ldrb	r0, [r4, #4]
     13a:      	str	r0, [sp, #12]
     13c:      	ldr	r0, [sp, #32]
     13e:      	bl	0x980 <<va108xx_hal::time::Hertz as core::convert::From<va108xx_hal::time::MegaHertz>>::from::h1147aa80a554a3b5> @ imm = #2110
     142:      	ldr	r1, [sp, #40]
     144:      	uxtb	r1, r1
     146:      	adds	r2, r1, #1
     148:      	ldr	r1, [r4]
     14a:      	muls	r1, r2, r1
     14c:      	beq	0x234 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x120> @ imm = #228
     14e:      	rsbs	r2, r6, #0
     150:      	adcs	r2, r6
     152:      	str	r2, [sp, #8]
     154:      	bl	0x2f8c <__aeabi_uidiv>  @ imm = #11828
     158:      	str	r0, [sp, #28]
     15a:      	ldrb	r0, [r4, #8]
     15c:      	cmp	r0, #255
     15e:      	bne	0x162 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x4e> @ imm = #0
     160:      	movs	r0, #0
     162:      	str	r0, [sp, #20]
     164:      	ldr	r6, [sp, #36]
     166:      	ldrb	r0, [r4, #7]
     168:      	str	r0, [sp, #24]
     16a:      	ldr	r0, [sp, #12]
     16c:      	cmp	r0, #0
     16e:      	beq	0x188 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x74> @ imm = #22
     170:      	mov	r0, r5
     172:      	movs	r1, #64
     174:      	str	r1, [sp, #4]
     176:      	ldr	r4, [sp, #8]
     178:      	b	0x190 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x7c> @ imm = #20
     17a:      	movs	r0, #2
     17c:      	str	r0, [sp, #28]
     17e:      	movs	r4, #1
     180:      	movs	r0, #0
     182:      	str	r0, [sp, #24]
     184:      	str	r0, [sp, #20]
     186:      	b	0x18a <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0x76> @ imm = #0
     188:      	ldr	r4, [sp, #8]
     18a:      	mov	r0, r5
     18c:      	movs	r1, #0
     18e:      	str	r1, [sp, #4]
     190:      	ldr	r3, [sp, #40]
     192:      	lsrs	r1, r3, #16
     194:      	uxtb	r6, r6
     196:      	lsls	r2, r6, #16
     198:      	adds	r1, r1, r2
     19a:      	str	r1, [sp, #36]
     19c:      	lsrs	r1, r3, #8
     19e:      	lsls	r2, r6, #24
     1a0:      	adds	r1, r1, r2
     1a2:      	str	r1, [sp, #12]
     1a4:      	lsrs	r1, r3, #24
     1a6:      	lsls	r2, r6, #8
     1a8:      	adds	r5, r1, r2
     1aa:      	cmp	r4, #0
     1ac:      	str	r0, [sp, #16]
     1ae:      	bne	0x1b4 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0xa0> @ imm = #2
     1b0:      	movs	r1, #128
     1b2:      	b	0x1b6 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c+0xa2> @ imm = #0
     1b4:      	movs	r1, #0
     1b6:      	ldr	r0, [sp, #40]
     1b8:      	lsls	r2, r0, #24
     1ba:      	lsrs	r2, r2, #16
     1bc:      	ldr	r0, [sp, #4]
     1be:      	adds	r0, r0, r2
     1c0:      	adds	r4, r0, r1
     1c2:      	bl	0x724 <<u8 as va108xx_hal::spi::Word>::word_reg::h3132459577bda1d9> @ imm = #1374
     1c6:      	movs	r1, #15
     1c8:      	ands	r1, r0
     1ca:      	orrs	r1, r4
     1cc:      	ldr	r0, [pc, #120] <$d.3+0x8>
     1ce:      	subs	r2, r0, #4
     1d0:      	str	r1, [r2]
     1d2:      	ldr	r4, [sp, #24]
     1d4:      	subs	r1, r4, #1
     1d6:      	mov	r2, r4
     1d8:      	sbcs	r2, r1
     1da:      	lsls	r1, r2, #7
     1dc:      	movs	r2, #1
     1de:      	str	r5, [sp, #8]
     1e0:      	ands	r2, r5
     1e2:      	ldr	r3, [sp, #36]
     1e4:      	lsls	r3, r3, #31
     1e6:      	lsrs	r3, r3, #28
     1e8:      	adds	r2, r3, r2
     1ea:      	ldr	r5, [sp, #12]
     1ec:      	lsls	r3, r5, #31
     1ee:      	lsrs	r3, r3, #29
     1f0:      	adds	r2, r2, r3
     1f2:      	lsls	r3, r6, #31
     1f4:      	lsrs	r3, r3, #21
     1f6:      	adds	r2, r2, r3
     1f8:      	adds	r1, r2, r1
     1fa:      	ldr	r2, [sp, #20]
     1fc:      	lsls	r2, r2, #29
     1fe:      	lsrs	r2, r2, #25
     200:      	adds	r1, r1, r2
     202:      	str	r1, [r0]
     204:      	movs	r1, #3
     206:      	str	r1, [r0, #40]
     208:      	ldr	r1, [sp, #28]
     20a:      	str	r1, [r0, #12]
     20c:      	ldr	r1, [r0]
     20e:      	movs	r2, #2
     210:      	orrs	r2, r1
     212:      	str	r2, [r0]
     214:      	ldr	r0, [sp, #32]
     216:      	bl	0x980 <<va108xx_hal::time::Hertz as core::convert::From<va108xx_hal::time::MegaHertz>>::from::h1147aa80a554a3b5> @ imm = #1894
     21a:      	ldr	r1, [sp, #16]
     21c:      	strb	r4, [r1, #9]
     21e:      	strb	r6, [r1, #8]
     220:      	ldr	r2, [sp, #8]
     222:      	strb	r2, [r1, #7]
     224:      	ldr	r2, [sp, #36]
     226:      	strb	r2, [r1, #6]
     228:      	strb	r5, [r1, #5]
     22a:      	ldr	r2, [sp, #40]
     22c:      	strb	r2, [r1, #4]
     22e:      	str	r0, [r1]
     230:      	add	sp, #44
     232:      	pop	{r4, r5, r6, r7, pc}
     234:      	ldr	r0, [pc, #8] <$d.3>
     236:      	movs	r1, #25
     238:      	ldr	r2, [pc, #8] <$d.3+0x4>
     23a:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #3866
     23e:      	trap

00000240 <$d.3>:
     240:	30 33 00 00	.word	0x00003330
     244:	1c 33 00 00	.word	0x0000331c
     248:	04 10 05 40	.word	0x40051004

0000024c <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0>:
     24c:      	push	{r4, r5, r6, r7, lr}
     24e:      	add	r7, sp, #12
     250:      	sub	sp, #28
     252:      	str	r3, [sp, #16]
     254:      	str	r0, [sp, #8]
     256:      	str	r2, [sp]
     258:      	adds	r4, r1, r2
     25a:      	adds	r0, r7, #7
     25c:      	adds	r0, #1
     25e:      	ldrb	r0, [r0]
     260:      	adds	r2, r0, #1
     262:      	uxtb	r0, r2
     264:      	str	r0, [sp, #24]
     266:      	str	r2, [sp, #4]
     268:      	cmp	r0, r2
     26a:      	str	r1, [sp, #12]
     26c:      	beq	0x2e8 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0x9c> @ imm = #120
     26e:      	movs	r3, #2
     270:      	cmp	r1, r4
     272:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #192
     274:      	cmp	r1, #0
     276:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #188
     278:      	movs	r4, #0
     27a:      	strb	r4, [r1]
     27c:      	ldr	r5, [sp, #4]
     27e:      	lsls	r0, r5, #1
     280:      	adds	r0, r0, #1
     282:      	uxtb	r3, r0
     284:      	ldr	r1, [sp]
     286:      	cmp	r3, r1
     288:      	bhi	0x350 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0x104> @ imm = #196
     28a:      	ldr	r0, [sp, #8]
     28c:      	ldr	r1, [sp, #12]
     28e:      	mov	r2, r3
     290:      	bl	0x808 <<va108xx_hal::spi::SpiBase<va108xx::SPIB> as embedded_hal::blocking::spi::Transfer<u8>>::transfer::h46aca6f4a661c25a> @ imm = #1396
     294:      	cmp	r1, #0
     296:      	beq	0x35a <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0x10e> @ imm = #192
     298:      	movs	r3, #7
     29a:      	lsls	r2, r5, #24
     29c:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #150
     29e:      	str	r3, [sp, #12]
     2a0:      	ldr	r2, [sp, #16]
     2a2:      	ldr	r6, [r2]
     2a4:      	ldr	r2, [r2, #4]
     2a6:      	str	r2, [sp, #20]
     2a8:      	subs	r1, r1, #1
     2aa:      	adds	r0, r0, #2
     2ac:      	movs	r3, #3
     2ae:      	ldr	r2, [sp, #20]
     2b0:      	cmp	r6, r2
     2b2:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #128
     2b4:      	adds	r2, r6, #2
     2b6:      	ldr	r5, [sp, #16]
     2b8:      	str	r2, [r5]
     2ba:      	cmp	r6, #0
     2bc:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #118
     2be:      	cmp	r1, #0
     2c0:      	beq	0x33c <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xf0> @ imm = #120
     2c2:      	cmp	r1, #1
     2c4:      	beq	0x344 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xf8> @ imm = #124
     2c6:      	adds	r4, r4, #1
     2c8:      	subs	r3, r0, #1
     2ca:      	ldrb	r5, [r0]
     2cc:      	lsrs	r5, r5, #2
     2ce:      	ldrb	r3, [r3]
     2d0:      	lsls	r3, r3, #6
     2d2:      	adds	r3, r3, r5
     2d4:      	strh	r3, [r6]
     2d6:      	subs	r1, r1, #2
     2d8:      	adds	r0, r0, #2
     2da:      	uxtb	r3, r4
     2dc:      	ldr	r5, [sp, #24]
     2de:      	cmp	r3, r5
     2e0:      	mov	r6, r2
     2e2:      	blo	0x2ac <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0x60> @ imm = #-58
     2e4:      	ldr	r3, [sp, #12]
     2e6:      	b	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #76
     2e8:      	ldr	r0, [sp, #8]
     2ea:      	ldrb	r0, [r0, #19]
     2ec:      	str	r0, [sp, #20]
     2ee:      	movs	r5, #0
     2f0:      	ldr	r1, [sp, #12]
     2f2:      	subs	r2, r1, r4
     2f4:      	subs	r3, r2, #1
     2f6:      	sbcs	r2, r3
     2f8:      	movs	r3, #2
     2fa:      	cmp	r1, r4
     2fc:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #54
     2fe:      	cmp	r1, #0
     300:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #50
     302:      	uxtb	r6, r5
     304:      	ldr	r0, [sp, #20]
     306:      	cmp	r0, r6
     308:      	blo	0x334 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xe8> @ imm = #40
     30a:      	adds	r2, r1, r2
     30c:      	lsls	r6, r5, #3
     30e:      	movs	r0, #134
     310:      	orrs	r0, r6
     312:      	strb	r0, [r1]
     314:      	subs	r1, r2, r4
     316:      	subs	r0, r1, #1
     318:      	sbcs	r1, r0
     31a:      	cmp	r2, r4
     31c:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #22
     31e:      	cmp	r2, #0
     320:      	beq	0x336 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xea> @ imm = #18
     322:      	adds	r5, r5, #1
     324:      	adds	r1, r2, r1
     326:      	movs	r0, #0
     328:      	strb	r0, [r2]
     32a:      	uxtb	r0, r5
     32c:      	ldr	r2, [sp, #24]
     32e:      	cmp	r0, r2
     330:      	blo	0x2f2 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xa6> @ imm = #-66
     332:      	b	0x26e <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0x22> @ imm = #-200
     334:      	movs	r3, #0
     336:      	mov	r0, r3
     338:      	add	sp, #28
     33a:      	pop	{r4, r5, r6, r7, pc}
     33c:      	ldr	r0, [pc, #36] <$d.1>
     33e:      	movs	r1, #43
     340:      	ldr	r2, [pc, #40] <$d.1+0x8>
     342:      	b	0x34a <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xfe> @ imm = #4
     344:      	ldr	r0, [pc, #28] <$d.1>
     346:      	movs	r1, #43
     348:      	ldr	r2, [pc, #28] <$d.1+0x4>
     34a:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #3594
     34e:      	trap
     350:      	ldr	r2, [pc, #32] <$d.1+0x10>
     352:      	mov	r0, r3
     354:      	bl	0x21fc <core::slice::index::slice_end_index_len_fail::h4968a5fa708ed4f2> @ imm = #7844
     358:      	trap
     35a:      	ldr	r0, [pc, #8] <$d.1+0x2>
     35c:      	movs	r1, #43
     35e:      	ldr	r2, [pc, #16] <$d.1+0xe>
     360:      	b	0x34a <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xfe> @ imm = #-26
     362:      	mov	r8, r8

00000364 <$d.1>:
     364:	e8 33 00 00	.word	0x000033e8
     368:	d8 33 00 00	.word	0x000033d8
     36c:	c8 33 00 00	.word	0x000033c8
     370:	b8 33 00 00	.word	0x000033b8
     374:	a8 33 00 00	.word	0x000033a8

00000378 <<&T as core::fmt::Debug>::fmt::h33fd5fd379fbf26b>:
     378:      	push	{r7, lr}
     37a:      	add	r7, sp, #0
     37c:      	ldr	r0, [r0]
     37e:      	bl	0xf7c <<max116xx_10bit::AdcError as core::fmt::Debug>::fmt::h7aa0b0b24f5c139a> @ imm = #3066
     382:      	pop	{r7, pc}

00000384 <core::ptr::drop_in_place<&max116xx_10bit::AdcError>::he48005ae319fcc5c>:
     384:      	bx	lr
     386:      	bmi	0x332 <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0+0xe6> @ imm = #-88

00000388 <_ZN77_$LT$max116xx_10bit..Error$LT$SpiE$C$PinE$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h72b89bef16459832E>:
     388:      	push	{r4, r5, r7, lr}
     38a:      	add	r7, sp, #8
     38c:      	sub	sp, #16
     38e:      	mov	r5, r0
     390:      	mov	r4, sp
     392:      	ldr	r2, [pc, #32] <$d.8+0x2>
     394:      	movs	r3, #3
     396:      	mov	r0, r4
     398:      	bl	0x1fac <core::fmt::Formatter::debug_tuple::ha4e1a3ea9953bf09> @ imm = #7184
     39c:      	str	r5, [sp, #12]
     39e:      	add	r1, sp, #12
     3a0:      	ldr	r2, [pc, #20] <$d.8+0x4>
     3a2:      	mov	r0, r4
     3a4:      	bl	0x1508 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186> @ imm = #4448
     3a8:      	mov	r0, r4
     3aa:      	bl	0x15f4 <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307> @ imm = #4678
     3ae:      	add	sp, #16
     3b0:      	pop	{r4, r5, r7, pc}
     3b2:      	mov	r8, r8

000003b4 <$d.8>:
     3b4:	13 34 00 00	.word	0x00003413
     3b8:	18 34 00 00	.word	0x00003418

000003bc <core::ptr::drop_in_place<max116xx_10bit::Error<core::convert::Infallible,core::convert::Infallible>>::h3d962341dd0fd20c>:
     3bc:      	bx	lr
     3be:      	bmi	0x36a <$d.1+0x6>        @ imm = #-88

000003c0 <core::option::Option<T>::unwrap::h9eee7d40ec3eff5f>:
     3c0:      	push	{r7, lr}
     3c2:      	add	r7, sp, #0
     3c4:      	cmp	r0, #0
     3c6:      	beq	0x3ca <core::option::Option<T>::unwrap::h9eee7d40ec3eff5f+0xa> @ imm = #0
     3c8:      	pop	{r7, pc}
     3ca:      	ldr	r0, [pc, #12] <$d.2+0x2>
     3cc:      	movs	r1, #43
     3ce:      	ldr	r2, [pc, #12] <$d.2+0x6>
     3d0:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #3460
     3d4:      	trap
     3d6:      	mov	r8, r8

000003d8 <$d.2>:
     3d8:	28 34 00 00	.word	0x00003428
     3dc:	0c 36 00 00	.word	0x0000360c

000003e0 <va108xx::Peripherals::take::h619cff2eba763ceb>:
     3e0:      	push	{r4, r5, r6, r7, lr}
     3e2:      	add	r7, sp, #12
     3e4:      	sub	sp, #4
     3e6:      	bl	0xf74 <__primask_r>     @ imm = #2954
     3ea:      	mov	r4, r0
     3ec:      	movs	r6, #1
     3ee:      	ands	r4, r6
     3f0:      	bl	0xf68 <__cpsid>         @ imm = #2932
     3f4:      	bl	0xf7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb> @ imm = #2946
     3f8:      	ldr	r0, [pc, #24] <$d.4>
     3fa:      	ldrb	r5, [r0]
     3fc:      	cmp	r5, #0
     3fe:      	bne	0x402 <va108xx::Peripherals::take::h619cff2eba763ceb+0x22> @ imm = #0
     400:      	strb	r6, [r0]
     402:      	cmp	r4, #0
     404:      	bne	0x40a <va108xx::Peripherals::take::h619cff2eba763ceb+0x2a> @ imm = #2
     406:      	bl	0xf6c <__cpsie>         @ imm = #2914
     40a:      	rsbs	r0, r5, #0
     40c:      	adcs	r0, r5
     40e:      	add	sp, #4
     410:      	pop	{r4, r5, r6, r7, pc}
     412:      	mov	r8, r8

00000414 <$d.4>:
     414:	34 04 00 10	.word	0x10000434

00000418 <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708>:
     418:      	push	{r7, lr}
     41a:      	add	r7, sp, #0
     41c:      	sub	sp, #128
     41e:      	str	r1, [sp, #20]
     420:      	mov	r5, r0
     422:      	bl	0x722 <dummy_pin::dummy::DummyPin::new_low::ha5c088a543349d0a> @ imm = #764
     426:      	ldr	r0, [pc, #316] <$d.6+0x2>
     428:      	ldr	r1, [r0, #4]
     42a:      	lsls	r1, r1, #30
     42c:      	bpl	0x428 <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708+0x10> @ imm = #-8
     42e:      	movs	r1, #16
     430:      	str	r1, [r0]
     432:      	ldr	r1, [r0, #4]
     434:      	lsls	r1, r1, #30
     436:      	bpl	0x432 <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708+0x1a> @ imm = #-8
     438:      	movs	r1, #116
     43a:      	str	r1, [r0]
     43c:      	add	r0, sp, #28
     43e:      	mov	r1, r0
     440:      	ldm	r5!, {r2, r3, r4}
     442:      	stm	r1!, {r2, r3, r4}
     444:      	movs	r1, #4
     446:      	strb	r1, [r0, #20]
     448:      	ldr	r0, [pc, #284] <$d.6+0x4>
     44a:      	str	r0, [sp, #44]
     44c:      	movs	r5, #0
     44e:      	str	r5, [sp, #40]
     450:      	add	r0, sp, #52
     452:      	movs	r1, #32
     454:      	bl	0x30bc <__aeabi_memclr8> @ imm = #11364
     458:      	str	r5, [sp, #84]
     45a:      	add	r0, sp, #88
     45c:      	adds	r1, r0, #6
     45e:      	str	r1, [sp, #16]
     460:      	adds	r1, r0, #4
     462:      	str	r1, [sp, #12]
     464:      	adds	r1, r0, #2
     466:      	str	r1, [sp, #8]
     468:      	adds	r0, #8
     46a:      	str	r0, [sp, #24]
     46c:      	movs	r4, #1
     46e:      	str	r4, [sp, #116]
     470:      	add	r0, sp, #120
     472:      	str	r0, [sp, #112]
     474:      	str	r5, [sp, #108]
     476:      	str	r5, [sp, #104]
     478:      	movs	r6, #2
     47a:      	str	r6, [sp, #100]
     47c:      	ldr	r0, [pc, #236] <$d.6+0x8>
     47e:      	str	r0, [sp, #96]
     480:      	ldr	r0, [pc, #236] <$d.6+0xc>
     482:      	str	r0, [sp, #124]
     484:      	add	r0, sp, #84
     486:      	str	r0, [sp, #120]
     488:      	add	r1, sp, #96
     48a:      	mov	r0, r5
     48c:      	bl	0xc90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545> @ imm = #2048
     490:      	str	r5, [sp, #92]
     492:      	str	r5, [sp, #88]
     494:      	ldr	r0, [sp, #24]
     496:      	str	r0, [sp, #100]
     498:      	add	r0, sp, #88
     49a:      	str	r0, [sp, #96]
     49c:      	movs	r0, #3
     49e:      	str	r0, [sp]
     4a0:      	add	r0, sp, #28
     4a2:      	add	r1, sp, #52
     4a4:      	movs	r2, #32
     4a6:      	add	r3, sp, #96
     4a8:      	bl	0x24c <max116xx_10bit::Max116xx10Bit<SPI,CS>::read_multiple_channels_0_to_n::he8c1fd70f18f84e0> @ imm = #-608
     4ac:      	uxtb	r0, r0
     4ae:      	cmp	r0, #7
     4b0:      	bne	0x54e <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708+0x136> @ imm = #154
     4b2:      	movs	r2, #32
     4b4:      	mov	r0, r5
     4b6:      	ldr	r1, [pc, #200] <$d.6+0x1e>
     4b8:      	bl	0xc5c <rtt_target::print::print_impl::write_str::hffb1f12b8b66fdee> @ imm = #1952
     4bc:      	str	r4, [sp, #116]
     4be:      	add	r0, sp, #120
     4c0:      	str	r0, [sp, #112]
     4c2:      	str	r5, [sp, #108]
     4c4:      	str	r5, [sp, #104]
     4c6:      	str	r6, [sp, #100]
     4c8:      	ldr	r0, [pc, #184] <$d.6+0x20>
     4ca:      	str	r0, [sp, #96]
     4cc:      	ldr	r0, [pc, #184] <$d.6+0x24>
     4ce:      	str	r0, [sp, #124]
     4d0:      	add	r0, sp, #88
     4d2:      	str	r0, [sp, #120]
     4d4:      	add	r1, sp, #96
     4d6:      	mov	r0, r5
     4d8:      	bl	0xc90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545> @ imm = #1972
     4dc:      	str	r4, [sp, #116]
     4de:      	add	r0, sp, #120
     4e0:      	str	r0, [sp, #112]
     4e2:      	str	r5, [sp, #108]
     4e4:      	str	r5, [sp, #104]
     4e6:      	str	r6, [sp, #100]
     4e8:      	ldr	r0, [pc, #160] <$d.6+0x28>
     4ea:      	str	r0, [sp, #96]
     4ec:      	ldr	r0, [pc, #152] <$d.6+0x24>
     4ee:      	str	r0, [sp, #124]
     4f0:      	ldr	r0, [sp, #8]
     4f2:      	str	r0, [sp, #120]
     4f4:      	add	r1, sp, #96
     4f6:      	mov	r0, r5
     4f8:      	bl	0xc90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545> @ imm = #1940
     4fc:      	str	r4, [sp, #116]
     4fe:      	add	r0, sp, #120
     500:      	str	r0, [sp, #112]
     502:      	str	r5, [sp, #108]
     504:      	str	r5, [sp, #104]
     506:      	str	r6, [sp, #100]
     508:      	ldr	r0, [pc, #132] <$d.6+0x2c>
     50a:      	str	r0, [sp, #96]
     50c:      	ldr	r0, [pc, #120] <$d.6+0x24>
     50e:      	str	r0, [sp, #124]
     510:      	ldr	r0, [sp, #12]
     512:      	str	r0, [sp, #120]
     514:      	add	r1, sp, #96
     516:      	mov	r0, r5
     518:      	bl	0xc90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545> @ imm = #1908
     51c:      	str	r4, [sp, #116]
     51e:      	add	r0, sp, #120
     520:      	str	r0, [sp, #112]
     522:      	str	r5, [sp, #108]
     524:      	str	r5, [sp, #104]
     526:      	str	r6, [sp, #100]
     528:      	ldr	r0, [pc, #104] <$d.6+0x30>
     52a:      	str	r0, [sp, #96]
     52c:      	ldr	r0, [pc, #88] <$d.6+0x24>
     52e:      	str	r0, [sp, #124]
     530:      	ldr	r0, [sp, #16]
     532:      	str	r0, [sp, #120]
     534:      	add	r1, sp, #96
     536:      	mov	r0, r5
     538:      	bl	0xc90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545> @ imm = #1876
     53c:      	ldr	r0, [sp, #84]
     53e:      	adds	r0, r0, #1
     540:      	str	r0, [sp, #84]
     542:      	movs	r0, #125
     544:      	lsls	r1, r0, #2
     546:      	ldr	r0, [sp, #20]
     548:      	bl	0x8fe <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73> @ imm = #946
     54c:      	b	0x46c <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708+0x54> @ imm = #-228
     54e:      	add	r2, sp, #120
     550:      	strb	r0, [r2]
     552:      	ldr	r0, [pc, #32] <$d.6+0x12>
     554:      	str	r0, [sp]
     556:      	ldr	r0, [pc, #32] <$d.6+0x16>
     558:      	movs	r1, #25
     55a:      	ldr	r3, [pc, #32] <$d.6+0x1a>
     55c:      	bl	0x11e8 <core::result::unwrap_failed::hab9917f6469ee00f> @ imm = #3208
     560:      	trap
     562:      	mov	r8, r8

00000564 <$d.6>:
     564:	08 10 05 40	.word	0x40051008
     568:	03 01 04 04	.word	0x04040103
     56c:	a8 34 00 00	.word	0x000034a8
     570:	0d 2c 00 00	.word	0x00002c0d
     574:	d4 34 00 00	.word	0x000034d4
     578:	b8 34 00 00	.word	0x000034b8
     57c:	54 34 00 00	.word	0x00003454
     580:	24 35 00 00	.word	0x00003524
     584:	74 35 00 00	.word	0x00003574
     588:	31 2b 00 00	.word	0x00002b31
     58c:	90 35 00 00	.word	0x00003590
     590:	ac 35 00 00	.word	0x000035ac
     594:	d8 35 00 00	.word	0x000035d8

00000598 <main>:
     598:      	push	{r7, lr}
     59a:      	add	r7, sp, #0
     59c:      	bl	0x5a4 <max11619_adc::__cortex_m_rt_main::h2e9a6cd1b0437d7b> @ imm = #4
     5a0:      	trap
     5a2:      	bmi	0x54e <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708+0x136> @ imm = #-88

000005a4 <max11619_adc::__cortex_m_rt_main::h2e9a6cd1b0437d7b>:
     5a4:      	push	{r7, lr}
     5a6:      	add	r7, sp, #0
     5a8:      	sub	sp, #120
     5aa:      	ldr	r6, [pc, #328] <$d.9+0x2>
     5ac:      	movs	r1, #48
     5ae:      	mov	r0, r6
     5b0:      	bl	0x30bc <__aeabi_memclr8> @ imm = #11016
     5b4:      	movs	r5, #1
     5b6:      	lsls	r0, r5, #10
     5b8:      	str	r0, [sp]
     5ba:      	adds	r6, #24
     5bc:      	ldr	r1, [pc, #312] <$d.9+0x4>
     5be:      	movs	r4, #0
     5c0:      	ldr	r3, [pc, #312] <$d.9+0x8>
     5c2:      	mov	r0, r6
     5c4:      	mov	r2, r4
     5c6:      	bl	0xaac <rtt_target::rtt::RttChannel::init::h161ee605c7839e7a> @ imm = #1250
     5ca:      	ldr	r0, [pc, #296] <$d.9+0x2>
     5cc:      	mov	r1, r5
     5ce:      	mov	r2, r4
     5d0:      	bl	0xa84 <rtt_target::rtt::RttHeader::init::hbc7f5d8502311a73> @ imm = #1200
     5d4:      	mov	r0, r6
     5d6:      	bl	0xe1c <rtt_target::UpChannel::new::h80d9d25389a46033> @ imm = #2114
     5da:      	bl	0xce4 <rtt_target::print::set_print_channel::h915b9b561c18c1c6> @ imm = #1798
     5de:      	ldr	r1, [pc, #288] <$d.9+0xe>
     5e0:      	movs	r2, #25
     5e2:      	str	r4, [sp, #28]
     5e4:      	mov	r0, r4
     5e6:      	bl	0xc5c <rtt_target::print::print_impl::write_str::hffb1f12b8b66fdee> @ imm = #1650
     5ea:      	bl	0x3e0 <va108xx::Peripherals::take::h619cff2eba763ceb> @ imm = #-526
     5ee:      	bl	0x3c0 <core::option::Option<T>::unwrap::h9eee7d40ec3eff5f> @ imm = #-562
     5f2:      	movs	r0, #50
     5f4:      	str	r0, [sp, #20]
     5f6:      	bl	0x97c <<u32 as va108xx_hal::time::U32Ext>::mhz::hacb2732941550405> @ imm = #898
     5fa:      	bl	0x108 <<T as core::convert::Into<U>>::into::hb25a0bfbd844ac2a> @ imm = #-1270
     5fe:      	mov	r3, r0
     600:      	str	r4, [sp]
     602:      	add	r4, sp, #32
     604:      	add	r1, sp, #116
     606:      	str	r1, [sp, #24]
     608:      	mov	r0, r4
     60a:      	mov	r2, r1
     60c:      	bl	0x82c <va108xx_hal::timer::set_up_ms_timer::hef188ac5bc4df8e7> @ imm = #540
     610:      	add	r1, sp, #96
     612:      	mov	r0, r1
     614:      	ldm	r4!, {r2, r3}
     616:      	stm	r0!, {r2, r3}
     618:      	ldm	r4!, {r2, r3, r6}
     61a:      	stm	r0!, {r2, r3, r6}
     61c:      	add	r0, sp, #52
     61e:      	str	r0, [sp, #16]
     620:      	bl	0x8f0 <va108xx_hal::timer::Delay::new::h0274059ca631680e> @ imm = #716
     624:      	ldr	r0, [pc, #220] <$d.9+0x10>
     626:      	str	r5, [r0]
     628:      	ldr	r0, [pc, #220] <$d.9+0x14>
     62a:      	ldr	r1, [r0]
     62c:      	ldr	r2, [pc, #220] <$d.9+0x18>
     62e:      	orrs	r2, r1
     630:      	str	r2, [r0]
     632:      	lsls	r2, r5, #14
     634:      	str	r2, [sp, #12]
     636:      	ldr	r3, [pc, #216] <$d.9+0x1e>
     638:      	str	r2, [r3, #16]
     63a:      	lsls	r0, r5, #20
     63c:      	ldr	r6, [pc, #212] <$d.9+0x20>
     63e:      	ldr	r1, [r6, #16]
     640:      	bics	r1, r0
     642:      	str	r1, [r6, #16]
     644:      	str	r2, [r3, #12]
     646:      	lsls	r0, r5, #19
     648:      	ldr	r1, [r6, #16]
     64a:      	bics	r1, r0
     64c:      	str	r1, [r6, #16]
     64e:      	str	r2, [r3, #8]
     650:      	lsls	r0, r5, #18
     652:      	ldr	r1, [r6, #16]
     654:      	bics	r1, r0
     656:      	str	r1, [r6, #16]
     658:      	movs	r2, #19
     65a:      	ldr	r4, [sp, #24]
     65c:      	mov	r0, r4
     65e:      	mov	r1, r5
     660:      	mov	r3, r5
     662:      	bl	0x92c <va108xx_hal::utility::port_mux::he673b384107ff95d> @ imm = #710
     666:      	movs	r2, #18
     668:      	mov	r0, r4
     66a:      	mov	r1, r5
     66c:      	mov	r3, r5
     66e:      	bl	0x92c <va108xx_hal::utility::port_mux::he673b384107ff95d> @ imm = #698
     672:      	movs	r2, #17
     674:      	mov	r0, r4
     676:      	mov	r1, r5
     678:      	mov	r3, r5
     67a:      	bl	0x92c <va108xx_hal::utility::port_mux::he673b384107ff95d> @ imm = #686
     67e:      	movs	r2, #16
     680:      	mov	r0, r4
     682:      	mov	r1, r5
     684:      	mov	r3, r5
     686:      	bl	0x92c <va108xx_hal::utility::port_mux::he673b384107ff95d> @ imm = #674
     68a:      	ldr	r0, [sp, #28]
     68c:      	ldr	r4, [pc, #128] <$d.9+0x1c>
     68e:      	str	r0, [r4]
     690:      	lsls	r0, r5, #16
     692:      	ldr	r1, [r6, #16]
     694:      	orrs	r1, r0
     696:      	str	r1, [r6, #16]
     698:      	str	r0, [r6, #4]
     69a:      	str	r0, [r6]
     69c:      	movs	r0, #3
     69e:      	bl	0x97c <<u32 as va108xx_hal::time::U32Ext>::mhz::hacb2732941550405> @ imm = #730
     6a2:      	ldr	r1, [sp, #12]
     6a4:      	str	r1, [r4, #4]
     6a6:      	lsls	r1, r5, #17
     6a8:      	ldr	r2, [r6, #16]
     6aa:      	bics	r2, r1
     6ac:      	str	r2, [r6, #16]
     6ae:      	bl	0x980 <<va108xx_hal::time::Hertz as core::convert::From<va108xx_hal::time::MegaHertz>>::from::h1147aa80a554a3b5> @ imm = #718
     6b2:      	mov	r4, r0
     6b4:      	ldr	r0, [sp, #20]
     6b6:      	bl	0x97c <<u32 as va108xx_hal::time::U32Ext>::mhz::hacb2732941550405> @ imm = #706
     6ba:      	mov	r1, r0
     6bc:      	add	r0, sp, #96
     6be:      	ldr	r3, [sp, #28]
     6c0:      	strb	r3, [r0, #8]
     6c2:      	lsls	r2, r5, #24
     6c4:      	str	r2, [sp, #100]
     6c6:      	str	r4, [sp, #96]
     6c8:      	ldr	r2, [sp, #24]
     6ca:      	str	r2, [sp]
     6cc:      	str	r0, [sp, #4]
     6ce:      	add	r4, sp, #72
     6d0:      	mov	r0, r4
     6d2:      	mov	r2, r3
     6d4:      	bl	0x114 <va108xx_hal::spi::Spi<va108xx::SPIB,(Sck,Miso,Mosi),WORD>::spib::h33dc600f51d55e4c> @ imm = #-1476
     6d8:      	add	r0, sp, #84
     6da:      	mov	r1, r0
     6dc:      	ldm	r4!, {r2, r3, r5}
     6de:      	stm	r1!, {r2, r3, r5}
     6e0:      	add	r1, sp, #96
     6e2:      	mov	r2, r1
     6e4:      	ldr	r6, [sp, #16]
     6e6:      	ldm	r6!, {r3, r4}
     6e8:      	stm	r2!, {r3, r4}
     6ea:      	ldm	r6!, {r3, r4, r5}
     6ec:      	stm	r2!, {r3, r4, r5}
     6ee:      	bl	0x418 <max11619_adc::spi_example_externally_clocked::h61d431dc84bdf708> @ imm = #-730
     6f2:      	trap

000006f4 <$d.9>:
     6f4:	00 00 00 10	.word	0x10000000
     6f8:	e8 35 00 00	.word	0x000035e8
     6fc:	30 00 00 10	.word	0x10000030
     700:	f1 35 00 00	.word	0x000035f1
     704:	00 e1 00 e0	.word	0xe000e100
     708:	7c 00 00 40	.word	0x4000007c
     70c:	01 00 40 01	.word	0x01400001
     710:	40 20 00 40	.word	0x40002040
     714:	10 00 00 50	.word	0x50000010

00000718 <OC0>:
     718:      	push	{r7, lr}
     71a:      	add	r7, sp, #0
     71c:      	bl	0x8a0 <va108xx_hal::timer::default_ms_irq_handler::he7f17ff31cf7bcc5> @ imm = #384
     720:      	pop	{r7, pc}

00000722 <dummy_pin::dummy::DummyPin::new_low::ha5c088a543349d0a>:
     722:      	bx	lr

00000724 <<u8 as va108xx_hal::spi::Word>::word_reg::h3132459577bda1d9>:
     724:      	movs	r0, #7
     726:      	bx	lr

00000728 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a>:
     728:      	push	{r4, r5, r6, r7, lr}
     72a:      	add	r7, sp, #12
     72c:      	sub	sp, #12
     72e:      	ldr	r4, [pc, #204] <$d.20+0x2>
     730:      	movs	r5, #2
     732:      	str	r5, [r4, #40]
     734:      	movs	r6, #1
     736:      	str	r6, [r4, #40]
     738:      	ldrb	r0, [r0, #9]
     73a:      	str	r0, [sp, #4]
     73c:      	cmp	r0, #0
     73e:      	beq	0x748 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x20> @ imm = #6
     740:      	lsls	r0, r6, #11
     742:      	ldr	r5, [r4]
     744:      	orrs	r5, r0
     746:      	str	r5, [r4]
     748:      	str	r6, [sp]
     74a:      	cmp	r2, #12
     74c:      	mov	r6, r2
     74e:      	blo	0x752 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x2a> @ imm = #0
     750:      	movs	r6, #12
     752:      	adds	r0, r1, r2
     754:      	cmp	r6, #0
     756:      	beq	0x774 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x4c> @ imm = #26
     758:      	movs	r2, #0
     75a:      	str	r6, [sp, #8]
     75c:      	adds	r2, r2, #1
     75e:      	cmp	r1, r0
     760:      	beq	0x7f0 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xc8> @ imm = #140
     762:      	ldrb	r6, [r1]
     764:      	adds	r1, r1, #1
     766:      	ldr	r5, [r4, #8]
     768:      	lsls	r5, r5, #30
     76a:      	bpl	0x75e <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x36> @ imm = #-16
     76c:      	str	r6, [r4, #4]
     76e:      	ldr	r6, [sp, #8]
     770:      	cmp	r2, r6
     772:      	bne	0x75c <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x34> @ imm = #-26
     774:      	ldr	r2, [sp, #4]
     776:      	cmp	r2, #0
     778:      	beq	0x784 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x5c> @ imm = #8
     77a:      	ldr	r2, [sp]
     77c:      	lsls	r2, r2, #11
     77e:      	ldr	r5, [r4]
     780:      	bics	r5, r2
     782:      	str	r5, [r4]
     784:      	cmp	r3, #0
     786:      	beq	0x7d4 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xac> @ imm = #74
     788:      	ldr	r2, [r7, #8]
     78a:      	adds	r2, r3, r2
     78c:      	cmp	r1, r0
     78e:      	beq	0x7ba <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x92> @ imm = #40
     790:      	ldrb	r5, [r1]
     792:      	ldr	r6, [r4, #8]
     794:      	lsls	r6, r6, #30
     796:      	bpl	0x792 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x6a> @ imm = #-8
     798:      	str	r5, [r4, #4]
     79a:      	ldr	r5, [r4, #8]
     79c:      	lsls	r5, r5, #29
     79e:      	bpl	0x79a <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x72> @ imm = #-8
     7a0:      	ldr	r5, [r4, #4]
     7a2:      	cmp	r3, r2
     7a4:      	beq	0x7f0 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xc8> @ imm = #72
     7a6:      	adds	r1, r1, #1
     7a8:      	strb	r5, [r3]
     7aa:      	adds	r3, r3, #1
     7ac:      	b	0x78c <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x64> @ imm = #-36
     7ae:      	ldr	r0, [r4, #8]
     7b0:      	lsls	r0, r0, #29
     7b2:      	bpl	0x7ae <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x86> @ imm = #-8
     7b4:      	ldr	r0, [r4, #4]
     7b6:      	strb	r0, [r3]
     7b8:      	adds	r3, r3, #1
     7ba:      	cmp	r3, r2
     7bc:      	bne	0x7ae <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x86> @ imm = #-18
     7be:      	b	0x7ec <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xc4> @ imm = #42
     7c0:      	ldrb	r2, [r1]
     7c2:      	ldr	r3, [r4, #8]
     7c4:      	lsls	r3, r3, #30
     7c6:      	bpl	0x7c2 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x9a> @ imm = #-8
     7c8:      	str	r2, [r4, #4]
     7ca:      	ldr	r2, [r4, #8]
     7cc:      	lsls	r2, r2, #29
     7ce:      	bpl	0x7ca <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xa2> @ imm = #-8
     7d0:      	ldr	r2, [r4, #4]
     7d2:      	adds	r1, r1, #1
     7d4:      	cmp	r1, r0
     7d6:      	bne	0x7c0 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0x98> @ imm = #-26
     7d8:      	cmp	r6, #0
     7da:      	beq	0x7ec <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xc4> @ imm = #14
     7dc:      	movs	r0, #0
     7de:      	ldr	r1, [r4, #8]
     7e0:      	lsls	r1, r1, #29
     7e2:      	bpl	0x7de <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xb6> @ imm = #-8
     7e4:      	ldr	r1, [r4, #4]
     7e6:      	adds	r0, r0, #1
     7e8:      	cmp	r0, r6
     7ea:      	bne	0x7de <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xb6> @ imm = #-16
     7ec:      	add	sp, #12
     7ee:      	pop	{r4, r5, r6, r7, pc}
     7f0:      	ldr	r0, [pc, #12] <$d.20+0x4>
     7f2:      	movs	r1, #43
     7f4:      	ldr	r2, [pc, #12] <$d.20+0x8>
     7f6:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #2398
     7fa:      	trap

000007fc <$d.20>:
     7fc:	04 10 05 40	.word	0x40051004
     800:	1c 36 00 00	.word	0x0000361c
     804:	a4 36 00 00	.word	0x000036a4

00000808 <<va108xx_hal::spi::SpiBase<va108xx::SPIB> as embedded_hal::blocking::spi::Transfer<u8>>::transfer::h46aca6f4a661c25a>:
     808:      	push	{r4, r5, r7, lr}
     80a:      	add	r7, sp, #8
     80c:      	sub	sp, #8
     80e:      	mov	r4, r2
     810:      	mov	r5, r1
     812:      	cmp	r2, #0
     814:      	beq	0x822 <<va108xx_hal::spi::SpiBase<va108xx::SPIB> as embedded_hal::blocking::spi::Transfer<u8>>::transfer::h46aca6f4a661c25a+0x1a> @ imm = #10
     816:      	str	r4, [sp]
     818:      	mov	r1, r5
     81a:      	mov	r2, r4
     81c:      	mov	r3, r5
     81e:      	bl	0x728 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a> @ imm = #-250
     822:      	mov	r0, r5
     824:      	mov	r1, r4
     826:      	add	sp, #8
     828:      	pop	{r4, r5, r7, pc}
     82a:      	bmi	0x7d6 <va108xx_hal::spi::SpiBase<va108xx::SPIB>::transfer_internal::hbeb81ca672a34a3a+0xae> @ imm = #-88

0000082c <va108xx_hal::timer::set_up_ms_timer::hef188ac5bc4df8e7>:
     82c:      	push	{r4, r5, r6, r7, lr}
     82e:      	add	r7, sp, #12
     830:      	sub	sp, #4
     832:      	str	r3, [sp]
     834:      	mov	r4, r0
     836:      	ldr	r0, [pc, #92] <$d.13+0x2>
     838:      	ldr	r1, [r0]
     83a:      	movs	r5, #1
     83c:      	orrs	r1, r5
     83e:      	str	r1, [r0]
     840:      	ldr	r6, [pc, #84] <$d.13+0x4>
     842:      	ldr	r1, [r6]
     844:      	orrs	r1, r5
     846:      	str	r1, [r6]
     848:      	lsls	r1, r5, #21
     84a:      	ldr	r2, [r0, #8]
     84c:      	orrs	r2, r1
     84e:      	str	r2, [r0, #8]
     850:      	adds	r0, r7, #7
     852:      	adds	r0, #1
     854:      	ldrh	r0, [r0]
     856:      	ldr	r1, [pc, #68] <$d.13+0xa>
     858:      	str	r0, [r1]
     85a:      	ldr	r0, [r6]
     85c:      	movs	r1, #16
     85e:      	orrs	r1, r0
     860:      	str	r1, [r6]
     862:      	ldr	r0, [r6]
     864:      	bics	r0, r5
     866:      	str	r0, [r6]
     868:      	movs	r0, #125
     86a:      	lsls	r6, r0, #3
     86c:      	mov	r0, r3
     86e:      	mov	r1, r6
     870:      	bl	0x2f8c <__aeabi_uidiv>  @ imm = #10008
     874:      	ldr	r2, [pc, #32] <$d.13+0x4>
     876:      	str	r0, [r2, #4]
     878:      	str	r0, [r2, #8]
     87a:      	movs	r1, #0
     87c:      	strb	r5, [r4, #16]
     87e:      	str	r6, [r4]
     880:      	ldr	r3, [sp]
     882:      	str	r3, [r4, #4]
     884:      	str	r0, [r4, #8]
     886:      	str	r1, [r4, #12]
     888:      	ldr	r0, [r2]
     88a:      	orrs	r0, r5
     88c:      	str	r0, [r2]
     88e:      	add	sp, #4
     890:      	pop	{r4, r5, r6, r7, pc}
     892:      	mov	r8, r8

00000894 <$d.13>:
     894:	74 00 00 40	.word	0x40000074
     898:	00 00 02 40	.word	0x40020000
     89c:	00 11 00 40	.word	0x40001100

000008a0 <va108xx_hal::timer::default_ms_irq_handler::he7f17ff31cf7bcc5>:
     8a0:      	push	{r4, r6, r7, lr}
     8a2:      	add	r7, sp, #8
     8a4:      	bl	0xf74 <__primask_r>     @ imm = #1740
     8a8:      	mov	r4, r0
     8aa:      	bl	0xf68 <__cpsid>         @ imm = #1722
     8ae:      	bl	0xf7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb> @ imm = #1736
     8b2:      	ldr	r0, [pc, #16] <$d.15+0x2>
     8b4:      	ldr	r1, [r0]
     8b6:      	adds	r1, r1, #1
     8b8:      	str	r1, [r0]
     8ba:      	lsls	r0, r4, #31
     8bc:      	bne	0x8c2 <va108xx_hal::timer::default_ms_irq_handler::he7f17ff31cf7bcc5+0x22> @ imm = #2
     8be:      	bl	0xf6c <__cpsie>         @ imm = #1706
     8c2:      	pop	{r4, r6, r7, pc}

000008c4 <$d.15>:
     8c4:	30 04 00 10	.word	0x10000430

000008c8 <va108xx_hal::timer::get_ms_ticks::h8a9a7e50fa2ed0f8>:
     8c8:      	push	{r4, r5, r7, lr}
     8ca:      	add	r7, sp, #8
     8cc:      	bl	0xf74 <__primask_r>     @ imm = #1700
     8d0:      	mov	r5, r0
     8d2:      	bl	0xf68 <__cpsid>         @ imm = #1682
     8d6:      	bl	0xf7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb> @ imm = #1696
     8da:      	ldr	r0, [pc, #16] <$d.17+0x2>
     8dc:      	ldr	r4, [r0]
     8de:      	lsls	r0, r5, #31
     8e0:      	bne	0x8e6 <va108xx_hal::timer::get_ms_ticks::h8a9a7e50fa2ed0f8+0x1e> @ imm = #2
     8e2:      	bl	0xf6c <__cpsie>         @ imm = #1670
     8e6:      	mov	r0, r4
     8e8:      	pop	{r4, r5, r7, pc}
     8ea:      	mov	r8, r8

000008ec <$d.17>:
     8ec:	30 04 00 10	.word	0x10000430

000008f0 <va108xx_hal::timer::Delay::new::h0274059ca631680e>:
     8f0:      	push	{r4, r6, r7, lr}
     8f2:      	add	r7, sp, #8
     8f4:      	ldm	r1!, {r2, r3}
     8f6:      	stm	r0!, {r2, r3}
     8f8:      	ldm	r1!, {r2, r3, r4}
     8fa:      	stm	r0!, {r2, r3, r4}
     8fc:      	pop	{r4, r6, r7, pc}

000008fe <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73>:
     8fe:      	push	{r4, r5, r7, lr}
     900:      	add	r7, sp, #8
     902:      	mov	r4, r1
     904:      	movs	r1, #125
     906:      	lsls	r1, r1, #3
     908:      	ldr	r2, [r0]
     90a:      	cmp	r2, r1
     90c:      	bne	0x92a <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73+0x2c> @ imm = #26
     90e:      	ldrb	r0, [r0, #16]
     910:      	cmp	r0, #0
     912:      	beq	0x92a <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73+0x2c> @ imm = #20
     914:      	bl	0x8c8 <va108xx_hal::timer::get_ms_ticks::h8a9a7e50fa2ed0f8> @ imm = #-80
     918:      	mov	r5, r0
     91a:      	bl	0x8c8 <va108xx_hal::timer::get_ms_ticks::h8a9a7e50fa2ed0f8> @ imm = #-86
     91e:      	subs	r0, r0, r5
     920:      	cmp	r0, r4
     922:      	bhs	0x92a <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73+0x2c> @ imm = #4
     924:      	bl	0xf70 <__nop>           @ imm = #1608
     928:      	b	0x91a <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73+0x1c> @ imm = #-18
     92a:      	pop	{r4, r5, r7, pc}

0000092c <va108xx_hal::utility::port_mux::he673b384107ff95d>:
     92c:      	push	{r4, r6, r7, lr}
     92e:      	add	r7, sp, #8
     930:      	ldr	r0, [pc, #48] <$d.13>
     932:      	cmp	r1, #0
     934:      	beq	0x940 <va108xx_hal::utility::port_mux::he673b384107ff95d+0x14> @ imm = #8
     936:      	uxtb	r1, r2
     938:      	cmp	r1, #23
     93a:      	bhi	0x946 <va108xx_hal::utility::port_mux::he673b384107ff95d+0x1a> @ imm = #8
     93c:      	adds	r0, #128
     93e:      	b	0x94a <va108xx_hal::utility::port_mux::he673b384107ff95d+0x1e> @ imm = #8
     940:      	uxtb	r1, r2
     942:      	cmp	r1, #31
     944:      	bls	0x94a <va108xx_hal::utility::port_mux::he673b384107ff95d+0x1e> @ imm = #2
     946:      	movs	r0, #1
     948:      	pop	{r4, r6, r7, pc}
     94a:      	uxtb	r1, r2
     94c:      	lsls	r1, r1, #2
     94e:      	ldr	r2, [r0, r1]
     950:      	movs	r4, #7
     952:      	lsls	r4, r4, #13
     954:      	bics	r2, r4
     956:      	uxtb	r3, r3
     958:      	lsls	r3, r3, #13
     95a:      	orrs	r3, r2
     95c:      	str	r3, [r0, r1]
     95e:      	movs	r0, #2
     960:      	pop	{r4, r6, r7, pc}
     962:      	mov	r8, r8

00000964 <$d.13>:
     964:	00 20 00 40	.word	0x40002000

00000968 <va108xx_hal::clock::enable_peripheral_clock::hc38ebef0d89f3d24>:
     968:      	uxtb	r0, r1
     96a:      	movs	r1, #1
     96c:      	lsls	r1, r0
     96e:      	ldr	r0, [pc, #8] <$d.7+0x2>
     970:      	ldr	r2, [r0]
     972:      	orrs	r2, r1
     974:      	str	r2, [r0]
     976:      	bx	lr

00000978 <$d.7>:
     978:	7c 00 00 40	.word	0x4000007c

0000097c <<u32 as va108xx_hal::time::U32Ext>::mhz::hacb2732941550405>:
     97c:      	bx	lr
     97e:      	bmi	0x92a <<va108xx_hal::timer::Delay as embedded_hal::blocking::delay::DelayMs<u32>>::delay_ms::h809c2c3943c5cc73+0x2c> @ imm = #-88

00000980 <<va108xx_hal::time::Hertz as core::convert::From<va108xx_hal::time::MegaHertz>>::from::h1147aa80a554a3b5>:
     980:      	ldr	r1, [pc, #4] <$d.11>
     982:      	muls	r0, r1, r0
     984:      	bx	lr
     986:      	mov	r8, r8

00000988 <$d.11>:
     988:	40 42 0f 00	.word	0x000f4240

0000098c <core::fmt::Write::write_char::h7a0176094cedcc9c>:
     98c:      	push	{r4, r5, r7, lr}
     98e:      	add	r7, sp, #8
     990:      	sub	sp, #8
     992:      	movs	r4, #0
     994:      	str	r4, [sp, #4]
     996:      	cmp	r1, #128
     998:      	bhs	0x9a2 <core::fmt::Write::write_char::h7a0176094cedcc9c+0x16> @ imm = #6
     99a:      	add	r2, sp, #4
     99c:      	strb	r1, [r2]
     99e:      	movs	r3, #1
     9a0:      	b	0xa02 <core::fmt::Write::write_char::h7a0176094cedcc9c+0x76> @ imm = #94
     9a2:      	lsrs	r2, r1, #11
     9a4:      	bne	0x9bc <core::fmt::Write::write_char::h7a0176094cedcc9c+0x30> @ imm = #20
     9a6:      	movs	r2, #63
     9a8:      	ands	r2, r1
     9aa:      	adds	r2, #128
     9ac:      	add	r3, sp, #4
     9ae:      	strb	r2, [r3, #1]
     9b0:      	lsrs	r1, r1, #6
     9b2:      	movs	r2, #192
     9b4:      	orrs	r2, r1
     9b6:      	strb	r2, [r3]
     9b8:      	movs	r3, #2
     9ba:      	b	0xa02 <core::fmt::Write::write_char::h7a0176094cedcc9c+0x76> @ imm = #68
     9bc:      	lsrs	r2, r1, #16
     9be:      	bne	0x9de <core::fmt::Write::write_char::h7a0176094cedcc9c+0x52> @ imm = #28
     9c0:      	movs	r2, #63
     9c2:      	ands	r2, r1
     9c4:      	adds	r2, #128
     9c6:      	add	r3, sp, #4
     9c8:      	strb	r2, [r3, #2]
     9ca:      	lsrs	r2, r1, #12
     9cc:      	movs	r5, #224
     9ce:      	orrs	r5, r2
     9d0:      	strb	r5, [r3]
     9d2:      	lsls	r1, r1, #20
     9d4:      	lsrs	r1, r1, #26
     9d6:      	adds	r1, #128
     9d8:      	strb	r1, [r3, #1]
     9da:      	movs	r3, #3
     9dc:      	b	0xa02 <core::fmt::Write::write_char::h7a0176094cedcc9c+0x76> @ imm = #34
     9de:      	movs	r2, #63
     9e0:      	ands	r2, r1
     9e2:      	adds	r2, #128
     9e4:      	add	r3, sp, #4
     9e6:      	strb	r2, [r3, #3]
     9e8:      	lsrs	r2, r1, #18
     9ea:      	movs	r5, #240
     9ec:      	orrs	r5, r2
     9ee:      	strb	r5, [r3]
     9f0:      	lsls	r2, r1, #20
     9f2:      	lsrs	r2, r2, #26
     9f4:      	adds	r2, #128
     9f6:      	strb	r2, [r3, #2]
     9f8:      	lsls	r1, r1, #14
     9fa:      	lsrs	r1, r1, #26
     9fc:      	adds	r1, #128
     9fe:      	strb	r1, [r3, #1]
     a00:      	movs	r3, #4
     a02:      	ldr	r1, [r0]
     a04:      	ldr	r1, [r1, #20]
     a06:      	movs	r2, #3
     a08:      	ands	r2, r1
     a0a:      	cmp	r2, #3
     a0c:      	mov	r1, r4
     a0e:      	beq	0xa12 <core::fmt::Write::write_char::h7a0176094cedcc9c+0x86> @ imm = #0
     a10:      	mov	r1, r2
     a12:      	dmb	sy
     a16:      	add	r2, sp, #4
     a18:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #180
     a1c:      	mov	r0, r4
     a1e:      	add	sp, #8
     a20:      	pop	{r4, r5, r7, pc}

00000a22 <core::ptr::drop_in_place<&mut rtt_target::rtt::RttWriter>::h2373b162496a6caa.llvm.15490236308705792425>:
     a22:      	bx	lr

00000a24 <<&mut W as core::fmt::Write>::write_char::h25eb2ee977acf95a>:
     a24:      	push	{r7, lr}
     a26:      	add	r7, sp, #0
     a28:      	ldr	r0, [r0]
     a2a:      	bl	0x98c <core::fmt::Write::write_char::h7a0176094cedcc9c> @ imm = #-162
     a2e:      	movs	r0, #0
     a30:      	pop	{r7, pc}
     a32:      	bmi	0x9de <core::fmt::Write::write_char::h7a0176094cedcc9c+0x52> @ imm = #-88

00000a34 <<&mut W as core::fmt::Write>::write_fmt::h08666185ad18b64f>:
     a34:      	push	{r4, r5, r7, lr}
     a36:      	add	r7, sp, #8
     a38:      	sub	sp, #32
     a3a:      	ldr	r0, [r0]
     a3c:      	str	r0, [sp, #4]
     a3e:      	add	r2, sp, #8
     a40:      	mov	r0, r2
     a42:      	ldm	r1!, {r3, r4, r5}
     a44:      	stm	r0!, {r3, r4, r5}
     a46:      	ldm	r1!, {r3, r4, r5}
     a48:      	stm	r0!, {r3, r4, r5}
     a4a:      	add	r0, sp, #4
     a4c:      	ldr	r1, [pc, #8] <$d.6>
     a4e:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #3482
     a52:      	add	sp, #32
     a54:      	pop	{r4, r5, r7, pc}
     a56:      	mov	r8, r8

00000a58 <$d.6>:
     a58:	b4 36 00 00	.word	0x000036b4

00000a5c <<&mut W as core::fmt::Write>::write_str::h83381b8399787eb9>:
     a5c:      	push	{r4, r5, r7, lr}
     a5e:      	add	r7, sp, #8
     a60:      	mov	r3, r2
     a62:      	mov	r2, r1
     a64:      	ldr	r0, [r0]
     a66:      	ldr	r1, [r0]
     a68:      	ldr	r1, [r1, #20]
     a6a:      	movs	r5, #3
     a6c:      	ands	r5, r1
     a6e:      	movs	r4, #0
     a70:      	cmp	r5, #3
     a72:      	mov	r1, r4
     a74:      	beq	0xa78 <<&mut W as core::fmt::Write>::write_str::h83381b8399787eb9+0x1c> @ imm = #0
     a76:      	mov	r1, r5
     a78:      	dmb	sy
     a7c:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #80
     a80:      	mov	r0, r4
     a82:      	pop	{r4, r5, r7, pc}

00000a84 <rtt_target::rtt::RttHeader::init::hbc7f5d8502311a73>:
     a84:      	push	{r4, r6, r7, lr}
     a86:      	add	r7, sp, #8
     a88:      	mov	r4, r0
     a8a:      	str	r1, [r0, #16]
     a8c:      	str	r2, [r0, #20]
     a8e:      	ldr	r1, [pc, #20] <$d.9+0x2>
     a90:      	movs	r2, #5
     a92:      	bl	0x3034 <__aeabi_memcpy> @ imm = #9630
     a96:      	dmb	sy
     a9a:      	adds	r0, r4, #4
     a9c:      	ldr	r1, [pc, #8] <$d.9+0x4>
     a9e:      	ldm	r1!, {r2, r3, r4}
     aa0:      	stm	r0!, {r2, r3, r4}
     aa2:      	pop	{r4, r6, r7, pc}

00000aa4 <$d.9>:
     aa4:	cc 36 00 00	.word	0x000036cc
     aa8:	d4 36 00 00	.word	0x000036d4

00000aac <rtt_target::rtt::RttChannel::init::h161ee605c7839e7a>:
     aac:      	push	{r4, r6, r7, lr}
     aae:      	add	r7, sp, #8
     ab0:      	str	r1, [r0]
     ab2:      	ldr	r1, [r7, #8]
     ab4:      	str	r1, [r0, #8]
     ab6:      	ldr	r1, [r0, #20]
     ab8:      	movs	r4, #3
     aba:      	bics	r1, r4
     abc:      	orrs	r1, r2
     abe:      	dmb	sy
     ac2:      	dmb	sy
     ac6:      	str	r1, [r0, #20]
     ac8:      	dmb	sy
     acc:      	str	r3, [r0, #4]
     ace:      	pop	{r4, r6, r7, pc}

00000ad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a>:
     ad0:      	push	{r4, r5, r6, r7, lr}
     ad2:      	add	r7, sp, #12
     ad4:      	sub	sp, #20
     ad6:      	str	r3, [sp, #16]
     ad8:      	str	r2, [sp, #8]
     ada:      	str	r1, [sp, #12]
     adc:      	mov	r5, r0
     ade:      	ldrb	r0, [r0, #12]
     ae0:      	cmp	r0, #0
     ae2:      	bne	0xba8 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd8> @ imm = #194
     ae4:      	ldr	r0, [sp, #16]
     ae6:      	cmp	r0, #0
     ae8:      	beq	0xba8 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd8> @ imm = #188
     aea:      	ldr	r0, [r5]
     aec:      	ldr	r3, [r0, #12]
     aee:      	dmb	sy
     af2:      	ldr	r1, [r0, #16]
     af4:      	dmb	sy
     af8:      	ldr	r2, [r0, #8]
     afa:      	cmp	r3, r2
     afc:      	bhs	0xb0c <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x3c> @ imm = #12
     afe:      	cmp	r1, r2
     b00:      	bhs	0xb0c <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x3c> @ imm = #8
     b02:      	ldr	r6, [r5, #4]
     b04:      	cmp	r1, r6
     b06:      	bls	0xb52 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x82> @ imm = #72
     b08:      	mvns	r0, r6
     b0a:      	b	0xb2a <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x5a> @ imm = #28
     b0c:      	dmb	sy
     b10:      	movs	r1, #0
     b12:      	str	r1, [r0, #12]
     b14:      	dmb	sy
     b18:      	dmb	sy
     b1c:      	str	r1, [r0, #16]
     b1e:      	dmb	sy
     b22:      	ldr	r6, [r5, #4]
     b24:      	mvns	r0, r6
     b26:      	ldr	r1, [r5]
     b28:      	ldr	r1, [r1, #8]
     b2a:      	adds	r0, r1, r0
     b2c:      	ldr	r4, [sp, #16]
     b2e:      	cmp	r0, r4
     b30:      	bhi	0xb34 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x64> @ imm = #0
     b32:      	mov	r4, r0
     b34:      	cmp	r4, #0
     b36:      	bne	0xb68 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x98> @ imm = #46
     b38:      	ldr	r0, [sp, #12]
     b3a:      	cmp	r0, #2
     b3c:      	bne	0xb5e <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x8e> @ imm = #30
     b3e:      	ldr	r0, [r5]
     b40:      	dmb	sy
     b44:      	str	r6, [r0, #12]
     b46:      	dmb	sy
     b4a:      	ldrb	r0, [r5, #12]
     b4c:      	cmp	r0, #0
     b4e:      	beq	0xaea <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x1a> @ imm = #-104
     b50:      	b	0xba8 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd8> @ imm = #84
     b52:      	cmp	r1, #0
     b54:      	beq	0xb24 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x54> @ imm = #-52
     b56:      	ldr	r0, [r5]
     b58:      	ldr	r0, [r0, #8]
     b5a:      	subs	r0, r0, r6
     b5c:      	b	0xb2c <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x5c> @ imm = #-52
     b5e:      	ldr	r0, [sp, #12]
     b60:      	cmp	r0, #0
     b62:      	beq	0xba4 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd4> @ imm = #62
     b64:      	movs	r0, #1
     b66:      	strb	r0, [r5, #12]
     b68:      	ldr	r0, [r5]
     b6a:      	str	r0, [sp, #4]
     b6c:      	ldr	r0, [r0, #4]
     b6e:      	adds	r0, r0, r6
     b70:      	ldr	r1, [sp, #8]
     b72:      	mov	r2, r4
     b74:      	bl	0x3034 <__aeabi_memcpy> @ imm = #9404
     b78:      	adds	r0, r4, r6
     b7a:      	str	r0, [r5, #4]
     b7c:      	ldr	r1, [r5, #8]
     b7e:      	adds	r1, r1, r4
     b80:      	str	r1, [r5, #8]
     b82:      	ldr	r1, [sp, #4]
     b84:      	ldr	r1, [r1, #8]
     b86:      	cmp	r0, r1
     b88:      	blo	0xb8e <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xbe> @ imm = #2
     b8a:      	movs	r0, #0
     b8c:      	str	r0, [r5, #4]
     b8e:      	ldrb	r0, [r5, #12]
     b90:      	cmp	r0, #0
     b92:      	bne	0xba8 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd8> @ imm = #18
     b94:      	ldr	r0, [sp, #8]
     b96:      	adds	r0, r0, r4
     b98:      	str	r0, [sp, #8]
     b9a:      	ldr	r0, [sp, #16]
     b9c:      	subs	r0, r0, r4
     b9e:      	str	r0, [sp, #16]
     ba0:      	bne	0xaea <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0x1a> @ imm = #-186
     ba2:      	b	0xba8 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a+0xd8> @ imm = #2
     ba4:      	movs	r0, #2
     ba6:      	strb	r0, [r5, #12]
     ba8:      	add	sp, #20
     baa:      	pop	{r4, r5, r6, r7, pc}

00000bac <core::ops::function::FnOnce::call_once::h8fab4f7c68b3bb9c>:
     bac:      	push	{r4, r5, r6, r7, lr}
     bae:      	add	r7, sp, #12
     bb0:      	sub	sp, #52
     bb2:      	mov	r5, r0
     bb4:      	ldrb	r2, [r0]
     bb6:      	mov	r4, sp
     bb8:      	ldr	r1, [pc, #68] <$d.1>
     bba:      	mov	r0, r4
     bbc:      	bl	0xec8 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6> @ imm = #776
     bc0:      	ldr	r0, [r5, #4]
     bc2:      	str	r4, [sp, #24]
     bc4:      	add	r2, sp, #28
     bc6:      	mov	r1, r2
     bc8:      	ldm	r0!, {r3, r5, r6}
     bca:      	stm	r1!, {r3, r5, r6}
     bcc:      	ldm	r0!, {r3, r5, r6}
     bce:      	stm	r1!, {r3, r5, r6}
     bd0:      	add	r0, sp, #24
     bd2:      	ldr	r1, [pc, #48] <$d.1+0x6>
     bd4:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #3092
     bd8:      	ldrb	r0, [r4, #12]
     bda:      	cmp	r0, #2
     bdc:      	bne	0xbec <core::ops::function::FnOnce::call_once::h8fab4f7c68b3bb9c+0x40> @ imm = #12
     bde:      	ldr	r0, [sp, #16]
     be0:      	ldr	r1, [sp, #20]
     be2:      	strb	r1, [r0]
     be4:      	mov	r0, sp
     be6:      	ldrb	r0, [r0, #12]
     be8:      	cmp	r0, #1
     bea:      	bhi	0xbfa <core::ops::function::FnOnce::call_once::h8fab4f7c68b3bb9c+0x4e> @ imm = #12
     bec:      	ldr	r0, [sp, #4]
     bee:      	ldr	r1, [sp]
     bf0:      	dmb	sy
     bf4:      	str	r0, [r1, #12]
     bf6:      	dmb	sy
     bfa:      	add	sp, #52
     bfc:      	pop	{r4, r5, r6, r7, pc}
     bfe:      	mov	r8, r8

00000c00 <$d.1>:
     c00:	3c 04 00 10	.word	0x1000043c
     c04:	e4 36 00 00	.word	0x000036e4

00000c08 <core::ops::function::FnOnce::call_once::hc621b782223ca8c8>:
     c08:      	push	{r4, r5, r7, lr}
     c0a:      	add	r7, sp, #8
     c0c:      	sub	sp, #24
     c0e:      	mov	r5, r0
     c10:      	ldrb	r2, [r0]
     c12:      	mov	r4, sp
     c14:      	ldr	r1, [pc, #64] <$d.3>
     c16:      	mov	r0, r4
     c18:      	bl	0xec8 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6> @ imm = #684
     c1c:      	ldr	r0, [r5, #4]
     c1e:      	ldm	r0!, {r2, r3}
     c20:      	ldr	r0, [sp]
     c22:      	ldr	r0, [r0, #20]
     c24:      	movs	r1, #3
     c26:      	ands	r1, r0
     c28:      	cmp	r1, #3
     c2a:      	bne	0xc2e <core::ops::function::FnOnce::call_once::hc621b782223ca8c8+0x26> @ imm = #0
     c2c:      	movs	r1, #0
     c2e:      	dmb	sy
     c32:      	mov	r0, r4
     c34:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #-360
     c38:      	ldrb	r0, [r4, #12]
     c3a:      	cmp	r0, #2
     c3c:      	bne	0xc46 <core::ops::function::FnOnce::call_once::hc621b782223ca8c8+0x3e> @ imm = #6
     c3e:      	ldr	r0, [sp, #16]
     c40:      	ldr	r1, [sp, #20]
     c42:      	strb	r1, [r0]
     c44:      	b	0xc54 <core::ops::function::FnOnce::call_once::hc621b782223ca8c8+0x4c> @ imm = #12
     c46:      	ldr	r0, [sp, #4]
     c48:      	ldr	r1, [sp]
     c4a:      	dmb	sy
     c4e:      	str	r0, [r1, #12]
     c50:      	dmb	sy
     c54:      	add	sp, #24
     c56:      	pop	{r4, r5, r7, pc}

00000c58 <$d.3>:
     c58:	3c 04 00 10	.word	0x1000043c

00000c5c <rtt_target::print::print_impl::write_str::hffb1f12b8b66fdee>:
     c5c:      	push	{r7, lr}
     c5e:      	add	r7, sp, #0
     c60:      	sub	sp, #16
     c62:      	str	r2, [sp, #4]
     c64:      	str	r1, [sp]
     c66:      	ldr	r1, [pc, #32] <$d.5+0x2>
     c68:      	ldr	r1, [r1]
     c6a:      	dmb	sy
     c6e:      	cmp	r1, #0
     c70:      	beq	0xc82 <rtt_target::print::print_impl::write_str::hffb1f12b8b66fdee+0x26> @ imm = #14
     c72:      	add	r2, sp, #8
     c74:      	strb	r0, [r2]
     c76:      	mov	r0, sp
     c78:      	str	r0, [sp, #12]
     c7a:      	ldr	r3, [r1]
     c7c:      	ldr	r1, [pc, #12] <$d.5+0x4>
     c7e:      	mov	r0, r2
     c80:      	blx	r3
     c82:      	add	sp, #16
     c84:      	pop	{r7, pc}
     c86:      	mov	r8, r8

00000c88 <$d.5>:
     c88:	38 04 00 10	.word	0x10000438
     c8c:	09 0c 00 00	.word	0x00000c09

00000c90 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545>:
     c90:      	push	{r7, lr}
     c92:      	add	r7, sp, #0
     c94:      	sub	sp, #8
     c96:      	ldr	r2, [pc, #28] <$d.7+0x2>
     c98:      	ldr	r3, [r2]
     c9a:      	dmb	sy
     c9e:      	cmp	r3, #0
     ca0:      	beq	0xcb0 <rtt_target::print::print_impl::write_fmt::h1a63b2b8c364c545+0x20> @ imm = #12
     ca2:      	mov	r2, sp
     ca4:      	strb	r0, [r2]
     ca6:      	str	r1, [sp, #4]
     ca8:      	ldr	r3, [r3]
     caa:      	ldr	r1, [pc, #12] <$d.7+0x6>
     cac:      	mov	r0, r2
     cae:      	blx	r3
     cb0:      	add	sp, #8
     cb2:      	pop	{r7, pc}

00000cb4 <$d.7>:
     cb4:	38 04 00 10	.word	0x10000438
     cb8:	ad 0b 00 00	.word	0x00000bad

00000cbc <core::ops::function::FnOnce::call_once::heb11b3173c79ba40>:
     cbc:      	push	{r4, r5, r6, r7, lr}
     cbe:      	add	r7, sp, #12
     cc0:      	sub	sp, #4
     cc2:      	mov	r4, r1
     cc4:      	mov	r5, r0
     cc6:      	bl	0xf74 <__primask_r>     @ imm = #682
     cca:      	mov	r6, r0
     ccc:      	bl	0xf68 <__cpsid>         @ imm = #664
     cd0:      	bl	0xf7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb> @ imm = #678
     cd4:      	mov	r0, r5
     cd6:      	blx	r4
     cd8:      	lsls	r0, r6, #31
     cda:      	bne	0xce0 <core::ops::function::FnOnce::call_once::heb11b3173c79ba40+0x24> @ imm = #2
     cdc:      	bl	0xf6c <__cpsie>         @ imm = #652
     ce0:      	add	sp, #4
     ce2:      	pop	{r4, r5, r6, r7, pc}

00000ce4 <rtt_target::print::set_print_channel::h915b9b561c18c1c6>:
     ce4:      	push	{r4, r5, r7, lr}
     ce6:      	add	r7, sp, #8
     ce8:      	mov	r4, r0
     cea:      	bl	0xf74 <__primask_r>     @ imm = #646
     cee:      	mov	r5, r0
     cf0:      	bl	0xf68 <__cpsid>         @ imm = #628
     cf4:      	bl	0xf7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb> @ imm = #642
     cf8:      	ldr	r0, [pc, #28] <$d.6>
     cfa:      	movs	r1, #0
     cfc:      	strb	r1, [r0, #4]
     cfe:      	str	r4, [r0]
     d00:      	lsls	r0, r5, #31
     d02:      	bne	0xd08 <rtt_target::print::set_print_channel::h915b9b561c18c1c6+0x24> @ imm = #2
     d04:      	bl	0xf6c <__cpsie>         @ imm = #612
     d08:      	dmb	sy
     d0c:      	ldr	r0, [pc, #12] <$d.6+0x4>
     d0e:      	ldr	r1, [pc, #16] <$d.6+0xa>
     d10:      	str	r1, [r0]
     d12:      	dmb	sy
     d16:      	pop	{r4, r5, r7, pc}

00000d18 <$d.6>:
     d18:	3c 04 00 10	.word	0x1000043c
     d1c:	38 04 00 10	.word	0x10000438
     d20:	e0 36 00 00	.word	0x000036e0

00000d24 <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c>:
     d24:      	push	{r4, r5, r7, lr}
     d26:      	add	r7, sp, #8
     d28:      	sub	sp, #8
     d2a:      	movs	r4, #0
     d2c:      	str	r4, [sp, #4]
     d2e:      	cmp	r1, #128
     d30:      	bhs	0xd3a <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x16> @ imm = #6
     d32:      	add	r2, sp, #4
     d34:      	strb	r1, [r2]
     d36:      	movs	r3, #1
     d38:      	b	0xd9a <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x76> @ imm = #94
     d3a:      	lsrs	r2, r1, #11
     d3c:      	bne	0xd54 <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x30> @ imm = #20
     d3e:      	movs	r2, #63
     d40:      	ands	r2, r1
     d42:      	adds	r2, #128
     d44:      	add	r3, sp, #4
     d46:      	strb	r2, [r3, #1]
     d48:      	lsrs	r1, r1, #6
     d4a:      	movs	r2, #192
     d4c:      	orrs	r2, r1
     d4e:      	strb	r2, [r3]
     d50:      	movs	r3, #2
     d52:      	b	0xd9a <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x76> @ imm = #68
     d54:      	lsrs	r2, r1, #16
     d56:      	bne	0xd76 <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x52> @ imm = #28
     d58:      	movs	r2, #63
     d5a:      	ands	r2, r1
     d5c:      	adds	r2, #128
     d5e:      	add	r3, sp, #4
     d60:      	strb	r2, [r3, #2]
     d62:      	lsrs	r2, r1, #12
     d64:      	movs	r5, #224
     d66:      	orrs	r5, r2
     d68:      	strb	r5, [r3]
     d6a:      	lsls	r1, r1, #20
     d6c:      	lsrs	r1, r1, #26
     d6e:      	adds	r1, #128
     d70:      	strb	r1, [r3, #1]
     d72:      	movs	r3, #3
     d74:      	b	0xd9a <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x76> @ imm = #34
     d76:      	movs	r2, #63
     d78:      	ands	r2, r1
     d7a:      	adds	r2, #128
     d7c:      	add	r3, sp, #4
     d7e:      	strb	r2, [r3, #3]
     d80:      	lsrs	r2, r1, #18
     d82:      	movs	r5, #240
     d84:      	orrs	r5, r2
     d86:      	strb	r5, [r3]
     d88:      	lsls	r2, r1, #20
     d8a:      	lsrs	r2, r2, #26
     d8c:      	adds	r2, #128
     d8e:      	strb	r2, [r3, #2]
     d90:      	lsls	r1, r1, #14
     d92:      	lsrs	r1, r1, #26
     d94:      	adds	r1, #128
     d96:      	strb	r1, [r3, #1]
     d98:      	movs	r3, #4
     d9a:      	ldr	r1, [r0]
     d9c:      	ldr	r1, [r1, #20]
     d9e:      	movs	r2, #3
     da0:      	ands	r2, r1
     da2:      	cmp	r2, #3
     da4:      	mov	r1, r4
     da6:      	beq	0xdaa <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x86> @ imm = #0
     da8:      	mov	r1, r2
     daa:      	dmb	sy
     dae:      	add	r2, sp, #4
     db0:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #-740
     db4:      	mov	r0, r4
     db6:      	add	sp, #8
     db8:      	pop	{r4, r5, r7, pc}

00000dba <core::ptr::drop_in_place<&mut rtt_target::TerminalWriter>::h449a8a17a3767bfe.llvm.1334773171787891024>:
     dba:      	bx	lr

00000dbc <<&mut W as core::fmt::Write>::write_char::h4de13d3e842f639c>:
     dbc:      	push	{r7, lr}
     dbe:      	add	r7, sp, #0
     dc0:      	ldr	r0, [r0]
     dc2:      	bl	0xd24 <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c> @ imm = #-162
     dc6:      	movs	r0, #0
     dc8:      	pop	{r7, pc}
     dca:      	bmi	0xd76 <core::fmt::Write::write_char::ha9dbd0dd7d91ae1c+0x52> @ imm = #-88

00000dcc <<&mut W as core::fmt::Write>::write_fmt::hf4b0cac7cbe0fb80>:
     dcc:      	push	{r4, r5, r7, lr}
     dce:      	add	r7, sp, #8
     dd0:      	sub	sp, #32
     dd2:      	ldr	r0, [r0]
     dd4:      	str	r0, [sp, #4]
     dd6:      	add	r2, sp, #8
     dd8:      	mov	r0, r2
     dda:      	ldm	r1!, {r3, r4, r5}
     ddc:      	stm	r0!, {r3, r4, r5}
     dde:      	ldm	r1!, {r3, r4, r5}
     de0:      	stm	r0!, {r3, r4, r5}
     de2:      	add	r0, sp, #4
     de4:      	ldr	r1, [pc, #8] <$d.6>
     de6:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #2562
     dea:      	add	sp, #32
     dec:      	pop	{r4, r5, r7, pc}
     dee:      	mov	r8, r8

00000df0 <$d.6>:
     df0:	e4 36 00 00	.word	0x000036e4

00000df4 <<&mut W as core::fmt::Write>::write_str::ha58546047e92d5a8>:
     df4:      	push	{r4, r5, r7, lr}
     df6:      	add	r7, sp, #8
     df8:      	mov	r3, r2
     dfa:      	mov	r2, r1
     dfc:      	ldr	r0, [r0]
     dfe:      	ldr	r1, [r0]
     e00:      	ldr	r1, [r1, #20]
     e02:      	movs	r5, #3
     e04:      	ands	r5, r1
     e06:      	movs	r4, #0
     e08:      	cmp	r5, #3
     e0a:      	mov	r1, r4
     e0c:      	beq	0xe10 <<&mut W as core::fmt::Write>::write_str::ha58546047e92d5a8+0x1c> @ imm = #0
     e0e:      	mov	r1, r5
     e10:      	dmb	sy
     e14:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #-840
     e18:      	mov	r0, r4
     e1a:      	pop	{r4, r5, r7, pc}

00000e1c <rtt_target::UpChannel::new::h80d9d25389a46033>:
     e1c:      	bx	lr

00000e1e <rtt_target::UpChannel::set_mode::haebb8f1fc86fca3d>:
     e1e:      	ldr	r0, [r0]
     e20:      	ldr	r2, [r0, #20]
     e22:      	movs	r3, #3
     e24:      	bics	r2, r3
     e26:      	orrs	r2, r1
     e28:      	dmb	sy
     e2c:      	dmb	sy
     e30:      	str	r2, [r0, #20]
     e32:      	dmb	sy
     e36:      	bx	lr

00000e38 <rtt_target::UpChannel::conjure::h81109ceede8d3325>:
     e38:      	ldr	r1, [pc, #24] <$d.15>
     e3a:      	ldr	r2, [r1, #16]
     e3c:      	cmp	r2, r0
     e3e:      	bls	0xe50 <rtt_target::UpChannel::conjure::h81109ceede8d3325+0x18> @ imm = #14
     e40:      	movs	r2, #24
     e42:      	muls	r2, r0, r2
     e44:      	adds	r1, r1, r2
     e46:      	ldr	r0, [r1, #28]
     e48:      	subs	r2, r0, #1
     e4a:      	sbcs	r0, r2
     e4c:      	adds	r1, #24
     e4e:      	bx	lr
     e50:      	movs	r0, #0
     e52:      	bx	lr

00000e54 <$d.15>:
     e54:	00 00 00 10	.word	0x10000000

00000e58 <<rtt_target::UpChannel as core::fmt::Write>::write_fmt::h05b44bba687d3d89>:
     e58:      	push	{r4, r5, r6, r7, lr}
     e5a:      	add	r7, sp, #12
     e5c:      	sub	sp, #44
     e5e:      	ldr	r0, [r0]
     e60:      	ldr	r2, [r0, #12]
     e62:      	dmb	sy
     e66:      	ldr	r3, [r0, #16]
     e68:      	dmb	sy
     e6c:      	ldr	r4, [r0, #8]
     e6e:      	cmp	r2, r4
     e70:      	bhs	0xe76 <<rtt_target::UpChannel as core::fmt::Write>::write_fmt::h05b44bba687d3d89+0x1e> @ imm = #2
     e72:      	cmp	r3, r4
     e74:      	blo	0xe8c <<rtt_target::UpChannel as core::fmt::Write>::write_fmt::h05b44bba687d3d89+0x34> @ imm = #20
     e76:      	dmb	sy
     e7a:      	movs	r2, #0
     e7c:      	str	r2, [r0, #12]
     e7e:      	dmb	sy
     e82:      	dmb	sy
     e86:      	str	r2, [r0, #16]
     e88:      	dmb	sy
     e8c:      	mov	r4, sp
     e8e:      	movs	r3, #0
     e90:      	strb	r3, [r4, #12]
     e92:      	add	r5, sp, #0
     e94:      	stm	r5!, {r0, r2, r3}
     e96:      	str	r4, [sp, #16]
     e98:      	add	r2, sp, #20
     e9a:      	mov	r0, r2
     e9c:      	ldm	r1!, {r3, r5, r6}
     e9e:      	stm	r0!, {r3, r5, r6}
     ea0:      	ldm	r1!, {r3, r5, r6}
     ea2:      	stm	r0!, {r3, r5, r6}
     ea4:      	add	r0, sp, #16
     ea6:      	ldr	r1, [pc, #28] <$d.18+0x2>
     ea8:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #2368
     eac:      	ldrb	r1, [r4, #12]
     eae:      	cmp	r1, #1
     eb0:      	bhi	0xec0 <<rtt_target::UpChannel as core::fmt::Write>::write_fmt::h05b44bba687d3d89+0x68> @ imm = #12
     eb2:      	ldr	r1, [sp, #4]
     eb4:      	ldr	r2, [sp]
     eb6:      	dmb	sy
     eba:      	str	r1, [r2, #12]
     ebc:      	dmb	sy
     ec0:      	add	sp, #44
     ec2:      	pop	{r4, r5, r6, r7, pc}

00000ec4 <$d.18>:
     ec4:	b4 36 00 00	.word	0x000036b4

00000ec8 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6>:
     ec8:      	push	{r4, r5, r6, r7, lr}
     eca:      	add	r7, sp, #12
     ecc:      	sub	sp, #28
     ece:      	mov	r3, r1
     ed0:      	mov	r4, r0
     ed2:      	ldr	r0, [r1]
     ed4:      	ldr	r6, [r0, #12]
     ed6:      	dmb	sy
     eda:      	ldr	r1, [r0, #16]
     edc:      	dmb	sy
     ee0:      	uxtb	r5, r2
     ee2:      	ldr	r2, [r0, #8]
     ee4:      	cmp	r6, r2
     ee6:      	bhs	0xeec <rtt_target::TerminalChannel::write::h6dee25494c31b6a6+0x24> @ imm = #2
     ee8:      	cmp	r1, r2
     eea:      	blo	0xf02 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6+0x3a> @ imm = #20
     eec:      	dmb	sy
     ef0:      	movs	r6, #0
     ef2:      	str	r6, [r0, #12]
     ef4:      	dmb	sy
     ef8:      	dmb	sy
     efc:      	str	r6, [r0, #16]
     efe:      	dmb	sy
     f02:      	add	r2, sp, #8
     f04:      	movs	r1, #0
     f06:      	strb	r1, [r2, #12]
     f08:      	str	r1, [sp, #16]
     f0a:      	str	r6, [sp, #12]
     f0c:      	str	r0, [sp, #8]
     f0e:      	adds	r6, r3, #4
     f10:      	ldrb	r2, [r3, #4]
     f12:      	cmp	r2, r5
     f14:      	beq	0xf48 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6+0x80> @ imm = #48
     f16:      	movs	r2, #15
     f18:      	ands	r2, r5
     f1a:      	ldr	r3, [pc, #72] <$d.24+0x2>
     f1c:      	ldrb	r3, [r3, r2]
     f1e:      	ldr	r0, [r0, #20]
     f20:      	dmb	sy
     f24:      	add	r2, sp, #24
     f26:      	strb	r3, [r2, #1]
     f28:      	movs	r3, #255
     f2a:      	strb	r3, [r2]
     f2c:      	movs	r3, #3
     f2e:      	ands	r3, r0
     f30:      	cmp	r3, #3
     f32:      	mov	r0, r1
     f34:      	beq	0xf38 <rtt_target::TerminalChannel::write::h6dee25494c31b6a6+0x70> @ imm = #0
     f36:      	mov	r0, r3
     f38:      	cmp	r0, #1
     f3a:      	beq	0xf3e <rtt_target::TerminalChannel::write::h6dee25494c31b6a6+0x76> @ imm = #0
     f3c:      	mov	r1, r0
     f3e:      	add	r0, sp, #8
     f40:      	movs	r3, #2
     f42:      	bl	0xad0 <rtt_target::rtt::RttWriter::write_with_mode::h79557781e7271e4a> @ imm = #-1142
     f46:      	strb	r5, [r6]
     f48:      	add	r0, sp, #8
     f4a:      	mov	r1, r4
     f4c:      	str	r5, [sp, #4]
     f4e:      	mov	r5, r4
     f50:      	str	r6, [sp]
     f52:      	ldm	r0!, {r2, r3, r4, r6}
     f54:      	stm	r1!, {r2, r3, r4, r6}
     f56:      	ldr	r0, [sp]
     f58:      	str	r0, [r5, #16]
     f5a:      	ldr	r0, [sp, #4]
     f5c:      	strb	r0, [r5, #20]
     f5e:      	add	sp, #28
     f60:      	pop	{r4, r5, r6, r7, pc}
     f62:      	mov	r8, r8

00000f64 <$d.24>:
     f64:	3c 37 00 00	.word	0x0000373c

00000f68 <__cpsid>:
     f68:      	cpsid i
     f6a:      	bx	lr

00000f6c <__cpsie>:
     f6c:      	cpsie i
     f6e:      	bx	lr

00000f70 <__nop>:
     f70:      	nop
     f72:      	bx	lr

00000f74 <__primask_r>:
     f74:      	mrs	r0, primask
     f78:      	bx	lr

00000f7a <bare_metal::CriticalSection::new::hf1acf5be27eacceb>:
     f7a:      	bx	lr

00000f7c <<max116xx_10bit::AdcError as core::fmt::Debug>::fmt::h7aa0b0b24f5c139a>:
     f7c:      	push	{r7, lr}
     f7e:      	add	r7, sp, #0
     f80:      	ldrb	r0, [r0]
     f82:      	mov	r3, r1
     f84:      	add	r0, pc
     f86:      	ldrb	r0, [r0, #4]
     f88:      	lsls	r0, r0, #1
     f8a:      	add	pc, r0

00000f8c <$d.15>:
     f8c:	03 05 07 0a	.word	0x0a070503
     f90:	0c 0e 11 00	.word	0x00110e0c

00000f94 <$t.16>:
     f94:      	ldr	r1, [pc, #60] <$d.17+0x18>
     f96:      	b	0xf9e <$t.16+0xa>       @ imm = #4
     f98:      	ldr	r1, [pc, #52] <$d.17+0x14>
     f9a:      	b	0xf9e <$t.16+0xa>       @ imm = #0
     f9c:      	ldr	r1, [pc, #44] <$d.17+0x10>
     f9e:      	movs	r2, #14
     fa0:      	b	0xfb4 <$t.16+0x20>      @ imm = #16
     fa2:      	ldr	r1, [pc, #36] <$d.17+0xe>
     fa4:      	b	0xfb2 <$t.16+0x1e>      @ imm = #10
     fa6:      	ldr	r1, [pc, #28] <$d.17+0xa>
     fa8:      	b	0xfb2 <$t.16+0x1e>      @ imm = #6
     faa:      	ldr	r1, [pc, #20] <$d.17+0x6>
     fac:      	movs	r2, #18
     fae:      	b	0xfb4 <$t.16+0x20>      @ imm = #2
     fb0:      	ldr	r1, [pc, #8] <$d.17>
     fb2:      	movs	r2, #16
     fb4:      	mov	r0, r3
     fb6:      	bl	0x1f9c <<core::fmt::Formatter as core::fmt::Write>::write_str::h5daf2d485e2f455c> @ imm = #4066
     fba:      	pop	{r7, pc}

00000fbc <$d.17>:
     fbc:	0c 37 00 00	.word	0x0000370c
     fc0:	5c 37 00 00	.word	0x0000375c
     fc4:	1c 37 00 00	.word	0x0000371c
     fc8:	2c 37 00 00	.word	0x0000372c
     fcc:	6e 37 00 00	.word	0x0000376e
     fd0:	7c 37 00 00	.word	0x0000377c
     fd4:	8a 37 00 00	.word	0x0000378a

00000fd8 <SysTick>:
     fd8:      	b	0xfd8 <SysTick>         @ imm = #-4

00000fda <__pre_init>:
     fda:      	bx	lr

00000fdc <core::ops::function::FnOnce::call_once::h5388216f32b8b71c>:
     fdc:      	ldr	r0, [r0]
     fde:      	b	0xfde <core::ops::function::FnOnce::call_once::h5388216f32b8b71c+0x2> @ imm = #-4

00000fe0 <core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::h8713c5178970da4b>:
     fe0:      	bx	lr
     fe2:      	bmi	0xf8e <$d.15+0x2>       @ imm = #-88

00000fe4 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h48dae2b7618cde52>:
     fe4:      	push	{r4, r5, r6, r7, lr}
     fe6:      	add	r7, sp, #12
     fe8:      	sub	sp, #28
     fea:      	mov	r4, r1
     fec:      	mov	r5, r0
     fee:      	bl	0x295c <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795> @ imm = #6506
     ff2:      	movs	r6, #1
     ff4:      	cmp	r0, #0
     ff6:      	bne	0x1024 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h48dae2b7618cde52+0x40> @ imm = #42
     ff8:      	ldr	r0, [r4, #24]
     ffa:      	ldr	r1, [r4, #28]
     ffc:      	movs	r2, #0
     ffe:      	str	r2, [sp, #24]
    1000:      	ldr	r3, [pc, #40] <$d.147>
    1002:      	str	r3, [sp, #20]
    1004:      	str	r2, [sp, #16]
    1006:      	str	r2, [sp, #12]
    1008:      	movs	r2, #1
    100a:      	str	r2, [sp, #8]
    100c:      	ldr	r2, [pc, #32] <$d.147+0x4>
    100e:      	str	r2, [sp, #4]
    1010:      	add	r2, sp, #4
    1012:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #2006
    1016:      	cmp	r0, #0
    1018:      	bne	0x1024 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h48dae2b7618cde52+0x40> @ imm = #8
    101a:      	adds	r0, r5, #4
    101c:      	mov	r1, r4
    101e:      	bl	0x295c <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795> @ imm = #6458
    1022:      	mov	r6, r0
    1024:      	mov	r0, r6
    1026:      	add	sp, #28
    1028:      	pop	{r4, r5, r6, r7, pc}
    102a:      	mov	r8, r8

0000102c <$d.147>:
    102c:	98 37 00 00	.word	0x00003798
    1030:	9c 37 00 00	.word	0x0000379c

00001034 <<T as core::any::Any>::type_id::hee7be9e0237c393a>:
    1034:      	ldr	r0, [pc, #4] <$d.149>
    1036:      	ldr	r1, [pc, #8] <$d.149+0x6>
    1038:      	bx	lr
    103a:      	mov	r8, r8

0000103c <$d.149>:
    103c:	92 04 b4 f1	.word	0xf1b40492
    1040:	d2 a7 f8 00	.word	0x00f8a7d2

00001044 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e>:
    1044:      	push	{r4, r5, r6, r7, lr}
    1046:      	add	r7, sp, #12
    1048:      	sub	sp, #68
    104a:      	mov	r4, r0
    104c:      	ldr	r5, [r1, #24]
    104e:      	ldr	r6, [r1, #28]
    1050:      	ldr	r3, [r6, #12]
    1052:      	ldr	r1, [pc, #224] <$d.248+0x2>
    1054:      	movs	r2, #12
    1056:      	mov	r0, r5
    1058:      	blx	r3
    105a:      	movs	r2, #1
    105c:      	cmp	r0, #0
    105e:      	bne	0x10a0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e+0x5c> @ imm = #62
    1060:      	str	r6, [sp, #12]
    1062:      	ldr	r0, [r4, #8]
    1064:      	cmp	r0, #0
    1066:      	str	r4, [sp, #8]
    1068:      	beq	0x10a6 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e+0x62> @ imm = #58
    106a:      	str	r0, [sp, #16]
    106c:      	ldr	r0, [pc, #200] <$d.248+0x4>
    106e:      	str	r0, [sp, #24]
    1070:      	add	r0, sp, #16
    1072:      	str	r0, [sp, #20]
    1074:      	movs	r0, #1
    1076:      	str	r0, [sp, #64]
    1078:      	add	r0, sp, #20
    107a:      	str	r0, [sp, #60]
    107c:      	movs	r0, #0
    107e:      	str	r0, [sp, #56]
    1080:      	str	r0, [sp, #52]
    1082:      	movs	r0, #2
    1084:      	str	r0, [sp, #48]
    1086:      	ldr	r0, [pc, #180] <$d.248+0xa>
    1088:      	str	r0, [sp, #44]
    108a:      	mov	r6, r2
    108c:      	add	r2, sp, #44
    108e:      	mov	r4, r5
    1090:      	mov	r0, r5
    1092:      	ldr	r5, [sp, #12]
    1094:      	mov	r1, r5
    1096:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #1874
    109a:      	mov	r2, r6
    109c:      	cmp	r0, #0
    109e:      	beq	0x10f0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e+0xac> @ imm = #78
    10a0:      	mov	r0, r2
    10a2:      	add	sp, #68
    10a4:      	pop	{r4, r5, r6, r7, pc}
    10a6:      	ldm	r4!, {r0, r1}
    10a8:      	ldr	r1, [r1, #12]
    10aa:      	mov	r6, r0
    10ac:      	str	r2, [sp, #4]
    10ae:      	blx	r1
    10b0:      	ldr	r2, [pc, #140] <$d.248+0xc>
    10b2:      	eors	r2, r1
    10b4:      	ldr	r1, [pc, #140] <$d.248+0x10>
    10b6:      	eors	r1, r0
    10b8:      	orrs	r1, r2
    10ba:      	mov	r4, r5
    10bc:      	ldr	r5, [sp, #12]
    10be:      	bne	0x10f0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e+0xac> @ imm = #46
    10c0:      	str	r6, [sp, #16]
    10c2:      	ldr	r0, [pc, #132] <$d.248+0x16>
    10c4:      	str	r0, [sp, #24]
    10c6:      	add	r0, sp, #16
    10c8:      	str	r0, [sp, #20]
    10ca:      	movs	r0, #1
    10cc:      	str	r0, [sp, #64]
    10ce:      	add	r0, sp, #20
    10d0:      	str	r0, [sp, #60]
    10d2:      	movs	r0, #0
    10d4:      	str	r0, [sp, #56]
    10d6:      	str	r0, [sp, #52]
    10d8:      	movs	r0, #2
    10da:      	str	r0, [sp, #48]
    10dc:      	ldr	r0, [pc, #92] <$d.248+0x8>
    10de:      	str	r0, [sp, #44]
    10e0:      	add	r2, sp, #44
    10e2:      	mov	r0, r4
    10e4:      	mov	r1, r5
    10e6:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #1794
    10ea:      	ldr	r2, [sp, #4]
    10ec:      	cmp	r0, #0
    10ee:      	bne	0x10a0 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e+0x5c> @ imm = #-82
    10f0:      	ldr	r0, [sp, #8]
    10f2:      	ldr	r0, [r0, #12]
    10f4:      	ldr	r1, [pc, #84] <$d.248+0x18>
    10f6:      	str	r1, [sp, #40]
    10f8:      	mov	r2, r0
    10fa:      	adds	r2, #12
    10fc:      	str	r2, [sp, #36]
    10fe:      	str	r1, [sp, #32]
    1100:      	mov	r1, r0
    1102:      	adds	r1, #8
    1104:      	str	r1, [sp, #28]
    1106:      	ldr	r1, [pc, #72] <$d.248+0x1e>
    1108:      	str	r1, [sp, #24]
    110a:      	str	r0, [sp, #20]
    110c:      	movs	r0, #3
    110e:      	str	r0, [sp, #64]
    1110:      	add	r1, sp, #20
    1112:      	str	r1, [sp, #60]
    1114:      	movs	r1, #0
    1116:      	str	r1, [sp, #56]
    1118:      	str	r1, [sp, #52]
    111a:      	str	r0, [sp, #48]
    111c:      	ldr	r0, [pc, #52] <$d.248+0x20>
    111e:      	str	r0, [sp, #44]
    1120:      	add	r2, sp, #44
    1122:      	mov	r0, r4
    1124:      	mov	r1, r5
    1126:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #1730
    112a:      	mov	r2, r0
    112c:      	mov	r0, r2
    112e:      	add	sp, #68
    1130:      	pop	{r4, r5, r6, r7, pc}
    1132:      	mov	r8, r8

00001134 <$d.248>:
    1134:	f8 37 00 00	.word	0x000037f8
    1138:	3b 2e 00 00	.word	0x00002e3b
    113c:	08 38 00 00	.word	0x00003808
    1140:	1e a9 f2 7e	.word	0x7ef2a91e
    1144:	f4 bc c7 ec	.word	0xecc7bcf4
    1148:	29 2e 00 00	.word	0x00002e29
    114c:	11 2d 00 00	.word	0x00002d11
    1150:	19 2e 00 00	.word	0x00002e19
    1154:	d0 37 00 00	.word	0x000037d0

00001158 <core::panicking::panic::hd188a7f3102defa3>:
    1158:      	push	{r7, lr}
    115a:      	add	r7, sp, #0
    115c:      	sub	sp, #32
    115e:      	movs	r3, #0
    1160:      	str	r3, [sp, #20]
    1162:      	ldr	r4, [pc, #28] <$d.250+0x2>
    1164:      	str	r4, [sp, #16]
    1166:      	str	r3, [sp, #12]
    1168:      	str	r3, [sp, #8]
    116a:      	movs	r3, #1
    116c:      	str	r3, [sp, #4]
    116e:      	add	r3, sp, #24
    1170:      	str	r3, [sp]
    1172:      	str	r1, [sp, #28]
    1174:      	str	r0, [sp, #24]
    1176:      	mov	r0, sp
    1178:      	mov	r1, r2
    117a:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #70
    117e:      	trap

00001180 <$d.250>:
    1180:	98 37 00 00	.word	0x00003798

00001184 <core::panicking::panic_bounds_check::h5d2fdbe20d7940cc>:
    1184:      	push	{r7, lr}
    1186:      	add	r7, sp, #0
    1188:      	sub	sp, #48
    118a:      	str	r1, [sp, #4]
    118c:      	str	r0, [sp]
    118e:      	movs	r0, #2
    1190:      	str	r0, [sp, #28]
    1192:      	add	r1, sp, #32
    1194:      	str	r1, [sp, #24]
    1196:      	movs	r1, #0
    1198:      	str	r1, [sp, #20]
    119a:      	str	r1, [sp, #16]
    119c:      	str	r0, [sp, #12]
    119e:      	ldr	r0, [pc, #28] <$d.256+0x2>
    11a0:      	str	r0, [sp, #8]
    11a2:      	ldr	r0, [pc, #28] <$d.256+0x6>
    11a4:      	str	r0, [sp, #44]
    11a6:      	mov	r1, sp
    11a8:      	str	r1, [sp, #40]
    11aa:      	str	r0, [sp, #36]
    11ac:      	add	r0, sp, #4
    11ae:      	str	r0, [sp, #32]
    11b0:      	add	r0, sp, #8
    11b2:      	mov	r1, r2
    11b4:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #12
    11b8:      	trap
    11ba:      	mov	r8, r8

000011bc <$d.256>:
    11bc:	2c 38 00 00	.word	0x0000382c
    11c0:	11 2d 00 00	.word	0x00002d11

000011c4 <core::panicking::panic_fmt::h884220a03f3bce26>:
    11c4:      	push	{r7, lr}
    11c6:      	add	r7, sp, #0
    11c8:      	sub	sp, #16
    11ca:      	str	r1, [sp, #12]
    11cc:      	str	r0, [sp, #8]
    11ce:      	ldr	r0, [pc, #16] <$d.258+0x2>
    11d0:      	str	r0, [sp, #4]
    11d2:      	ldr	r0, [pc, #16] <$d.258+0x6>
    11d4:      	str	r0, [sp]
    11d6:      	mov	r0, sp
    11d8:      	bl	0x2f2c <rust_begin_unwind> @ imm = #7504
    11dc:      	trap
    11de:      	mov	r8, r8

000011e0 <$d.258>:
    11e0:	e8 37 00 00	.word	0x000037e8
    11e4:	98 37 00 00	.word	0x00003798

000011e8 <core::result::unwrap_failed::hab9917f6469ee00f>:
    11e8:      	push	{r7, lr}
    11ea:      	add	r7, sp, #0
    11ec:      	sub	sp, #56
    11ee:      	str	r1, [sp, #4]
    11f0:      	str	r0, [sp]
    11f2:      	str	r3, [sp, #12]
    11f4:      	str	r2, [sp, #8]
    11f6:      	movs	r0, #2
    11f8:      	str	r0, [sp, #36]
    11fa:      	add	r1, sp, #40
    11fc:      	str	r1, [sp, #32]
    11fe:      	movs	r1, #0
    1200:      	str	r1, [sp, #28]
    1202:      	str	r1, [sp, #24]
    1204:      	str	r0, [sp, #20]
    1206:      	ldr	r0, [pc, #28] <$d.267+0x2>
    1208:      	str	r0, [sp, #16]
    120a:      	ldr	r0, [pc, #28] <$d.267+0x6>
    120c:      	str	r0, [sp, #52]
    120e:      	add	r0, sp, #8
    1210:      	str	r0, [sp, #48]
    1212:      	ldr	r0, [pc, #24] <$d.267+0xa>
    1214:      	str	r0, [sp, #44]
    1216:      	mov	r0, sp
    1218:      	str	r0, [sp, #40]
    121a:      	add	r0, sp, #16
    121c:      	ldr	r1, [r7, #8]
    121e:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #-94
    1222:      	trap

00001224 <$d.267>:
    1224:	40 38 00 00	.word	0x00003840
    1228:	09 2e 00 00	.word	0x00002e09
    122c:	19 2e 00 00	.word	0x00002e19

00001230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213>:
    1230:      	push	{r4, r5, r6, r7, lr}
    1232:      	add	r7, sp, #12
    1234:      	sub	sp, #44
    1236:      	cmp	r2, #0
    1238:      	bne	0x123c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xc> @ imm = #0
    123a:      	b	0x14b4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x284> @ imm = #630
    123c:      	mov	r4, r2
    123e:      	mov	r5, r1
    1240:      	ldr	r1, [r0]
    1242:      	str	r1, [sp, #8]
    1244:      	ldr	r1, [r0, #4]
    1246:      	str	r1, [sp, #4]
    1248:      	ldr	r0, [r0, #8]
    124a:      	str	r0, [sp, #12]
    124c:      	movs	r0, #1
    124e:      	str	r0, [sp, #36]
    1250:      	b	0x125a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x2a> @ imm = #6
    1252:      	adds	r5, r5, r6
    1254:      	subs	r4, r4, r6
    1256:      	bne	0x125a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x2a> @ imm = #0
    1258:      	b	0x14b4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x284> @ imm = #600
    125a:      	ldr	r0, [sp, #12]
    125c:      	ldrb	r0, [r0]
    125e:      	cmp	r0, #0
    1260:      	beq	0x1274 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x44> @ imm = #16
    1262:      	ldr	r0, [sp, #4]
    1264:      	ldr	r3, [r0, #12]
    1266:      	movs	r2, #4
    1268:      	ldr	r0, [sp, #8]
    126a:      	ldr	r1, [pc, #652] <$d.271+0xe>
    126c:      	blx	r3
    126e:      	cmp	r0, #0
    1270:      	beq	0x1274 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x44> @ imm = #0
    1272:      	b	0x14ba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x28a> @ imm = #580
    1274:      	movs	r2, #0
    1276:      	mov	r1, r4
    1278:      	str	r4, [sp, #28]
    127a:      	str	r5, [sp, #24]
    127c:      	b	0x1284 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x54> @ imm = #4
    127e:      	cmp	r2, r4
    1280:      	bls	0x1284 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x54> @ imm = #0
    1282:      	b	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #514
    1284:      	adds	r0, r5, r2
    1286:      	cmp	r1, #8
    1288:      	str	r0, [sp, #40]
    128a:      	bhs	0x12b0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x80> @ imm = #34
    128c:      	cmp	r1, #0
    128e:      	bne	0x1292 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x62> @ imm = #0
    1290:      	b	0x1486 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x256> @ imm = #498
    1292:      	ldrb	r0, [r0]
    1294:      	movs	r3, #0
    1296:      	cmp	r0, #10
    1298:      	bne	0x129c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x6c> @ imm = #0
    129a:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #342
    129c:      	cmp	r1, #1
    129e:      	bne	0x12a2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x72> @ imm = #0
    12a0:      	b	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #484
    12a2:      	ldr	r0, [sp, #40]
    12a4:      	ldrb	r0, [r0, #1]
    12a6:      	cmp	r0, #10
    12a8:      	beq	0x12ac <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x7c> @ imm = #0
    12aa:      	b	0x13b2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x182> @ imm = #260
    12ac:      	movs	r3, #1
    12ae:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #322
    12b0:      	mov	r4, r0
    12b2:      	adds	r0, r0, #3
    12b4:      	movs	r3, #3
    12b6:      	bics	r0, r3
    12b8:      	subs	r3, r0, r4
    12ba:      	str	r2, [sp, #20]
    12bc:      	str	r1, [sp, #16]
    12be:      	beq	0x131c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xec> @ imm = #90
    12c0:      	cmp	r3, r1
    12c2:      	mov	r0, r1
    12c4:      	bhi	0x12c8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x98> @ imm = #0
    12c6:      	mov	r0, r3
    12c8:      	ldr	r1, [sp, #40]
    12ca:      	adds	r6, r1, r0
    12cc:      	movs	r3, #0
    12ce:      	ldr	r1, [sp, #40]
    12d0:      	ldrb	r5, [r1, r3]
    12d2:      	cmp	r5, #10
    12d4:      	bne	0x12d8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xa8> @ imm = #0
    12d6:      	b	0x13f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c0> @ imm = #278
    12d8:      	adds	r5, r1, r3
    12da:      	adds	r5, r5, #1
    12dc:      	cmp	r5, r6
    12de:      	beq	0x1306 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xd6> @ imm = #36
    12e0:      	ldrb	r4, [r5]
    12e2:      	cmp	r4, #10
    12e4:      	beq	0x13d6 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1a6> @ imm = #238
    12e6:      	adds	r5, r5, #1
    12e8:      	cmp	r5, r6
    12ea:      	beq	0x1306 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xd6> @ imm = #24
    12ec:      	ldrb	r4, [r5]
    12ee:      	cmp	r4, #10
    12f0:      	beq	0x13de <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1ae> @ imm = #234
    12f2:      	adds	r5, r5, #1
    12f4:      	cmp	r5, r6
    12f6:      	beq	0x1306 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xd6> @ imm = #12
    12f8:      	ldrb	r4, [r5]
    12fa:      	cmp	r4, #10
    12fc:      	beq	0x13ee <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1be> @ imm = #238
    12fe:      	adds	r3, r3, #4
    1300:      	adds	r4, r5, #1
    1302:      	cmp	r4, r6
    1304:      	bne	0x12ce <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x9e> @ imm = #-58
    1306:      	ldr	r1, [sp, #16]
    1308:      	mov	r3, r1
    130a:      	subs	r3, #8
    130c:      	str	r3, [sp, #32]
    130e:      	cmp	r0, r3
    1310:      	ldr	r4, [sp, #28]
    1312:      	ldr	r5, [sp, #24]
    1314:      	bls	0x1324 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xf4> @ imm = #12
    1316:      	cmp	r0, r1
    1318:      	bne	0x136e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x13e> @ imm = #82
    131a:      	b	0x1486 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x256> @ imm = #360
    131c:      	mov	r0, r1
    131e:      	subs	r0, #8
    1320:      	str	r0, [sp, #32]
    1322:      	movs	r0, #0
    1324:      	ldr	r2, [sp, #40]
    1326:      	adds	r5, r2, r0
    1328:      	ldr	r5, [r5, #4]
    132a:      	ldr	r4, [pc, #452] <$d.271+0x6>
    132c:      	bics	r4, r5
    132e:      	ldr	r3, [pc, #444] <$d.271+0x2>
    1330:      	eors	r5, r3
    1332:      	ldr	r1, [pc, #448] <$d.271+0xa>
    1334:      	adds	r6, r5, r1
    1336:      	ands	r6, r4
    1338:      	subs	r4, r6, #1
    133a:      	sbcs	r6, r4
    133c:      	ldr	r4, [r2, r0]
    133e:      	ldr	r5, [pc, #432] <$d.271+0x6>
    1340:      	bics	r5, r4
    1342:      	eors	r4, r3
    1344:      	adds	r4, r4, r1
    1346:      	tst	r5, r4
    1348:      	ldr	r5, [sp, #36]
    134a:      	bne	0x134e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x11e> @ imm = #0
    134c:      	mov	r5, r6
    134e:      	cmp	r5, #0
    1350:      	bne	0x135a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x12a> @ imm = #6
    1352:      	adds	r0, #8
    1354:      	ldr	r1, [sp, #32]
    1356:      	cmp	r0, r1
    1358:      	bls	0x1324 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0xf4> @ imm = #-56
    135a:      	ldr	r1, [sp, #16]
    135c:      	cmp	r0, r1
    135e:      	bls	0x1362 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x132> @ imm = #0
    1360:      	b	0x14c0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x290> @ imm = #348
    1362:      	ldr	r4, [sp, #28]
    1364:      	ldr	r5, [sp, #24]
    1366:      	ldr	r2, [sp, #20]
    1368:      	cmp	r0, r1
    136a:      	bne	0x136e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x13e> @ imm = #0
    136c:      	b	0x1486 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x256> @ imm = #278
    136e:      	mov	r3, r2
    1370:      	ldr	r2, [sp, #40]
    1372:      	adds	r2, r2, r1
    1374:      	adds	r1, r0, r3
    1376:      	adds	r6, r5, r1
    1378:      	movs	r1, #0
    137a:      	ldrb	r3, [r6, r1]
    137c:      	cmp	r3, #10
    137e:      	beq	0x13e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1b4> @ imm = #98
    1380:      	adds	r3, r6, r1
    1382:      	adds	r5, r3, #1
    1384:      	movs	r3, #0
    1386:      	cmp	r5, r2
    1388:      	beq	0x1454 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x224> @ imm = #200
    138a:      	ldrb	r4, [r5]
    138c:      	cmp	r4, #10
    138e:      	beq	0x13d2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1a2> @ imm = #64
    1390:      	adds	r5, r5, #1
    1392:      	cmp	r5, r2
    1394:      	beq	0x1454 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x224> @ imm = #188
    1396:      	ldrb	r4, [r5]
    1398:      	cmp	r4, #10
    139a:      	beq	0x13da <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1aa> @ imm = #60
    139c:      	adds	r5, r5, #1
    139e:      	cmp	r5, r2
    13a0:      	beq	0x1454 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x224> @ imm = #176
    13a2:      	ldrb	r4, [r5]
    13a4:      	cmp	r4, #10
    13a6:      	beq	0x13e2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1b2> @ imm = #56
    13a8:      	adds	r1, r1, #4
    13aa:      	adds	r4, r5, #1
    13ac:      	cmp	r4, r2
    13ae:      	bne	0x137a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x14a> @ imm = #-56
    13b0:      	b	0x1454 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x224> @ imm = #160
    13b2:      	cmp	r1, #2
    13b4:      	beq	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #208
    13b6:      	ldr	r0, [sp, #40]
    13b8:      	ldrb	r0, [r0, #2]
    13ba:      	cmp	r0, #10
    13bc:      	bne	0x13c2 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x192> @ imm = #2
    13be:      	movs	r3, #2
    13c0:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #48
    13c2:      	cmp	r1, #3
    13c4:      	beq	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #192
    13c6:      	ldr	r0, [sp, #40]
    13c8:      	ldrb	r0, [r0, #3]
    13ca:      	cmp	r0, #10
    13cc:      	bne	0x1424 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1f4> @ imm = #84
    13ce:      	movs	r3, #3
    13d0:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #32
    13d2:      	adds	r1, r1, #1
    13d4:      	b	0x13e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1b4> @ imm = #12
    13d6:      	adds	r3, r3, #1
    13d8:      	b	0x13f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c0> @ imm = #20
    13da:      	adds	r1, r1, #2
    13dc:      	b	0x13e4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1b4> @ imm = #4
    13de:      	adds	r3, r3, #2
    13e0:      	b	0x13f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c0> @ imm = #12
    13e2:      	adds	r1, r1, #3
    13e4:      	adds	r3, r1, r0
    13e6:      	ldr	r4, [sp, #28]
    13e8:      	ldr	r5, [sp, #24]
    13ea:      	ldr	r2, [sp, #20]
    13ec:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #4
    13ee:      	adds	r3, r3, #3
    13f0:      	ldr	r4, [sp, #28]
    13f2:      	ldr	r5, [sp, #24]
    13f4:      	adds	r0, r3, r2
    13f6:      	adds	r2, r0, #1
    13f8:      	cmp	r2, r4
    13fa:      	bhi	0x1404 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1d4> @ imm = #6
    13fc:      	movs	r1, #0
    13fe:      	cmp	r2, r0
    1400:      	blo	0x140a <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1da> @ imm = #6
    1402:      	b	0x140c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1dc> @ imm = #6
    1404:      	movs	r1, #1
    1406:      	cmp	r2, r0
    1408:      	bhs	0x140c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1dc> @ imm = #0
    140a:      	ldr	r1, [sp, #36]
    140c:      	cmp	r1, #1
    140e:      	beq	0x1416 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1e6> @ imm = #4
    1410:      	ldrb	r0, [r5, r0]
    1412:      	cmp	r0, #10
    1414:      	beq	0x14a8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x278> @ imm = #144
    1416:      	subs	r1, r4, r2
    1418:      	movs	r3, #0
    141a:      	cmp	r4, r2
    141c:      	blo	0x1420 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1f0> @ imm = #0
    141e:      	b	0x127e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x4e> @ imm = #-420
    1420:      	mov	r1, r3
    1422:      	b	0x127e <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x4e> @ imm = #-424
    1424:      	cmp	r1, #4
    1426:      	beq	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #94
    1428:      	ldr	r0, [sp, #40]
    142a:      	ldrb	r0, [r0, #4]
    142c:      	cmp	r0, #10
    142e:      	bne	0x1434 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x204> @ imm = #2
    1430:      	movs	r3, #4
    1432:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #-66
    1434:      	cmp	r1, #5
    1436:      	beq	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #78
    1438:      	ldr	r0, [sp, #40]
    143a:      	ldrb	r0, [r0, #5]
    143c:      	cmp	r0, #10
    143e:      	bne	0x1444 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x214> @ imm = #2
    1440:      	movs	r3, #5
    1442:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #-82
    1444:      	cmp	r1, #6
    1446:      	beq	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #62
    1448:      	ldr	r0, [sp, #40]
    144a:      	ldrb	r0, [r0, #6]
    144c:      	cmp	r0, #10
    144e:      	bne	0x1488 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x258> @ imm = #54
    1450:      	movs	r3, #6
    1452:      	b	0x13f4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x1c4> @ imm = #-98
    1454:      	ldr	r4, [sp, #28]
    1456:      	mov	r2, r4
    1458:      	ldr	r5, [sp, #24]
    145a:      	ldr	r0, [sp, #12]
    145c:      	strb	r3, [r0]
    145e:      	cmp	r4, r2
    1460:      	bls	0x1492 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x262> @ imm = #46
    1462:      	ldrsb	r0, [r5, r2]
    1464:      	movs	r1, #64
    1466:      	mvns	r4, r1
    1468:      	cmp	r0, r4
    146a:      	ble	0x14c8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x298> @ imm = #90
    146c:      	ldr	r0, [sp, #4]
    146e:      	ldr	r3, [r0, #12]
    1470:      	ldr	r0, [sp, #8]
    1472:      	mov	r1, r5
    1474:      	mov	r6, r2
    1476:      	blx	r3
    1478:      	cmp	r0, #0
    147a:      	bne	0x14ba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x28a> @ imm = #60
    147c:      	ldrsb	r0, [r5, r6]
    147e:      	cmp	r0, r4
    1480:      	ldr	r4, [sp, #28]
    1482:      	ble	0x14da <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x2aa> @ imm = #84
    1484:      	b	0x1252 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x22> @ imm = #-566
    1486:      	movs	r3, #0
    1488:      	mov	r2, r4
    148a:      	ldr	r0, [sp, #12]
    148c:      	strb	r3, [r0]
    148e:      	cmp	r4, r2
    1490:      	bhi	0x1462 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x232> @ imm = #-50
    1492:      	bne	0x14c8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x298> @ imm = #50
    1494:      	ldr	r0, [sp, #4]
    1496:      	ldr	r3, [r0, #12]
    1498:      	ldr	r0, [sp, #8]
    149a:      	mov	r1, r5
    149c:      	mov	r6, r2
    149e:      	blx	r3
    14a0:      	cmp	r0, #0
    14a2:      	ldr	r4, [sp, #28]
    14a4:      	bne	0x14ba <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x28a> @ imm = #18
    14a6:      	b	0x1252 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x22> @ imm = #-600
    14a8:      	movs	r3, #1
    14aa:      	ldr	r0, [sp, #12]
    14ac:      	strb	r3, [r0]
    14ae:      	cmp	r4, r2
    14b0:      	bhi	0x1462 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x232> @ imm = #-82
    14b2:      	b	0x1492 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213+0x262> @ imm = #-36
    14b4:      	movs	r0, #0
    14b6:      	add	sp, #44
    14b8:      	pop	{r4, r5, r6, r7, pc}
    14ba:      	ldr	r0, [sp, #36]
    14bc:      	add	sp, #44
    14be:      	pop	{r4, r5, r6, r7, pc}
    14c0:      	ldr	r2, [pc, #56] <$d.271+0x10>
    14c2:      	bl	0x21bc <core::slice::index::slice_start_index_len_fail::h3080a8211123744d> @ imm = #3318
    14c6:      	trap
    14c8:      	ldr	r0, [pc, #52] <$d.271+0x14>
    14ca:      	str	r0, [sp]
    14cc:      	mov	r3, r2
    14ce:      	movs	r2, #0
    14d0:      	mov	r0, r5
    14d2:      	ldr	r1, [sp, #28]
    14d4:      	bl	0x227c <core::str::slice_error_fail::h26c332087be94791> @ imm = #3492
    14d8:      	trap
    14da:      	ldr	r0, [pc, #40] <$d.271+0x1a>
    14dc:      	str	r0, [sp]
    14de:      	mov	r0, r5
    14e0:      	mov	r1, r4
    14e2:      	mov	r2, r6
    14e4:      	mov	r3, r4
    14e6:      	bl	0x227c <core::str::slice_error_fail::h26c332087be94791> @ imm = #3474
    14ea:      	trap

000014ec <$d.271>:
    14ec:	0a 0a 0a 0a	.word	0x0a0a0a0a
    14f0:	80 80 80 80	.word	0x80808080
    14f4:	ff fe fe fe	.word	0xfefefeff
    14f8:	9a 34 00 00	.word	0x0000349a
    14fc:	a0 39 00 00	.word	0x000039a0
    1500:	68 38 00 00	.word	0x00003868
    1504:	78 38 00 00	.word	0x00003878

00001508 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186>:
    1508:      	push	{r4, r5, r6, r7, lr}
    150a:      	add	r7, sp, #12
    150c:      	sub	sp, #68
    150e:      	mov	r4, r0
    1510:      	ldrb	r0, [r0, #8]
    1512:      	cmp	r0, #0
    1514:      	beq	0x151c <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0x14> @ imm = #4
    1516:      	ldr	r0, [r4, #4]
    1518:      	movs	r6, #1
    151a:      	b	0x15d2 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xca> @ imm = #180
    151c:      	mov	r6, r1
    151e:      	ldr	r5, [r4]
    1520:      	ldr	r3, [r4, #4]
    1522:      	ldrb	r0, [r5]
    1524:      	lsls	r0, r0, #29
    1526:      	str	r3, [sp, #12]
    1528:      	str	r2, [sp, #8]
    152a:      	bmi	0x153e <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0x36> @ imm = #16
    152c:      	cmp	r3, #0
    152e:      	str	r6, [sp, #4]
    1530:      	beq	0x15ac <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xa4> @ imm = #120
    1532:      	ldr	r1, [pc, #188] <$d.279+0x12>
    1534:      	movs	r6, #1
    1536:      	cmp	r3, #0
    1538:      	mov	r2, r6
    153a:      	bne	0x15b6 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xae> @ imm = #120
    153c:      	b	0x15b8 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xb0> @ imm = #120
    153e:      	cmp	r3, #0
    1540:      	bne	0x1558 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0x50> @ imm = #20
    1542:      	ldr	r0, [r5, #24]
    1544:      	ldr	r1, [r5, #28]
    1546:      	ldr	r3, [r1, #12]
    1548:      	ldr	r1, [pc, #148] <$d.279>
    154a:      	movs	r2, #2
    154c:      	blx	r3
    154e:      	cmp	r0, #0
    1550:      	beq	0x1558 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0x50> @ imm = #4
    1552:      	movs	r0, #0
    1554:      	movs	r6, #1
    1556:      	b	0x15d2 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xca> @ imm = #120
    1558:      	add	r0, sp, #28
    155a:      	str	r6, [sp, #4]
    155c:      	movs	r6, #1
    155e:      	strb	r6, [r0]
    1560:      	movs	r2, #32
    1562:      	ldrb	r3, [r5, r2]
    1564:      	add	r1, sp, #32
    1566:      	strb	r3, [r1, r2]
    1568:      	str	r0, [sp, #24]
    156a:      	ldr	r0, [pc, #120] <$d.279+0x6>
    156c:      	str	r0, [sp, #60]
    156e:      	add	r0, sp, #16
    1570:      	str	r0, [sp, #56]
    1572:      	ldr	r0, [r5, #28]
    1574:      	str	r0, [sp, #20]
    1576:      	ldr	r0, [r5, #24]
    1578:      	str	r0, [sp, #16]
    157a:      	ldr	r0, [r5, #4]
    157c:      	str	r0, [sp, #36]
    157e:      	ldr	r0, [r5]
    1580:      	str	r0, [sp, #32]
    1582:      	ldr	r0, [r5, #20]
    1584:      	str	r0, [sp, #52]
    1586:      	ldr	r0, [r5, #16]
    1588:      	str	r0, [sp, #48]
    158a:      	ldr	r0, [r5, #12]
    158c:      	str	r0, [sp, #44]
    158e:      	ldr	r0, [r5, #8]
    1590:      	str	r0, [sp, #40]
    1592:      	ldr	r0, [sp, #8]
    1594:      	ldr	r2, [r0, #12]
    1596:      	ldr	r0, [sp, #4]
    1598:      	blx	r2
    159a:      	cmp	r0, #0
    159c:      	bne	0x15d0 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xc8> @ imm = #48
    159e:      	ldr	r0, [sp, #60]
    15a0:      	ldr	r3, [r0, #12]
    15a2:      	ldr	r0, [sp, #56]
    15a4:      	ldr	r1, [pc, #64] <$d.279+0x8>
    15a6:      	movs	r2, #2
    15a8:      	blx	r3
    15aa:      	b	0x15ce <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xc6> @ imm = #32
    15ac:      	ldr	r1, [pc, #60] <$d.279+0xc>
    15ae:      	movs	r6, #1
    15b0:      	cmp	r3, #0
    15b2:      	mov	r2, r6
    15b4:      	beq	0x15b8 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xb0> @ imm = #0
    15b6:      	movs	r2, #2
    15b8:      	ldr	r0, [r5, #24]
    15ba:      	ldr	r3, [r5, #28]
    15bc:      	ldr	r3, [r3, #12]
    15be:      	blx	r3
    15c0:      	cmp	r0, #0
    15c2:      	bne	0x15d0 <core::fmt::builders::DebugTuple::field::hd0349d9a5490f186+0xc8> @ imm = #10
    15c4:      	ldr	r0, [sp, #8]
    15c6:      	ldr	r2, [r0, #12]
    15c8:      	ldr	r0, [sp, #4]
    15ca:      	mov	r1, r5
    15cc:      	blx	r2
    15ce:      	mov	r6, r0
    15d0:      	ldr	r0, [sp, #12]
    15d2:      	strb	r6, [r4, #8]
    15d4:      	adds	r0, r0, #1
    15d6:      	str	r0, [r4, #4]
    15d8:      	mov	r0, r4
    15da:      	add	sp, #68
    15dc:      	pop	{r4, r5, r6, r7, pc}
    15de:      	mov	r8, r8

000015e0 <$d.279>:
    15e0:	8c 38 00 00	.word	0x0000388c
    15e4:	50 38 00 00	.word	0x00003850
    15e8:	88 38 00 00	.word	0x00003888
    15ec:	8e 38 00 00	.word	0x0000388e
    15f0:	8a 38 00 00	.word	0x0000388a

000015f4 <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307>:
    15f4:      	push	{r4, r5, r7, lr}
    15f6:      	add	r7, sp, #8
    15f8:      	mov	r4, r0
    15fa:      	ldrb	r1, [r0, #8]
    15fc:      	ldr	r0, [r0, #4]
    15fe:      	cmp	r0, #0
    1600:      	beq	0x1612 <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x1e> @ imm = #14
    1602:      	movs	r5, #1
    1604:      	cmp	r1, #0
    1606:      	beq	0x161c <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x28> @ imm = #18
    1608:      	strb	r5, [r4, #8]
    160a:      	subs	r0, r5, #1
    160c:      	sbcs	r5, r0
    160e:      	mov	r0, r5
    1610:      	pop	{r4, r5, r7, pc}
    1612:      	mov	r5, r1
    1614:      	subs	r0, r5, #1
    1616:      	sbcs	r5, r0
    1618:      	mov	r0, r5
    161a:      	pop	{r4, r5, r7, pc}
    161c:      	cmp	r0, #1
    161e:      	bne	0x163e <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x4a> @ imm = #28
    1620:      	ldrb	r0, [r4, #9]
    1622:      	cmp	r0, #0
    1624:      	beq	0x163e <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x4a> @ imm = #22
    1626:      	ldr	r1, [r4]
    1628:      	ldrb	r0, [r1]
    162a:      	lsls	r0, r0, #29
    162c:      	bmi	0x163e <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x4a> @ imm = #14
    162e:      	ldr	r0, [r1, #24]
    1630:      	ldr	r1, [r1, #28]
    1632:      	ldr	r3, [r1, #12]
    1634:      	ldr	r1, [pc, #32] <$d.281>
    1636:      	movs	r2, #1
    1638:      	blx	r3
    163a:      	cmp	r0, #0
    163c:      	bne	0x1608 <core::fmt::builders::DebugTuple::finish::h6d0cc63ecbd49307+0x14> @ imm = #-56
    163e:      	ldr	r1, [r4]
    1640:      	ldr	r0, [r1, #24]
    1642:      	ldr	r1, [r1, #28]
    1644:      	ldr	r3, [r1, #12]
    1646:      	ldr	r1, [pc, #20] <$d.281+0x6>
    1648:      	movs	r2, #1
    164a:      	blx	r3
    164c:      	mov	r5, r0
    164e:      	strb	r0, [r4, #8]
    1650:      	subs	r0, r5, #1
    1652:      	sbcs	r5, r0
    1654:      	mov	r0, r5
    1656:      	pop	{r4, r5, r7, pc}

00001658 <$d.281>:
    1658:	8f 38 00 00	.word	0x0000388f
    165c:	90 38 00 00	.word	0x00003890

00001660 <core::fmt::Write::write_char::h632cc6199d3eda54>:
    1660:      	push	{r4, r6, r7, lr}
    1662:      	add	r7, sp, #8
    1664:      	sub	sp, #8
    1666:      	movs	r2, #0
    1668:      	str	r2, [sp, #4]
    166a:      	cmp	r1, #128
    166c:      	bhs	0x167e <core::fmt::Write::write_char::h632cc6199d3eda54+0x1e> @ imm = #14
    166e:      	add	r2, sp, #4
    1670:      	strb	r1, [r2]
    1672:      	movs	r2, #1
    1674:      	add	r1, sp, #4
    1676:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1098
    167a:      	add	sp, #8
    167c:      	pop	{r4, r6, r7, pc}
    167e:      	lsrs	r2, r1, #11
    1680:      	bne	0x16a0 <core::fmt::Write::write_char::h632cc6199d3eda54+0x40> @ imm = #28
    1682:      	movs	r2, #63
    1684:      	ands	r2, r1
    1686:      	adds	r2, #128
    1688:      	add	r3, sp, #4
    168a:      	strb	r2, [r3, #1]
    168c:      	lsrs	r1, r1, #6
    168e:      	movs	r2, #192
    1690:      	orrs	r2, r1
    1692:      	strb	r2, [r3]
    1694:      	movs	r2, #2
    1696:      	add	r1, sp, #4
    1698:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1132
    169c:      	add	sp, #8
    169e:      	pop	{r4, r6, r7, pc}
    16a0:      	lsrs	r2, r1, #16
    16a2:      	bne	0x16ca <core::fmt::Write::write_char::h632cc6199d3eda54+0x6a> @ imm = #36
    16a4:      	movs	r2, #63
    16a6:      	ands	r2, r1
    16a8:      	adds	r2, #128
    16aa:      	add	r3, sp, #4
    16ac:      	strb	r2, [r3, #2]
    16ae:      	lsrs	r2, r1, #12
    16b0:      	movs	r4, #224
    16b2:      	orrs	r4, r2
    16b4:      	strb	r4, [r3]
    16b6:      	lsls	r1, r1, #20
    16b8:      	lsrs	r1, r1, #26
    16ba:      	adds	r1, #128
    16bc:      	strb	r1, [r3, #1]
    16be:      	movs	r2, #3
    16c0:      	add	r1, sp, #4
    16c2:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1174
    16c6:      	add	sp, #8
    16c8:      	pop	{r4, r6, r7, pc}
    16ca:      	movs	r2, #63
    16cc:      	ands	r2, r1
    16ce:      	adds	r2, #128
    16d0:      	add	r3, sp, #4
    16d2:      	strb	r2, [r3, #3]
    16d4:      	lsrs	r2, r1, #18
    16d6:      	movs	r4, #240
    16d8:      	orrs	r4, r2
    16da:      	strb	r4, [r3]
    16dc:      	lsls	r2, r1, #20
    16de:      	lsrs	r2, r2, #26
    16e0:      	adds	r2, #128
    16e2:      	strb	r2, [r3, #2]
    16e4:      	lsls	r1, r1, #14
    16e6:      	lsrs	r1, r1, #26
    16e8:      	adds	r1, #128
    16ea:      	strb	r1, [r3, #1]
    16ec:      	movs	r2, #4
    16ee:      	add	r1, sp, #4
    16f0:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1220
    16f4:      	add	sp, #8
    16f6:      	pop	{r4, r6, r7, pc}

000016f8 <core::fmt::Write::write_fmt::h9ea100d7d5f8b553>:
    16f8:      	push	{r4, r5, r7, lr}
    16fa:      	add	r7, sp, #8
    16fc:      	sub	sp, #32
    16fe:      	str	r0, [sp, #4]
    1700:      	add	r2, sp, #8
    1702:      	mov	r0, r2
    1704:      	ldm	r1!, {r3, r4, r5}
    1706:      	stm	r0!, {r3, r4, r5}
    1708:      	ldm	r1!, {r3, r4, r5}
    170a:      	stm	r0!, {r3, r4, r5}
    170c:      	add	r0, sp, #4
    170e:      	ldr	r1, [pc, #8] <$d.336+0x2>
    1710:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #216
    1714:      	add	sp, #32
    1716:      	pop	{r4, r5, r7, pc}

00001718 <$d.336>:
    1718:	88 39 00 00	.word	0x00003988

0000171c <<&mut W as core::fmt::Write>::write_str::h3fd67887be6af066>:
    171c:      	push	{r7, lr}
    171e:      	add	r7, sp, #0
    1720:      	ldr	r0, [r0]
    1722:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1270
    1726:      	pop	{r7, pc}

00001728 <<&mut W as core::fmt::Write>::write_char::he2d9b8b9670e89e5>:
    1728:      	push	{r4, r6, r7, lr}
    172a:      	add	r7, sp, #8
    172c:      	sub	sp, #8
    172e:      	ldr	r0, [r0]
    1730:      	movs	r2, #0
    1732:      	str	r2, [sp, #4]
    1734:      	cmp	r1, #128
    1736:      	bhs	0x1748 <<&mut W as core::fmt::Write>::write_char::he2d9b8b9670e89e5+0x20> @ imm = #14
    1738:      	add	r2, sp, #4
    173a:      	strb	r1, [r2]
    173c:      	movs	r2, #1
    173e:      	add	r1, sp, #4
    1740:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1300
    1744:      	add	sp, #8
    1746:      	pop	{r4, r6, r7, pc}
    1748:      	lsrs	r2, r1, #11
    174a:      	bne	0x176a <<&mut W as core::fmt::Write>::write_char::he2d9b8b9670e89e5+0x42> @ imm = #28
    174c:      	movs	r2, #63
    174e:      	ands	r2, r1
    1750:      	adds	r2, #128
    1752:      	add	r3, sp, #4
    1754:      	strb	r2, [r3, #1]
    1756:      	lsrs	r1, r1, #6
    1758:      	movs	r2, #192
    175a:      	orrs	r2, r1
    175c:      	strb	r2, [r3]
    175e:      	movs	r2, #2
    1760:      	add	r1, sp, #4
    1762:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1334
    1766:      	add	sp, #8
    1768:      	pop	{r4, r6, r7, pc}
    176a:      	lsrs	r2, r1, #16
    176c:      	bne	0x1794 <<&mut W as core::fmt::Write>::write_char::he2d9b8b9670e89e5+0x6c> @ imm = #36
    176e:      	movs	r2, #63
    1770:      	ands	r2, r1
    1772:      	adds	r2, #128
    1774:      	add	r3, sp, #4
    1776:      	strb	r2, [r3, #2]
    1778:      	lsrs	r2, r1, #12
    177a:      	movs	r4, #224
    177c:      	orrs	r4, r2
    177e:      	strb	r4, [r3]
    1780:      	lsls	r1, r1, #20
    1782:      	lsrs	r1, r1, #26
    1784:      	adds	r1, #128
    1786:      	strb	r1, [r3, #1]
    1788:      	movs	r2, #3
    178a:      	add	r1, sp, #4
    178c:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1376
    1790:      	add	sp, #8
    1792:      	pop	{r4, r6, r7, pc}
    1794:      	movs	r2, #63
    1796:      	ands	r2, r1
    1798:      	adds	r2, #128
    179a:      	add	r3, sp, #4
    179c:      	strb	r2, [r3, #3]
    179e:      	lsrs	r2, r1, #18
    17a0:      	movs	r4, #240
    17a2:      	orrs	r4, r2
    17a4:      	strb	r4, [r3]
    17a6:      	lsls	r2, r1, #20
    17a8:      	lsrs	r2, r2, #26
    17aa:      	adds	r2, #128
    17ac:      	strb	r2, [r3, #2]
    17ae:      	lsls	r1, r1, #14
    17b0:      	lsrs	r1, r1, #26
    17b2:      	adds	r1, #128
    17b4:      	strb	r1, [r3, #1]
    17b6:      	movs	r2, #4
    17b8:      	add	r1, sp, #4
    17ba:      	bl	0x1230 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h6fc89e92f681b213> @ imm = #-1422
    17be:      	add	sp, #8
    17c0:      	pop	{r4, r6, r7, pc}
    17c2:      	bmi	0x176e <<&mut W as core::fmt::Write>::write_char::he2d9b8b9670e89e5+0x46> @ imm = #-88

000017c4 <<&mut W as core::fmt::Write>::write_fmt::h7a6edd189755017a>:
    17c4:      	push	{r4, r5, r7, lr}
    17c6:      	add	r7, sp, #8
    17c8:      	sub	sp, #32
    17ca:      	ldr	r0, [r0]
    17cc:      	str	r0, [sp, #4]
    17ce:      	add	r2, sp, #8
    17d0:      	mov	r0, r2
    17d2:      	ldm	r1!, {r3, r4, r5}
    17d4:      	stm	r0!, {r3, r4, r5}
    17d6:      	ldm	r1!, {r3, r4, r5}
    17d8:      	stm	r0!, {r3, r4, r5}
    17da:      	add	r0, sp, #4
    17dc:      	ldr	r1, [pc, #8] <$d.340>
    17de:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #10
    17e2:      	add	sp, #32
    17e4:      	pop	{r4, r5, r7, pc}
    17e6:      	mov	r8, r8

000017e8 <$d.340>:
    17e8:	88 39 00 00	.word	0x00003988

000017ec <core::fmt::write::hff185d7d684cc368>:
    17ec:      	push	{r4, r5, r6, r7, lr}
    17ee:      	add	r7, sp, #12
    17f0:      	sub	sp, #68
    17f2:      	movs	r4, #32
    17f4:      	add	r5, sp, #32
    17f6:      	movs	r3, #3
    17f8:      	str	r5, [sp, #28]
    17fa:      	strb	r3, [r5, r4]
    17fc:      	str	r4, [sp, #36]
    17fe:      	movs	r3, #0
    1800:      	str	r3, [sp, #32]
    1802:      	str	r1, [sp, #60]
    1804:      	str	r0, [sp, #56]
    1806:      	str	r3, [sp, #48]
    1808:      	str	r3, [sp, #40]
    180a:      	ldr	r5, [r2, #8]
    180c:      	cmp	r5, #0
    180e:      	beq	0x18cc <core::fmt::write::hff185d7d684cc368+0xe0> @ imm = #186
    1810:      	ldr	r0, [r2, #12]
    1812:      	cmp	r0, #0
    1814:      	mov	r4, r3
    1816:      	beq	0x1914 <core::fmt::write::hff185d7d684cc368+0x128> @ imm = #250
    1818:      	str	r3, [sp, #8]
    181a:      	ldr	r1, [sp, #28]
    181c:      	adds	r1, #32
    181e:      	str	r1, [sp, #28]
    1820:      	str	r2, [sp, #24]
    1822:      	ldr	r4, [r2]
    1824:      	lsls	r0, r0, #5
    1826:      	str	r0, [sp, #16]
    1828:      	subs	r0, #32
    182a:      	lsrs	r0, r0, #5
    182c:      	adds	r0, r0, #1
    182e:      	str	r0, [sp, #4]
    1830:      	movs	r6, #0
    1832:      	str	r5, [sp, #20]
    1834:      	ldr	r2, [r4, #4]
    1836:      	cmp	r2, #0
    1838:      	beq	0x1848 <core::fmt::write::hff185d7d684cc368+0x5c> @ imm = #12
    183a:      	ldr	r0, [sp, #60]
    183c:      	ldr	r3, [r0, #12]
    183e:      	ldr	r1, [r4]
    1840:      	ldr	r0, [sp, #56]
    1842:      	blx	r3
    1844:      	cmp	r0, #0
    1846:      	bne	0x193a <core::fmt::write::hff185d7d684cc368+0x14e> @ imm = #240
    1848:      	adds	r2, r5, r6
    184a:      	ldrb	r0, [r2, #28]
    184c:      	ldr	r1, [sp, #28]
    184e:      	strb	r0, [r1]
    1850:      	ldr	r0, [r2, #4]
    1852:      	str	r0, [sp, #36]
    1854:      	ldr	r0, [r2, #8]
    1856:      	str	r0, [sp, #32]
    1858:      	ldr	r0, [r2, #20]
    185a:      	ldr	r3, [r2, #24]
    185c:      	ldr	r1, [sp, #24]
    185e:      	ldr	r1, [r1, #16]
    1860:      	movs	r5, #0
    1862:      	cmp	r0, #0
    1864:      	beq	0x1882 <core::fmt::write::hff185d7d684cc368+0x96> @ imm = #26
    1866:      	cmp	r0, #1
    1868:      	mov	r0, r5
    186a:      	bne	0x1884 <core::fmt::write::hff185d7d684cc368+0x98> @ imm = #22
    186c:      	lsls	r0, r3, #3
    186e:      	str	r0, [sp, #12]
    1870:      	adds	r0, r1, r0
    1872:      	ldr	r0, [r0, #4]
    1874:      	ldr	r3, [pc, #208] <$d.347>
    1876:      	cmp	r0, r3
    1878:      	mov	r0, r5
    187a:      	bne	0x1884 <core::fmt::write::hff185d7d684cc368+0x98> @ imm = #6
    187c:      	ldr	r0, [sp, #12]
    187e:      	ldr	r0, [r1, r0]
    1880:      	ldr	r3, [r0]
    1882:      	movs	r0, #1
    1884:      	str	r3, [sp, #44]
    1886:      	str	r0, [sp, #40]
    1888:      	ldr	r0, [r2, #12]
    188a:      	ldr	r2, [r2, #16]
    188c:      	cmp	r0, #0
    188e:      	beq	0x18a4 <core::fmt::write::hff185d7d684cc368+0xb8> @ imm = #18
    1890:      	cmp	r0, #1
    1892:      	bne	0x18a8 <core::fmt::write::hff185d7d684cc368+0xbc> @ imm = #18
    1894:      	lsls	r0, r2, #3
    1896:      	adds	r2, r1, r0
    1898:      	ldr	r2, [r2, #4]
    189a:      	ldr	r3, [pc, #172] <$d.347+0x2>
    189c:      	cmp	r2, r3
    189e:      	bne	0x18a8 <core::fmt::write::hff185d7d684cc368+0xbc> @ imm = #6
    18a0:      	ldr	r0, [r1, r0]
    18a2:      	ldr	r2, [r0]
    18a4:      	movs	r5, #1
    18a6:      	b	0x18a8 <core::fmt::write::hff185d7d684cc368+0xbc> @ imm = #-2
    18a8:      	str	r2, [sp, #52]
    18aa:      	str	r5, [sp, #48]
    18ac:      	ldr	r5, [sp, #20]
    18ae:      	ldr	r0, [r5, r6]
    18b0:      	lsls	r2, r0, #3
    18b2:      	ldr	r0, [r1, r2]
    18b4:      	adds	r1, r1, r2
    18b6:      	ldr	r2, [r1, #4]
    18b8:      	add	r1, sp, #32
    18ba:      	blx	r2
    18bc:      	cmp	r0, #0
    18be:      	bne	0x193a <core::fmt::write::hff185d7d684cc368+0x14e> @ imm = #120
    18c0:      	adds	r6, #32
    18c2:      	adds	r4, #8
    18c4:      	ldr	r0, [sp, #16]
    18c6:      	cmp	r0, r6
    18c8:      	bne	0x1834 <core::fmt::write::hff185d7d684cc368+0x48> @ imm = #-152
    18ca:      	b	0x190e <core::fmt::write::hff185d7d684cc368+0x122> @ imm = #64
    18cc:      	ldr	r0, [r2, #20]
    18ce:      	cmp	r0, #0
    18d0:      	mov	r4, r3
    18d2:      	beq	0x1914 <core::fmt::write::hff185d7d684cc368+0x128> @ imm = #62
    18d4:      	str	r3, [sp, #8]
    18d6:      	ldr	r4, [r2]
    18d8:      	str	r2, [sp, #24]
    18da:      	ldr	r5, [r2, #16]
    18dc:      	lsls	r0, r0, #3
    18de:      	subs	r0, #8
    18e0:      	lsrs	r0, r0, #3
    18e2:      	adds	r6, r0, #1
    18e4:      	str	r6, [sp, #4]
    18e6:      	ldr	r2, [r4, #4]
    18e8:      	cmp	r2, #0
    18ea:      	beq	0x18fa <core::fmt::write::hff185d7d684cc368+0x10e> @ imm = #12
    18ec:      	ldr	r0, [sp, #60]
    18ee:      	ldr	r3, [r0, #12]
    18f0:      	ldr	r1, [r4]
    18f2:      	ldr	r0, [sp, #56]
    18f4:      	blx	r3
    18f6:      	cmp	r0, #0
    18f8:      	bne	0x193a <core::fmt::write::hff185d7d684cc368+0x14e> @ imm = #62
    18fa:      	ldm	r5!, {r0, r2}
    18fc:      	add	r1, sp, #32
    18fe:      	subs	r5, #8
    1900:      	blx	r2
    1902:      	cmp	r0, #0
    1904:      	bne	0x193a <core::fmt::write::hff185d7d684cc368+0x14e> @ imm = #50
    1906:      	adds	r5, #8
    1908:      	adds	r4, #8
    190a:      	subs	r6, r6, #1
    190c:      	bne	0x18e6 <core::fmt::write::hff185d7d684cc368+0xfa> @ imm = #-42
    190e:      	ldr	r3, [sp, #8]
    1910:      	ldr	r2, [sp, #24]
    1912:      	ldr	r4, [sp, #4]
    1914:      	ldr	r0, [r2, #4]
    1916:      	cmp	r4, r0
    1918:      	blo	0x1922 <core::fmt::write::hff185d7d684cc368+0x136> @ imm = #6
    191a:      	mov	r2, r3
    191c:      	cmp	r4, r0
    191e:      	blo	0x192c <core::fmt::write::hff185d7d684cc368+0x140> @ imm = #10
    1920:      	b	0x1940 <core::fmt::write::hff185d7d684cc368+0x154> @ imm = #28
    1922:      	lsls	r1, r4, #3
    1924:      	ldr	r2, [r2]
    1926:      	adds	r2, r2, r1
    1928:      	cmp	r4, r0
    192a:      	bhs	0x1940 <core::fmt::write::hff185d7d684cc368+0x154> @ imm = #18
    192c:      	ldr	r0, [sp, #60]
    192e:      	ldr	r3, [r0, #12]
    1930:      	ldm	r2, {r1, r2}
    1932:      	ldr	r0, [sp, #56]
    1934:      	blx	r3
    1936:      	cmp	r0, #0
    1938:      	beq	0x1940 <core::fmt::write::hff185d7d684cc368+0x154> @ imm = #4
    193a:      	movs	r0, #1
    193c:      	add	sp, #68
    193e:      	pop	{r4, r5, r6, r7, pc}
    1940:      	movs	r0, #0
    1942:      	add	sp, #68
    1944:      	pop	{r4, r5, r6, r7, pc}
    1946:      	mov	r8, r8

00001948 <$d.347>:
    1948:	dd 0f 00 00	.word	0x00000fdd

0000194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a>:
    194c:      	push	{r4, r5, r6, r7, lr}
    194e:      	add	r7, sp, #12
    1950:      	sub	sp, #44
    1952:      	str	r3, [sp, #32]
    1954:      	str	r2, [sp, #36]
    1956:      	mov	r4, r0
    1958:      	ldr	r5, [r7, #12]
    195a:      	cmp	r1, #0
    195c:      	beq	0x196a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1e> @ imm = #10
    195e:      	ldr	r3, [r4]
    1960:      	movs	r0, #1
    1962:      	ands	r0, r3
    1964:      	beq	0x199c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x50> @ imm = #52
    1966:      	movs	r1, #43
    1968:      	b	0x19a0 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x54> @ imm = #52
    196a:      	ldr	r3, [r4]
    196c:      	adds	r2, r5, #1
    196e:      	movs	r0, #45
    1970:      	str	r0, [sp, #28]
    1972:      	lsls	r1, r3, #29
    1974:      	movs	r0, #0
    1976:      	cmp	r1, #0
    1978:      	bpl	0x19ac <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x60> @ imm = #48
    197a:      	ldr	r1, [sp, #32]
    197c:      	cmp	r1, #0
    197e:      	str	r3, [sp, #16]
    1980:      	beq	0x19d6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x8a> @ imm = #82
    1982:      	movs	r6, #3
    1984:      	mov	r0, r1
    1986:      	ands	r0, r6
    1988:      	str	r0, [sp, #12]
    198a:      	subs	r0, r1, #1
    198c:      	cmp	r0, #3
    198e:      	bhs	0x19da <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x8e> @ imm = #72
    1990:      	movs	r1, #0
    1992:      	ldr	r3, [sp, #36]
    1994:      	ldr	r0, [sp, #12]
    1996:      	cmp	r0, #0
    1998:      	bne	0x1a48 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xfc> @ imm = #172
    199a:      	b	0x1a7a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12e> @ imm = #220
    199c:      	movs	r1, #17
    199e:      	lsls	r1, r1, #16
    19a0:      	str	r1, [sp, #28]
    19a2:      	adds	r2, r0, r5
    19a4:      	lsls	r1, r3, #29
    19a6:      	movs	r0, #0
    19a8:      	cmp	r1, #0
    19aa:      	bmi	0x197a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2e> @ imm = #-52
    19ac:      	str	r0, [sp, #36]
    19ae:      	mov	r1, r0
    19b0:      	ldr	r6, [r7, #8]
    19b2:      	ldr	r0, [r4, #8]
    19b4:      	cmp	r0, #1
    19b6:      	beq	0x1a88 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x13c> @ imm = #206
    19b8:      	mov	r0, r4
    19ba:      	mov	r3, r1
    19bc:      	ldr	r1, [sp, #28]
    19be:      	ldr	r2, [sp, #36]
    19c0:      	bl	0x1c68 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06> @ imm = #676
    19c4:      	cmp	r0, #0
    19c6:      	beq	0x19ca <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x7e> @ imm = #0
    19c8:      	b	0x1b52 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x206> @ imm = #390
    19ca:      	ldr	r0, [r4, #24]
    19cc:      	ldr	r1, [r4, #28]
    19ce:      	ldr	r3, [r1, #12]
    19d0:      	mov	r1, r6
    19d2:      	mov	r2, r5
    19d4:      	b	0x1ad2 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x186> @ imm = #250
    19d6:      	movs	r1, #0
    19d8:      	b	0x1a7a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12e> @ imm = #158
    19da:      	str	r2, [sp, #8]
    19dc:      	str	r5, [sp, #20]
    19de:      	str	r4, [sp, #24]
    19e0:      	mov	r0, r1
    19e2:      	bics	r0, r6
    19e4:      	rsbs	r5, r0, #0
    19e6:      	movs	r1, #0
    19e8:      	str	r1, [sp, #40]
    19ea:      	ldr	r3, [sp, #36]
    19ec:      	b	0x19f4 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xa8> @ imm = #4
    19ee:      	adds	r3, r3, #4
    19f0:      	adds	r5, r5, #4
    19f2:      	beq	0x1a3c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xf0> @ imm = #70
    19f4:      	mov	r2, r6
    19f6:      	movs	r4, #1
    19f8:      	ldr	r0, [sp, #40]
    19fa:      	ldrsb	r6, [r3, r0]
    19fc:      	movs	r0, #64
    19fe:      	mvns	r0, r0
    1a00:      	cmp	r6, r0
    1a02:      	bgt	0x1a1c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xd0> @ imm = #22
    1a04:      	ldrsb	r4, [r3, r4]
    1a06:      	cmp	r4, r0
    1a08:      	mov	r6, r2
    1a0a:      	bgt	0x1a26 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xda> @ imm = #24
    1a0c:      	movs	r4, #2
    1a0e:      	ldrsb	r4, [r3, r4]
    1a10:      	cmp	r4, r0
    1a12:      	bgt	0x1a30 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xe4> @ imm = #26
    1a14:      	ldrsb	r4, [r3, r6]
    1a16:      	cmp	r4, r0
    1a18:      	ble	0x19ee <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xa2> @ imm = #-46
    1a1a:      	b	0x1a38 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xec> @ imm = #26
    1a1c:      	adds	r1, r1, #1
    1a1e:      	ldrsb	r4, [r3, r4]
    1a20:      	cmp	r4, r0
    1a22:      	mov	r6, r2
    1a24:      	ble	0x1a0c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xc0> @ imm = #-28
    1a26:      	adds	r1, r1, #1
    1a28:      	movs	r4, #2
    1a2a:      	ldrsb	r4, [r3, r4]
    1a2c:      	cmp	r4, r0
    1a2e:      	ble	0x1a14 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xc8> @ imm = #-30
    1a30:      	adds	r1, r1, #1
    1a32:      	ldrsb	r4, [r3, r6]
    1a34:      	cmp	r4, r0
    1a36:      	ble	0x19ee <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xa2> @ imm = #-76
    1a38:      	adds	r1, r1, #1
    1a3a:      	b	0x19ee <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0xa2> @ imm = #-80
    1a3c:      	ldr	r4, [sp, #24]
    1a3e:      	ldr	r5, [sp, #20]
    1a40:      	ldr	r2, [sp, #8]
    1a42:      	ldr	r0, [sp, #12]
    1a44:      	cmp	r0, #0
    1a46:      	beq	0x1a7a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12e> @ imm = #48
    1a48:      	mov	r6, r2
    1a4a:      	movs	r0, #0
    1a4c:      	ldrsb	r2, [r3, r0]
    1a4e:      	movs	r0, #64
    1a50:      	mvns	r0, r0
    1a52:      	cmp	r2, r0
    1a54:      	ble	0x1a58 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x10c> @ imm = #0
    1a56:      	adds	r1, r1, #1
    1a58:      	ldr	r2, [sp, #12]
    1a5a:      	cmp	r2, #1
    1a5c:      	beq	0x1a78 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12c> @ imm = #24
    1a5e:      	movs	r2, #1
    1a60:      	ldrsb	r2, [r3, r2]
    1a62:      	cmp	r2, r0
    1a64:      	ble	0x1a68 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x11c> @ imm = #0
    1a66:      	adds	r1, r1, #1
    1a68:      	ldr	r2, [sp, #12]
    1a6a:      	cmp	r2, #2
    1a6c:      	beq	0x1a78 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12c> @ imm = #8
    1a6e:      	movs	r2, #2
    1a70:      	ldrsb	r2, [r3, r2]
    1a72:      	cmp	r2, r0
    1a74:      	ble	0x1a78 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x12c> @ imm = #0
    1a76:      	adds	r1, r1, #1
    1a78:      	mov	r2, r6
    1a7a:      	adds	r2, r1, r2
    1a7c:      	ldr	r1, [sp, #32]
    1a7e:      	ldr	r3, [sp, #16]
    1a80:      	ldr	r6, [r7, #8]
    1a82:      	ldr	r0, [r4, #8]
    1a84:      	cmp	r0, #1
    1a86:      	bne	0x19b8 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x6c> @ imm = #-210
    1a88:      	str	r5, [sp, #20]
    1a8a:      	ldr	r5, [r4, #12]
    1a8c:      	cmp	r5, r2
    1a8e:      	bls	0x1ab8 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x16c> @ imm = #38
    1a90:      	str	r1, [sp, #32]
    1a92:      	str	r4, [sp, #24]
    1a94:      	lsls	r0, r3, #28
    1a96:      	str	r6, [sp, #12]
    1a98:      	bmi	0x1adc <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x190> @ imm = #64
    1a9a:      	movs	r0, #32
    1a9c:      	ldr	r1, [sp, #24]
    1a9e:      	ldrb	r1, [r1, r0]
    1aa0:      	cmp	r1, #3
    1aa2:      	bne	0x1aa6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x15a> @ imm = #0
    1aa4:      	movs	r1, #1
    1aa6:      	subs	r0, r5, r2
    1aa8:      	lsls	r2, r1, #30
    1aaa:      	beq	0x1b2a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1de> @ imm = #124
    1aac:      	cmp	r1, #1
    1aae:      	bne	0x1b2e <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1e2> @ imm = #124
    1ab0:      	movs	r1, #0
    1ab2:      	str	r1, [sp, #8]
    1ab4:      	mov	r1, r0
    1ab6:      	b	0x1b36 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1ea> @ imm = #124
    1ab8:      	mov	r0, r4
    1aba:      	mov	r3, r1
    1abc:      	ldr	r1, [sp, #28]
    1abe:      	ldr	r2, [sp, #36]
    1ac0:      	bl	0x1c68 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06> @ imm = #420
    1ac4:      	cmp	r0, #0
    1ac6:      	bne	0x1b52 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x206> @ imm = #136
    1ac8:      	ldr	r0, [r4, #24]
    1aca:      	ldr	r1, [r4, #28]
    1acc:      	ldr	r3, [r1, #12]
    1ace:      	mov	r1, r6
    1ad0:      	ldr	r2, [sp, #20]
    1ad2:      	blx	r3
    1ad4:      	mov	r2, r0
    1ad6:      	mov	r0, r2
    1ad8:      	add	sp, #44
    1ada:      	pop	{r4, r5, r6, r7, pc}
    1adc:      	mov	r6, r2
    1ade:      	movs	r0, #32
    1ae0:      	ldr	r4, [sp, #24]
    1ae2:      	ldrb	r1, [r4, r0]
    1ae4:      	str	r1, [sp, #8]
    1ae6:      	movs	r1, #1
    1ae8:      	str	r1, [sp, #16]
    1aea:      	strb	r1, [r4, r0]
    1aec:      	ldr	r0, [r4, #4]
    1aee:      	str	r0, [sp, #4]
    1af0:      	movs	r0, #48
    1af2:      	str	r0, [r4, #4]
    1af4:      	mov	r0, r4
    1af6:      	ldr	r1, [sp, #28]
    1af8:      	ldr	r2, [sp, #36]
    1afa:      	ldr	r3, [sp, #32]
    1afc:      	bl	0x1c68 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06> @ imm = #360
    1b00:      	cmp	r0, #0
    1b02:      	beq	0x1b0c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1c0> @ imm = #6
    1b04:      	ldr	r2, [sp, #16]
    1b06:      	mov	r0, r2
    1b08:      	add	sp, #44
    1b0a:      	pop	{r4, r5, r6, r7, pc}
    1b0c:      	adds	r4, #32
    1b0e:      	ldrb	r1, [r4]
    1b10:      	cmp	r1, #3
    1b12:      	bne	0x1b16 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1ca> @ imm = #0
    1b14:      	movs	r1, #1
    1b16:      	subs	r0, r5, r6
    1b18:      	lsls	r2, r1, #30
    1b1a:      	str	r4, [sp, #28]
    1b1c:      	beq	0x1b90 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x244> @ imm = #112
    1b1e:      	cmp	r1, #1
    1b20:      	bne	0x1b94 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x248> @ imm = #112
    1b22:      	movs	r1, #0
    1b24:      	str	r1, [sp, #36]
    1b26:      	mov	r1, r0
    1b28:      	b	0x1b9c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x250> @ imm = #112
    1b2a:      	movs	r1, #0
    1b2c:      	b	0x1b34 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1e8> @ imm = #4
    1b2e:      	lsrs	r1, r0, #1
    1b30:      	adds	r0, r0, #1
    1b32:      	lsrs	r0, r0, #1
    1b34:      	str	r0, [sp, #8]
    1b36:      	ldr	r0, [sp, #24]
    1b38:      	adds	r4, r1, #1
    1b3a:      	ldr	r1, [r0, #4]
    1b3c:      	str	r1, [sp, #40]
    1b3e:      	ldr	r6, [r0, #24]
    1b40:      	ldr	r5, [r0, #28]
    1b42:      	subs	r4, r4, #1
    1b44:      	beq	0x1b5a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x20e> @ imm = #18
    1b46:      	ldr	r2, [r5, #16]
    1b48:      	mov	r0, r6
    1b4a:      	ldr	r1, [sp, #40]
    1b4c:      	blx	r2
    1b4e:      	cmp	r0, #0
    1b50:      	beq	0x1b42 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x1f6> @ imm = #-18
    1b52:      	movs	r2, #1
    1b54:      	mov	r0, r2
    1b56:      	add	sp, #44
    1b58:      	pop	{r4, r5, r6, r7, pc}
    1b5a:      	movs	r0, #17
    1b5c:      	lsls	r0, r0, #16
    1b5e:      	ldr	r1, [sp, #40]
    1b60:      	cmp	r1, r0
    1b62:      	bne	0x1b68 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x21c> @ imm = #2
    1b64:      	movs	r1, #0
    1b66:      	str	r1, [sp, #8]
    1b68:      	ldr	r4, [sp, #24]
    1b6a:      	ldr	r5, [sp, #20]
    1b6c:      	ldr	r6, [sp, #12]
    1b6e:      	movs	r2, #1
    1b70:      	ldr	r1, [sp, #40]
    1b72:      	cmp	r1, r0
    1b74:      	beq	0x1ad6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x18a> @ imm = #-162
    1b76:      	str	r2, [sp, #16]
    1b78:      	mov	r0, r4
    1b7a:      	ldr	r1, [sp, #28]
    1b7c:      	ldr	r2, [sp, #36]
    1b7e:      	ldr	r3, [sp, #32]
    1b80:      	bl	0x1c68 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06> @ imm = #228
    1b84:      	cmp	r0, #0
    1b86:      	beq	0x1bf0 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2a4> @ imm = #102
    1b88:      	ldr	r2, [sp, #16]
    1b8a:      	mov	r0, r2
    1b8c:      	add	sp, #44
    1b8e:      	pop	{r4, r5, r6, r7, pc}
    1b90:      	movs	r1, #0
    1b92:      	b	0x1b9a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x24e> @ imm = #4
    1b94:      	lsrs	r1, r0, #1
    1b96:      	adds	r0, r0, #1
    1b98:      	lsrs	r0, r0, #1
    1b9a:      	str	r0, [sp, #36]
    1b9c:      	ldr	r0, [sp, #24]
    1b9e:      	adds	r4, r1, #1
    1ba0:      	ldr	r1, [r0, #4]
    1ba2:      	str	r1, [sp, #40]
    1ba4:      	ldr	r6, [r0, #24]
    1ba6:      	ldr	r5, [r0, #28]
    1ba8:      	subs	r4, r4, #1
    1baa:      	beq	0x1bc0 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x274> @ imm = #18
    1bac:      	ldr	r2, [r5, #16]
    1bae:      	mov	r0, r6
    1bb0:      	ldr	r1, [sp, #40]
    1bb2:      	blx	r2
    1bb4:      	cmp	r0, #0
    1bb6:      	beq	0x1ba8 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x25c> @ imm = #-18
    1bb8:      	ldr	r2, [sp, #16]
    1bba:      	mov	r0, r2
    1bbc:      	add	sp, #44
    1bbe:      	pop	{r4, r5, r6, r7, pc}
    1bc0:      	movs	r0, #17
    1bc2:      	lsls	r0, r0, #16
    1bc4:      	ldr	r3, [sp, #40]
    1bc6:      	cmp	r3, r0
    1bc8:      	bne	0x1bce <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x282> @ imm = #2
    1bca:      	movs	r1, #0
    1bcc:      	str	r1, [sp, #36]
    1bce:      	ldr	r5, [sp, #24]
    1bd0:      	ldr	r1, [sp, #12]
    1bd2:      	ldr	r2, [sp, #16]
    1bd4:      	cmp	r3, r0
    1bd6:      	bne	0x1bda <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x28e> @ imm = #0
    1bd8:      	b	0x1ad6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x18a> @ imm = #-262
    1bda:      	ldr	r0, [r5, #24]
    1bdc:      	ldr	r2, [r5, #28]
    1bde:      	ldr	r3, [r2, #12]
    1be0:      	ldr	r2, [sp, #20]
    1be2:      	blx	r3
    1be4:      	cmp	r0, #0
    1be6:      	beq	0x1c24 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2d8> @ imm = #58
    1be8:      	ldr	r2, [sp, #16]
    1bea:      	mov	r0, r2
    1bec:      	add	sp, #44
    1bee:      	pop	{r4, r5, r6, r7, pc}
    1bf0:      	ldr	r0, [r4, #24]
    1bf2:      	ldr	r1, [r4, #28]
    1bf4:      	ldr	r3, [r1, #12]
    1bf6:      	mov	r1, r6
    1bf8:      	mov	r2, r5
    1bfa:      	blx	r3
    1bfc:      	cmp	r0, #0
    1bfe:      	ldr	r2, [sp, #16]
    1c00:      	beq	0x1c04 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2b8> @ imm = #0
    1c02:      	b	0x1ad6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x18a> @ imm = #-304
    1c04:      	ldr	r0, [r4, #24]
    1c06:      	str	r0, [sp, #36]
    1c08:      	ldr	r6, [r4, #28]
    1c0a:      	movs	r4, #0
    1c0c:      	ldr	r5, [sp, #8]
    1c0e:      	cmp	r5, r4
    1c10:      	beq	0x1c58 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x30c> @ imm = #68
    1c12:      	ldr	r2, [r6, #16]
    1c14:      	ldr	r0, [sp, #36]
    1c16:      	ldr	r1, [sp, #40]
    1c18:      	blx	r2
    1c1a:      	adds	r4, r4, #1
    1c1c:      	cmp	r0, #0
    1c1e:      	beq	0x1c0e <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2c2> @ imm = #-20
    1c20:      	subs	r0, r4, #1
    1c22:      	b	0x1c5a <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x30e> @ imm = #52
    1c24:      	ldr	r0, [r5, #24]
    1c26:      	str	r0, [sp, #32]
    1c28:      	ldr	r6, [r5, #28]
    1c2a:      	movs	r4, #0
    1c2c:      	ldr	r0, [sp, #36]
    1c2e:      	cmp	r0, r4
    1c30:      	beq	0x1c4c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x300> @ imm = #24
    1c32:      	ldr	r2, [r6, #16]
    1c34:      	ldr	r0, [sp, #32]
    1c36:      	ldr	r1, [sp, #40]
    1c38:      	blx	r2
    1c3a:      	ldr	r2, [sp, #16]
    1c3c:      	adds	r4, r4, #1
    1c3e:      	cmp	r0, #0
    1c40:      	beq	0x1c2c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x2e0> @ imm = #-24
    1c42:      	subs	r0, r4, #1
    1c44:      	ldr	r1, [sp, #36]
    1c46:      	cmp	r0, r1
    1c48:      	bhs	0x1c4c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x300> @ imm = #0
    1c4a:      	b	0x1ad6 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x18a> @ imm = #-376
    1c4c:      	ldr	r0, [sp, #8]
    1c4e:      	ldr	r1, [sp, #28]
    1c50:      	strb	r0, [r1]
    1c52:      	ldr	r0, [sp, #4]
    1c54:      	str	r0, [r5, #4]
    1c56:      	b	0x1c60 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x314> @ imm = #6
    1c58:      	mov	r0, r5
    1c5a:      	cmp	r0, r5
    1c5c:      	bhs	0x1c60 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x314> @ imm = #0
    1c5e:      	b	0x1b52 <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a+0x206> @ imm = #-272
    1c60:      	movs	r2, #0
    1c62:      	mov	r0, r2
    1c64:      	add	sp, #44
    1c66:      	pop	{r4, r5, r6, r7, pc}

00001c68 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06>:
    1c68:      	push	{r4, r5, r6, r7, lr}
    1c6a:      	add	r7, sp, #12
    1c6c:      	sub	sp, #4
    1c6e:      	mov	r4, r3
    1c70:      	mov	r5, r2
    1c72:      	mov	r6, r0
    1c74:      	movs	r0, #17
    1c76:      	lsls	r0, r0, #16
    1c78:      	cmp	r1, r0
    1c7a:      	beq	0x1c8e <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06+0x26> @ imm = #16
    1c7c:      	ldr	r0, [r6, #24]
    1c7e:      	ldr	r2, [r6, #28]
    1c80:      	ldr	r2, [r2, #16]
    1c82:      	blx	r2
    1c84:      	cmp	r0, #0
    1c86:      	beq	0x1c8e <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06+0x26> @ imm = #4
    1c88:      	movs	r0, #1
    1c8a:      	add	sp, #4
    1c8c:      	pop	{r4, r5, r6, r7, pc}
    1c8e:      	cmp	r5, #0
    1c90:      	beq	0x1ca2 <core::fmt::Formatter::pad_integral::write_prefix::hdb27e999f5442c06+0x3a> @ imm = #14
    1c92:      	ldr	r0, [r6, #24]
    1c94:      	ldr	r1, [r6, #28]
    1c96:      	ldr	r3, [r1, #12]
    1c98:      	mov	r1, r5
    1c9a:      	mov	r2, r4
    1c9c:      	blx	r3
    1c9e:      	add	sp, #4
    1ca0:      	pop	{r4, r5, r6, r7, pc}
    1ca2:      	movs	r0, #0
    1ca4:      	add	sp, #4
    1ca6:      	pop	{r4, r5, r6, r7, pc}

00001ca8 <core::fmt::Formatter::pad::haa777c0a9492680f>:
    1ca8:      	push	{r4, r5, r6, r7, lr}
    1caa:      	add	r7, sp, #12
    1cac:      	sub	sp, #44
    1cae:      	mov	r3, r0
    1cb0:      	ldr	r0, [r0, #16]
    1cb2:      	ldr	r4, [r3, #8]
    1cb4:      	cmp	r4, #1
    1cb6:      	str	r3, [sp, #36]
    1cb8:      	bne	0x1cc0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x18> @ imm = #4
    1cba:      	cmp	r0, #1
    1cbc:      	beq	0x1cc6 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1e> @ imm = #6
    1cbe:      	b	0x1e1e <core::fmt::Formatter::pad::haa777c0a9492680f+0x176> @ imm = #348
    1cc0:      	cmp	r0, #1
    1cc2:      	beq	0x1cc6 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1e> @ imm = #0
    1cc4:      	b	0x1f14 <core::fmt::Formatter::pad::haa777c0a9492680f+0x26c> @ imm = #588
    1cc6:      	str	r4, [sp, #16]
    1cc8:      	str	r2, [sp, #32]
    1cca:      	adds	r0, r1, r2
    1ccc:      	mov	r5, r1
    1cce:      	ldr	r4, [r3, #20]
    1cd0:      	cmp	r4, #0
    1cd2:      	str	r1, [sp, #28]
    1cd4:      	beq	0x1d78 <core::fmt::Formatter::pad::haa777c0a9492680f+0xd0> @ imm = #160
    1cd6:      	movs	r1, #17
    1cd8:      	lsls	r1, r1, #16
    1cda:      	str	r1, [sp, #12]
    1cdc:      	movs	r1, #7
    1cde:      	str	r0, [sp, #40]
    1ce0:      	lsls	r0, r1, #18
    1ce2:      	str	r0, [sp, #8]
    1ce4:      	ldr	r0, [sp, #40]
    1ce6:      	movs	r2, #0
    1ce8:      	b	0x1d20 <core::fmt::Formatter::pad::haa777c0a9492680f+0x78> @ imm = #52
    1cea:      	ldrb	r0, [r5]
    1cec:      	str	r0, [sp, #20]
    1cee:      	movs	r0, #63
    1cf0:      	str	r2, [sp, #4]
    1cf2:      	ldr	r2, [sp, #20]
    1cf4:      	ands	r0, r2
    1cf6:      	ldr	r2, [sp, #4]
    1cf8:      	str	r0, [sp, #20]
    1cfa:      	adds	r5, r5, #1
    1cfc:      	lsls	r6, r6, #18
    1cfe:      	ldr	r0, [sp, #8]
    1d00:      	ands	r6, r0
    1d02:      	lsls	r1, r1, #12
    1d04:      	adds	r1, r1, r6
    1d06:      	ldr	r0, [sp, #24]
    1d08:      	lsls	r6, r0, #6
    1d0a:      	adds	r1, r1, r6
    1d0c:      	ldr	r0, [sp, #20]
    1d0e:      	adds	r1, r1, r0
    1d10:      	ldr	r6, [sp, #12]
    1d12:      	cmp	r1, r6
    1d14:      	ldr	r0, [sp, #40]
    1d16:      	beq	0x1dd8 <core::fmt::Formatter::pad::haa777c0a9492680f+0x130> @ imm = #190
    1d18:      	subs	r1, r2, r3
    1d1a:      	adds	r2, r1, r5
    1d1c:      	subs	r4, r4, #1
    1d1e:      	beq	0x1d7a <core::fmt::Formatter::pad::haa777c0a9492680f+0xd2> @ imm = #88
    1d20:      	cmp	r5, r0
    1d22:      	beq	0x1dd8 <core::fmt::Formatter::pad::haa777c0a9492680f+0x130> @ imm = #178
    1d24:      	mov	r3, r5
    1d26:      	movs	r1, #0
    1d28:      	ldrsb	r6, [r5, r1]
    1d2a:      	adds	r5, r5, #1
    1d2c:      	cmp	r6, #0
    1d2e:      	bpl	0x1d18 <core::fmt::Formatter::pad::haa777c0a9492680f+0x70> @ imm = #-26
    1d30:      	cmp	r5, r0
    1d32:      	mov	r5, r0
    1d34:      	beq	0x1d3e <core::fmt::Formatter::pad::haa777c0a9492680f+0x96> @ imm = #6
    1d36:      	ldrb	r5, [r3, #1]
    1d38:      	movs	r1, #63
    1d3a:      	ands	r1, r5
    1d3c:      	adds	r5, r3, #2
    1d3e:      	uxtb	r6, r6
    1d40:      	cmp	r6, #224
    1d42:      	blo	0x1d18 <core::fmt::Formatter::pad::haa777c0a9492680f+0x70> @ imm = #-46
    1d44:      	cmp	r5, r0
    1d46:      	beq	0x1d62 <core::fmt::Formatter::pad::haa777c0a9492680f+0xba> @ imm = #24
    1d48:      	ldrb	r0, [r5]
    1d4a:      	str	r0, [sp, #24]
    1d4c:      	str	r6, [sp, #20]
    1d4e:      	movs	r6, #63
    1d50:      	ldr	r0, [sp, #24]
    1d52:      	ands	r6, r0
    1d54:      	ldr	r0, [sp, #40]
    1d56:      	str	r6, [sp, #24]
    1d58:      	ldr	r6, [sp, #20]
    1d5a:      	adds	r5, r5, #1
    1d5c:      	cmp	r6, #240
    1d5e:      	blo	0x1d18 <core::fmt::Formatter::pad::haa777c0a9492680f+0x70> @ imm = #-74
    1d60:      	b	0x1d6c <core::fmt::Formatter::pad::haa777c0a9492680f+0xc4> @ imm = #8
    1d62:      	movs	r5, #0
    1d64:      	str	r5, [sp, #24]
    1d66:      	mov	r5, r0
    1d68:      	cmp	r6, #240
    1d6a:      	blo	0x1d18 <core::fmt::Formatter::pad::haa777c0a9492680f+0x70> @ imm = #-86
    1d6c:      	cmp	r5, r0
    1d6e:      	bne	0x1cea <core::fmt::Formatter::pad::haa777c0a9492680f+0x42> @ imm = #-136
    1d70:      	movs	r5, #0
    1d72:      	str	r5, [sp, #20]
    1d74:      	mov	r5, r0
    1d76:      	b	0x1cfc <core::fmt::Formatter::pad::haa777c0a9492680f+0x54> @ imm = #-126
    1d78:      	movs	r2, #0
    1d7a:      	cmp	r5, r0
    1d7c:      	beq	0x1dd8 <core::fmt::Formatter::pad::haa777c0a9492680f+0x130> @ imm = #88
    1d7e:      	movs	r3, #0
    1d80:      	ldrsb	r1, [r5, r3]
    1d82:      	cmp	r1, #0
    1d84:      	bpl	0x1de4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x13c> @ imm = #92
    1d86:      	uxtb	r1, r1
    1d88:      	adds	r4, r5, #1
    1d8a:      	cmp	r4, r0
    1d8c:      	mov	r6, r0
    1d8e:      	beq	0x1d98 <core::fmt::Formatter::pad::haa777c0a9492680f+0xf0> @ imm = #6
    1d90:      	adds	r6, r5, #2
    1d92:      	ldrb	r3, [r5, #1]
    1d94:      	lsls	r3, r3, #26
    1d96:      	lsrs	r3, r3, #20
    1d98:      	cmp	r1, #224
    1d9a:      	blo	0x1de4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x13c> @ imm = #70
    1d9c:      	cmp	r6, r0
    1d9e:      	beq	0x1dae <core::fmt::Formatter::pad::haa777c0a9492680f+0x106> @ imm = #12
    1da0:      	ldrb	r5, [r6]
    1da2:      	movs	r4, #63
    1da4:      	ands	r4, r5
    1da6:      	adds	r5, r6, #1
    1da8:      	cmp	r1, #240
    1daa:      	bhs	0x1db6 <core::fmt::Formatter::pad::haa777c0a9492680f+0x10e> @ imm = #8
    1dac:      	b	0x1de4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x13c> @ imm = #52
    1dae:      	movs	r4, #0
    1db0:      	mov	r5, r0
    1db2:      	cmp	r1, #240
    1db4:      	blo	0x1de4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x13c> @ imm = #44
    1db6:      	orrs	r4, r3
    1db8:      	cmp	r5, r0
    1dba:      	beq	0x1dc4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x11c> @ imm = #6
    1dbc:      	ldrb	r3, [r5]
    1dbe:      	movs	r0, #63
    1dc0:      	ands	r0, r3
    1dc2:      	b	0x1dc6 <core::fmt::Formatter::pad::haa777c0a9492680f+0x11e> @ imm = #0
    1dc4:      	movs	r0, #0
    1dc6:      	lsls	r3, r4, #6
    1dc8:      	lsls	r1, r1, #29
    1dca:      	lsrs	r1, r1, #11
    1dcc:      	adds	r1, r3, r1
    1dce:      	adds	r0, r1, r0
    1dd0:      	movs	r1, #17
    1dd2:      	lsls	r1, r1, #16
    1dd4:      	cmp	r0, r1
    1dd6:      	bne	0x1de4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x13c> @ imm = #10
    1dd8:      	add	r3, sp, #28
    1dda:      	ldm	r3, {r1, r2, r3}
    1ddc:      	ldr	r4, [sp, #16]
    1dde:      	cmp	r4, #1
    1de0:      	beq	0x1e1e <core::fmt::Formatter::pad::haa777c0a9492680f+0x176> @ imm = #58
    1de2:      	b	0x1f14 <core::fmt::Formatter::pad::haa777c0a9492680f+0x26c> @ imm = #302
    1de4:      	cmp	r2, #0
    1de6:      	mov	r5, r2
    1de8:      	ldr	r2, [sp, #32]
    1dea:      	ldr	r1, [sp, #28]
    1dec:      	beq	0x1e0a <core::fmt::Formatter::pad::haa777c0a9492680f+0x162> @ imm = #26
    1dee:      	cmp	r5, r2
    1df0:      	bhs	0x1e02 <core::fmt::Formatter::pad::haa777c0a9492680f+0x15a> @ imm = #14
    1df2:      	ldrsb	r4, [r1, r5]
    1df4:      	movs	r0, #63
    1df6:      	mvns	r3, r0
    1df8:      	movs	r0, #0
    1dfa:      	cmp	r4, r3
    1dfc:      	mov	r3, r0
    1dfe:      	bge	0x1e0a <core::fmt::Formatter::pad::haa777c0a9492680f+0x162> @ imm = #8
    1e00:      	b	0x1e0e <core::fmt::Formatter::pad::haa777c0a9492680f+0x166> @ imm = #10
    1e02:      	movs	r0, #0
    1e04:      	cmp	r5, r2
    1e06:      	mov	r3, r0
    1e08:      	bne	0x1e0e <core::fmt::Formatter::pad::haa777c0a9492680f+0x166> @ imm = #2
    1e0a:      	mov	r0, r1
    1e0c:      	mov	r3, r5
    1e0e:      	cmp	r0, #0
    1e10:      	bne	0x1f04 <core::fmt::Formatter::pad::haa777c0a9492680f+0x25c> @ imm = #240
    1e12:      	cmp	r0, #0
    1e14:      	ldr	r3, [sp, #36]
    1e16:      	ldr	r4, [sp, #16]
    1e18:      	bne	0x1f0e <core::fmt::Formatter::pad::haa777c0a9492680f+0x266> @ imm = #242
    1e1a:      	cmp	r4, #1
    1e1c:      	bne	0x1f14 <core::fmt::Formatter::pad::haa777c0a9492680f+0x26c> @ imm = #244
    1e1e:      	ldr	r6, [r3, #12]
    1e20:      	cmp	r2, #0
    1e22:      	str	r2, [sp, #32]
    1e24:      	str	r1, [sp, #28]
    1e26:      	beq	0x1e3e <core::fmt::Formatter::pad::haa777c0a9492680f+0x196> @ imm = #20
    1e28:      	movs	r5, #3
    1e2a:      	mov	r3, r2
    1e2c:      	ands	r3, r5
    1e2e:      	subs	r0, r2, #1
    1e30:      	cmp	r0, #3
    1e32:      	bhs	0x1e42 <core::fmt::Formatter::pad::haa777c0a9492680f+0x19a> @ imm = #12
    1e34:      	movs	r2, #0
    1e36:      	mov	r4, r1
    1e38:      	cmp	r3, #0
    1e3a:      	bne	0x1ea6 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1fe> @ imm = #104
    1e3c:      	b	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #144
    1e3e:      	movs	r2, #0
    1e40:      	b	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #140
    1e42:      	str	r3, [sp, #20]
    1e44:      	str	r6, [sp, #24]
    1e46:      	mov	r0, r2
    1e48:      	bics	r0, r5
    1e4a:      	rsbs	r6, r0, #0
    1e4c:      	movs	r2, #0
    1e4e:      	str	r2, [sp, #40]
    1e50:      	mov	r4, r1
    1e52:      	mov	r1, r5
    1e54:      	b	0x1e5c <core::fmt::Formatter::pad::haa777c0a9492680f+0x1b4> @ imm = #4
    1e56:      	adds	r4, r4, #4
    1e58:      	adds	r6, r6, #4
    1e5a:      	beq	0x1e9e <core::fmt::Formatter::pad::haa777c0a9492680f+0x1f6> @ imm = #64
    1e5c:      	movs	r3, #1
    1e5e:      	ldr	r0, [sp, #40]
    1e60:      	ldrsb	r5, [r4, r0]
    1e62:      	movs	r0, #64
    1e64:      	mvns	r0, r0
    1e66:      	cmp	r5, r0
    1e68:      	bgt	0x1e80 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1d8> @ imm = #20
    1e6a:      	ldrsb	r3, [r4, r3]
    1e6c:      	cmp	r3, r0
    1e6e:      	bgt	0x1e88 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1e0> @ imm = #22
    1e70:      	movs	r3, #2
    1e72:      	ldrsb	r3, [r4, r3]
    1e74:      	cmp	r3, r0
    1e76:      	bgt	0x1e92 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1ea> @ imm = #24
    1e78:      	ldrsb	r3, [r4, r1]
    1e7a:      	cmp	r3, r0
    1e7c:      	ble	0x1e56 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1ae> @ imm = #-42
    1e7e:      	b	0x1e9a <core::fmt::Formatter::pad::haa777c0a9492680f+0x1f2> @ imm = #24
    1e80:      	adds	r2, r2, #1
    1e82:      	ldrsb	r3, [r4, r3]
    1e84:      	cmp	r3, r0
    1e86:      	ble	0x1e70 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1c8> @ imm = #-26
    1e88:      	adds	r2, r2, #1
    1e8a:      	movs	r3, #2
    1e8c:      	ldrsb	r3, [r4, r3]
    1e8e:      	cmp	r3, r0
    1e90:      	ble	0x1e78 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1d0> @ imm = #-28
    1e92:      	adds	r2, r2, #1
    1e94:      	ldrsb	r3, [r4, r1]
    1e96:      	cmp	r3, r0
    1e98:      	ble	0x1e56 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1ae> @ imm = #-70
    1e9a:      	adds	r2, r2, #1
    1e9c:      	b	0x1e56 <core::fmt::Formatter::pad::haa777c0a9492680f+0x1ae> @ imm = #-74
    1e9e:      	ldr	r6, [sp, #24]
    1ea0:      	ldr	r3, [sp, #20]
    1ea2:      	cmp	r3, #0
    1ea4:      	beq	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #40
    1ea6:      	movs	r0, #0
    1ea8:      	ldrsb	r1, [r4, r0]
    1eaa:      	movs	r0, #64
    1eac:      	mvns	r0, r0
    1eae:      	cmp	r1, r0
    1eb0:      	ble	0x1eb4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x20c> @ imm = #0
    1eb2:      	adds	r2, r2, #1
    1eb4:      	cmp	r3, #1
    1eb6:      	beq	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #22
    1eb8:      	movs	r1, #1
    1eba:      	ldrsb	r1, [r4, r1]
    1ebc:      	cmp	r1, r0
    1ebe:      	ble	0x1ec2 <core::fmt::Formatter::pad::haa777c0a9492680f+0x21a> @ imm = #0
    1ec0:      	adds	r2, r2, #1
    1ec2:      	cmp	r3, #2
    1ec4:      	beq	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #8
    1ec6:      	movs	r1, #2
    1ec8:      	ldrsb	r1, [r4, r1]
    1eca:      	cmp	r1, r0
    1ecc:      	ble	0x1ed0 <core::fmt::Formatter::pad::haa777c0a9492680f+0x228> @ imm = #0
    1ece:      	adds	r2, r2, #1
    1ed0:      	cmp	r6, r2
    1ed2:      	bls	0x1ef4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x24c> @ imm = #30
    1ed4:      	movs	r0, #32
    1ed6:      	ldr	r4, [sp, #36]
    1ed8:      	ldrb	r0, [r4, r0]
    1eda:      	movs	r1, #0
    1edc:      	cmp	r0, #3
    1ede:      	mov	r3, r1
    1ee0:      	beq	0x1ee4 <core::fmt::Formatter::pad::haa777c0a9492680f+0x23c> @ imm = #0
    1ee2:      	mov	r3, r0
    1ee4:      	subs	r0, r6, r2
    1ee6:      	lsls	r2, r3, #30
    1ee8:      	beq	0x1f2a <core::fmt::Formatter::pad::haa777c0a9492680f+0x282> @ imm = #62
    1eea:      	cmp	r3, #1
    1eec:      	bne	0x1f24 <core::fmt::Formatter::pad::haa777c0a9492680f+0x27c> @ imm = #52
    1eee:      	movs	r1, #0
    1ef0:      	str	r1, [sp, #24]
    1ef2:      	b	0x1f2e <core::fmt::Formatter::pad::haa777c0a9492680f+0x286> @ imm = #56
    1ef4:      	ldr	r0, [sp, #36]
    1ef6:      	ldr	r1, [r0, #24]
    1ef8:      	ldr	r0, [r0, #28]
    1efa:      	ldr	r3, [r0, #12]
    1efc:      	mov	r0, r1
    1efe:      	ldr	r1, [sp, #28]
    1f00:      	ldr	r2, [sp, #32]
    1f02:      	b	0x1f1a <core::fmt::Formatter::pad::haa777c0a9492680f+0x272> @ imm = #20
    1f04:      	mov	r2, r3
    1f06:      	cmp	r0, #0
    1f08:      	ldr	r3, [sp, #36]
    1f0a:      	ldr	r4, [sp, #16]
    1f0c:      	beq	0x1e1a <core::fmt::Formatter::pad::haa777c0a9492680f+0x172> @ imm = #-246
    1f0e:      	mov	r1, r0
    1f10:      	cmp	r4, #1
    1f12:      	beq	0x1e1e <core::fmt::Formatter::pad::haa777c0a9492680f+0x176> @ imm = #-248
    1f14:      	ldr	r0, [r3, #24]
    1f16:      	ldr	r3, [r3, #28]
    1f18:      	ldr	r3, [r3, #12]
    1f1a:      	blx	r3
    1f1c:      	mov	r5, r0
    1f1e:      	mov	r0, r5
    1f20:      	add	sp, #44
    1f22:      	pop	{r4, r5, r6, r7, pc}
    1f24:      	lsrs	r1, r0, #1
    1f26:      	adds	r0, r0, #1
    1f28:      	lsrs	r0, r0, #1
    1f2a:      	str	r0, [sp, #24]
    1f2c:      	mov	r0, r1
    1f2e:      	adds	r5, r0, #1
    1f30:      	ldr	r6, [r4, #4]
    1f32:      	ldr	r0, [r4, #24]
    1f34:      	str	r0, [sp, #40]
    1f36:      	ldr	r4, [r4, #28]
    1f38:      	subs	r5, r5, #1
    1f3a:      	beq	0x1f50 <core::fmt::Formatter::pad::haa777c0a9492680f+0x2a8> @ imm = #18
    1f3c:      	ldr	r2, [r4, #16]
    1f3e:      	ldr	r0, [sp, #40]
    1f40:      	mov	r1, r6
    1f42:      	blx	r2
    1f44:      	cmp	r0, #0
    1f46:      	beq	0x1f38 <core::fmt::Formatter::pad::haa777c0a9492680f+0x290> @ imm = #-18
    1f48:      	movs	r5, #1
    1f4a:      	mov	r0, r5
    1f4c:      	add	sp, #44
    1f4e:      	pop	{r4, r5, r6, r7, pc}
    1f50:      	movs	r0, #17
    1f52:      	lsls	r2, r0, #16
    1f54:      	cmp	r6, r2
    1f56:      	bne	0x1f5c <core::fmt::Formatter::pad::haa777c0a9492680f+0x2b4> @ imm = #2
    1f58:      	movs	r1, #0
    1f5a:      	str	r1, [sp, #24]
    1f5c:      	ldr	r0, [sp, #40]
    1f5e:      	mov	r1, r4
    1f60:      	movs	r5, #1
    1f62:      	cmp	r6, r2
    1f64:      	beq	0x1f1e <core::fmt::Formatter::pad::haa777c0a9492680f+0x276> @ imm = #-74
    1f66:      	ldr	r3, [r1, #12]
    1f68:      	ldr	r1, [sp, #28]
    1f6a:      	ldr	r2, [sp, #32]
    1f6c:      	blx	r3
    1f6e:      	cmp	r0, #0
    1f70:      	bne	0x1f1e <core::fmt::Formatter::pad::haa777c0a9492680f+0x276> @ imm = #-86
    1f72:      	movs	r5, #0
    1f74:      	ldr	r1, [sp, #24]
    1f76:      	cmp	r1, r5
    1f78:      	beq	0x1f8e <core::fmt::Formatter::pad::haa777c0a9492680f+0x2e6> @ imm = #18
    1f7a:      	ldr	r2, [r4, #16]
    1f7c:      	ldr	r0, [sp, #40]
    1f7e:      	mov	r1, r6
    1f80:      	blx	r2
    1f82:      	adds	r5, r5, #1
    1f84:      	cmp	r0, #0
    1f86:      	beq	0x1f74 <core::fmt::Formatter::pad::haa777c0a9492680f+0x2cc> @ imm = #-22
    1f88:      	subs	r0, r5, #1
    1f8a:      	ldr	r1, [sp, #24]
    1f8c:      	b	0x1f90 <core::fmt::Formatter::pad::haa777c0a9492680f+0x2e8> @ imm = #0
    1f8e:      	mov	r0, r1
    1f90:      	cmp	r0, r1
    1f92:      	blo	0x1f48 <core::fmt::Formatter::pad::haa777c0a9492680f+0x2a0> @ imm = #-78
    1f94:      	movs	r5, #0
    1f96:      	mov	r0, r5
    1f98:      	add	sp, #44
    1f9a:      	pop	{r4, r5, r6, r7, pc}

00001f9c <<core::fmt::Formatter as core::fmt::Write>::write_str::h5daf2d485e2f455c>:
    1f9c:      	push	{r4, r6, r7, lr}
    1f9e:      	add	r7, sp, #8
    1fa0:      	ldr	r3, [r0, #24]
    1fa2:      	ldr	r0, [r0, #28]
    1fa4:      	ldr	r4, [r0, #12]
    1fa6:      	mov	r0, r3
    1fa8:      	blx	r4
    1faa:      	pop	{r4, r6, r7, pc}

00001fac <core::fmt::Formatter::debug_tuple::ha4e1a3ea9953bf09>:
    1fac:      	push	{r4, r5, r6, r7, lr}
    1fae:      	add	r7, sp, #12
    1fb0:      	sub	sp, #4
    1fb2:      	mov	r5, r3
    1fb4:      	mov	r6, r1
    1fb6:      	mov	r4, r0
    1fb8:      	ldr	r0, [r1, #24]
    1fba:      	ldr	r1, [r1, #28]
    1fbc:      	ldr	r3, [r1, #12]
    1fbe:      	mov	r1, r2
    1fc0:      	mov	r2, r5
    1fc2:      	blx	r3
    1fc4:      	strb	r0, [r4, #8]
    1fc6:      	str	r6, [r4]
    1fc8:      	rsbs	r0, r5, #0
    1fca:      	adcs	r0, r5
    1fcc:      	strb	r0, [r4, #9]
    1fce:      	movs	r0, #0
    1fd0:      	str	r0, [r4, #4]
    1fd2:      	add	sp, #4
    1fd4:      	pop	{r4, r5, r6, r7, pc}
    1fd6:      	bmi	0x1f82 <core::fmt::Formatter::pad::haa777c0a9492680f+0x2da> @ imm = #-88

00001fd8 <<char as core::fmt::Debug>::fmt::hb4dfd653beebf513>:
    1fd8:      	push	{r4, r5, r6, r7, lr}
    1fda:      	add	r7, sp, #12
    1fdc:      	sub	sp, #28
    1fde:      	mov	r6, r0
    1fe0:      	ldr	r0, [r1, #24]
    1fe2:      	ldr	r1, [r1, #28]
    1fe4:      	ldr	r2, [r1, #16]
    1fe6:      	movs	r1, #39
    1fe8:      	str	r0, [sp, #20]
    1fea:      	str	r2, [sp, #16]
    1fec:      	blx	r2
    1fee:      	movs	r1, #1
    1ff0:      	cmp	r0, #0
    1ff2:      	beq	0x1ff6 <<char as core::fmt::Debug>::fmt::hb4dfd653beebf513+0x1e> @ imm = #0
    1ff4:      	b	0x21a6 <$t.401+0x90>    @ imm = #430
    1ff6:      	ldr	r5, [r6]
    1ff8:      	mov	r0, r5
    1ffa:      	subs	r0, #9
    1ffc:      	movs	r4, #2
    1ffe:      	cmp	r0, #30
    2000:      	str	r1, [sp]
    2002:      	bhi	0x2090 <$t.397+0x4>     @ imm = #138
    2004:      	movs	r1, #116
    2006:      	str	r1, [sp, #24]
    2008:      	lsls	r0, r0, #2
    200a:      	adr	r1, #4 <<char as core::fmt::Debug>::fmt::hb4dfd653beebf513+0x37>
    200c:      	ldr	r0, [r1, r0]
    200e:      	mov	pc, r0

00002010 <$d.396>:
    2010:	c9 20 00 00	.word	0x000020c9
    2014:	8d 20 00 00	.word	0x0000208d
    2018:	95 20 00 00	.word	0x00002095
    201c:	95 20 00 00	.word	0x00002095
    2020:	ad 20 00 00	.word	0x000020ad
    2024:	95 20 00 00	.word	0x00002095
    2028:	95 20 00 00	.word	0x00002095
    202c:	95 20 00 00	.word	0x00002095
    2030:	95 20 00 00	.word	0x00002095
    2034:	95 20 00 00	.word	0x00002095
    2038:	95 20 00 00	.word	0x00002095
    203c:	95 20 00 00	.word	0x00002095
    2040:	95 20 00 00	.word	0x00002095
    2044:	95 20 00 00	.word	0x00002095
    2048:	95 20 00 00	.word	0x00002095
    204c:	95 20 00 00	.word	0x00002095
    2050:	95 20 00 00	.word	0x00002095
    2054:	95 20 00 00	.word	0x00002095
    2058:	95 20 00 00	.word	0x00002095
    205c:	95 20 00 00	.word	0x00002095
    2060:	95 20 00 00	.word	0x00002095
    2064:	95 20 00 00	.word	0x00002095
    2068:	95 20 00 00	.word	0x00002095
    206c:	95 20 00 00	.word	0x00002095
    2070:	95 20 00 00	.word	0x00002095
    2074:	95 20 00 00	.word	0x00002095
    2078:	95 20 00 00	.word	0x00002095
    207c:	95 20 00 00	.word	0x00002095
    2080:	95 20 00 00	.word	0x00002095
    2084:	95 20 00 00	.word	0x00002095
    2088:	ab 20 00 00	.word	0x000020ab

0000208c <$t.397>:
    208c:      	movs	r0, #110
    208e:      	b	0x20ae <$t.397+0x22>    @ imm = #28
    2090:      	cmp	r5, #92
    2092:      	beq	0x20aa <$t.397+0x1e>    @ imm = #20
    2094:      	mov	r0, r5
    2096:      	bl	0x2e60 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5> @ imm = #3526
    209a:      	cmp	r0, #0
    209c:      	bne	0x20b2 <$t.397+0x26>    @ imm = #18
    209e:      	mov	r0, r5
    20a0:      	bl	0x2684 <core::unicode::printable::is_printable::h6cdd76e17613ee9f> @ imm = #1504
    20a4:      	cmp	r0, #0
    20a6:      	beq	0x20b2 <$t.397+0x26>    @ imm = #8
    20a8:      	movs	r4, #1
    20aa:      	b	0x20c6 <$t.397+0x3a>    @ imm = #24
    20ac:      	movs	r0, #114
    20ae:      	str	r0, [sp, #24]
    20b0:      	b	0x20c8 <$t.397+0x3c>    @ imm = #20
    20b2:      	movs	r0, #1
    20b4:      	orrs	r0, r5
    20b6:      	bl	0x3258 <__clzsi2>       @ imm = #4510
    20ba:      	lsrs	r0, r0, #2
    20bc:      	movs	r1, #7
    20be:      	eors	r1, r0
    20c0:      	str	r1, [sp, #12]
    20c2:      	movs	r6, #5
    20c4:      	movs	r4, #3
    20c6:      	str	r5, [sp, #24]
    20c8:      	movs	r0, #255
    20ca:      	mvns	r0, r0
    20cc:      	str	r0, [sp, #8]
    20ce:      	movs	r5, #0
    20d0:      	mvns	r0, r5
    20d2:      	str	r0, [sp, #4]
    20d4:      	b	0x20e0 <$t.397+0x54>    @ imm = #8
    20d6:      	ldr	r0, [sp, #20]
    20d8:      	ldr	r2, [sp, #16]
    20da:      	blx	r2
    20dc:      	cmp	r0, #0
    20de:      	bne	0x21a4 <$t.401+0x8e>    @ imm = #194
    20e0:      	lsls	r0, r4, #2
    20e2:      	adr	r1, #8 <$t.397+0x5c>
    20e4:      	ldr	r0, [r1, r0]
    20e6:      	mov	r4, r5
    20e8:      	ldr	r1, [sp, #24]
    20ea:      	mov	pc, r0

000020ec <$d.398>:
    20ec:	ad 21 00 00	.word	0x000021ad
    20f0:	03 21 00 00	.word	0x00002103
    20f4:	fd 20 00 00	.word	0x000020fd
    20f8:	05 21 00 00	.word	0x00002105

000020fc <$t.399>:
    20fc:      	movs	r1, #92
    20fe:      	movs	r4, #1
    2100:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-46
    2102:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-48
    2104:      	uxtb	r0, r6
    2106:      	mov	r8, r8
    2108:      	add	r0, pc
    210a:      	ldrb	r0, [r0, #4]
    210c:      	lsls	r0, r0, #1
    210e:      	add	pc, r0

00002110 <$d.400>:
    2110:	4d 02 0b 1c	.word	0x1c0b024d
    2114:	27 31		.short	0x3127

00002116 <$t.401>:
    2116:      	ldr	r0, [sp, #12]
    2118:      	ldr	r1, [sp, #4]
    211a:      	ands	r0, r1
    211c:      	str	r0, [sp, #12]
    211e:      	ldr	r0, [sp, #8]
    2120:      	ands	r6, r0
    2122:      	movs	r1, #125
    2124:      	movs	r4, #3
    2126:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-84
    2128:      	ldr	r2, [sp, #12]
    212a:      	lsls	r0, r2, #29
    212c:      	lsrs	r0, r0, #27
    212e:      	ldr	r1, [sp, #24]
    2130:      	lsrs	r1, r0
    2132:      	movs	r0, #15
    2134:      	ands	r0, r1
    2136:      	cmp	r0, #10
    2138:      	blo	0x218a <$t.401+0x74>    @ imm = #78
    213a:      	movs	r1, #87
    213c:      	adds	r1, r1, r0
    213e:      	cmp	r2, #0
    2140:      	beq	0x2192 <$t.401+0x7c>    @ imm = #78
    2142:      	subs	r2, r2, #1
    2144:      	str	r2, [sp, #12]
    2146:      	movs	r4, #3
    2148:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-118
    214a:      	ldr	r0, [sp, #12]
    214c:      	ldr	r1, [sp, #4]
    214e:      	ands	r0, r1
    2150:      	str	r0, [sp, #12]
    2152:      	ldr	r0, [sp, #8]
    2154:      	ands	r6, r0
    2156:      	movs	r0, #2
    2158:      	orrs	r6, r0
    215a:      	movs	r1, #123
    215c:      	movs	r4, #3
    215e:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-140
    2160:      	ldr	r0, [sp, #12]
    2162:      	ldr	r1, [sp, #4]
    2164:      	ands	r0, r1
    2166:      	str	r0, [sp, #12]
    2168:      	ldr	r0, [sp, #8]
    216a:      	ands	r6, r0
    216c:      	movs	r4, #3
    216e:      	orrs	r6, r4
    2170:      	movs	r1, #117
    2172:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-160
    2174:      	ldr	r0, [sp, #12]
    2176:      	ldr	r1, [sp, #4]
    2178:      	ands	r0, r1
    217a:      	str	r0, [sp, #12]
    217c:      	ldr	r0, [sp, #8]
    217e:      	ands	r6, r0
    2180:      	movs	r0, #4
    2182:      	orrs	r6, r0
    2184:      	movs	r1, #92
    2186:      	movs	r4, #3
    2188:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-182
    218a:      	movs	r1, #48
    218c:      	adds	r1, r1, r0
    218e:      	cmp	r2, #0
    2190:      	bne	0x2142 <$t.401+0x2c>    @ imm = #-82
    2192:      	ldr	r0, [sp, #4]
    2194:      	ands	r2, r0
    2196:      	str	r2, [sp, #12]
    2198:      	ldr	r0, [sp, #8]
    219a:      	ands	r6, r0
    219c:      	movs	r0, #1
    219e:      	orrs	r6, r0
    21a0:      	movs	r4, #3
    21a2:      	b	0x20d6 <$t.397+0x4a>    @ imm = #-208
    21a4:      	ldr	r1, [sp]
    21a6:      	mov	r0, r1
    21a8:      	add	sp, #28
    21aa:      	pop	{r4, r5, r6, r7, pc}
    21ac:      	movs	r1, #39
    21ae:      	ldr	r0, [sp, #20]
    21b0:      	ldr	r2, [sp, #16]
    21b2:      	blx	r2
    21b4:      	mov	r1, r0
    21b6:      	mov	r0, r1
    21b8:      	add	sp, #28
    21ba:      	pop	{r4, r5, r6, r7, pc}

000021bc <core::slice::index::slice_start_index_len_fail::h3080a8211123744d>:
    21bc:      	push	{r7, lr}
    21be:      	add	r7, sp, #0
    21c0:      	sub	sp, #48
    21c2:      	str	r1, [sp, #4]
    21c4:      	str	r0, [sp]
    21c6:      	movs	r0, #2
    21c8:      	str	r0, [sp, #28]
    21ca:      	add	r1, sp, #32
    21cc:      	str	r1, [sp, #24]
    21ce:      	movs	r1, #0
    21d0:      	str	r1, [sp, #20]
    21d2:      	str	r1, [sp, #16]
    21d4:      	str	r0, [sp, #12]
    21d6:      	ldr	r0, [pc, #28] <$d.427+0x2>
    21d8:      	str	r0, [sp, #8]
    21da:      	ldr	r0, [pc, #28] <$d.427+0x6>
    21dc:      	str	r0, [sp, #44]
    21de:      	add	r1, sp, #4
    21e0:      	str	r1, [sp, #40]
    21e2:      	str	r0, [sp, #36]
    21e4:      	mov	r0, sp
    21e6:      	str	r0, [sp, #32]
    21e8:      	add	r0, sp, #8
    21ea:      	mov	r1, r2
    21ec:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #-4140
    21f0:      	trap
    21f2:      	mov	r8, r8

000021f4 <$d.427>:
    21f4:	e4 39 00 00	.word	0x000039e4
    21f8:	11 2d 00 00	.word	0x00002d11

000021fc <core::slice::index::slice_end_index_len_fail::h4968a5fa708ed4f2>:
    21fc:      	push	{r7, lr}
    21fe:      	add	r7, sp, #0
    2200:      	sub	sp, #48
    2202:      	str	r1, [sp, #4]
    2204:      	str	r0, [sp]
    2206:      	movs	r0, #2
    2208:      	str	r0, [sp, #28]
    220a:      	add	r1, sp, #32
    220c:      	str	r1, [sp, #24]
    220e:      	movs	r1, #0
    2210:      	str	r1, [sp, #20]
    2212:      	str	r1, [sp, #16]
    2214:      	str	r0, [sp, #12]
    2216:      	ldr	r0, [pc, #28] <$d.429+0x2>
    2218:      	str	r0, [sp, #8]
    221a:      	ldr	r0, [pc, #28] <$d.429+0x6>
    221c:      	str	r0, [sp, #44]
    221e:      	add	r1, sp, #4
    2220:      	str	r1, [sp, #40]
    2222:      	str	r0, [sp, #36]
    2224:      	mov	r0, sp
    2226:      	str	r0, [sp, #32]
    2228:      	add	r0, sp, #8
    222a:      	mov	r1, r2
    222c:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #-4204
    2230:      	trap
    2232:      	mov	r8, r8

00002234 <$d.429>:
    2234:	f4 39 00 00	.word	0x000039f4
    2238:	11 2d 00 00	.word	0x00002d11

0000223c <core::slice::index::slice_index_order_fail::h35619d5607b7eea8>:
    223c:      	push	{r7, lr}
    223e:      	add	r7, sp, #0
    2240:      	sub	sp, #48
    2242:      	str	r1, [sp, #4]
    2244:      	str	r0, [sp]
    2246:      	movs	r0, #2
    2248:      	str	r0, [sp, #28]
    224a:      	add	r1, sp, #32
    224c:      	str	r1, [sp, #24]
    224e:      	movs	r1, #0
    2250:      	str	r1, [sp, #20]
    2252:      	str	r1, [sp, #16]
    2254:      	str	r0, [sp, #12]
    2256:      	ldr	r0, [pc, #28] <$d.431+0x2>
    2258:      	str	r0, [sp, #8]
    225a:      	ldr	r0, [pc, #28] <$d.431+0x6>
    225c:      	str	r0, [sp, #44]
    225e:      	add	r1, sp, #4
    2260:      	str	r1, [sp, #40]
    2262:      	str	r0, [sp, #36]
    2264:      	mov	r0, sp
    2266:      	str	r0, [sp, #32]
    2268:      	add	r0, sp, #8
    226a:      	mov	r1, r2
    226c:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #-4268
    2270:      	trap
    2272:      	mov	r8, r8

00002274 <$d.431>:
    2274:	28 3a 00 00	.word	0x00003a28
    2278:	11 2d 00 00	.word	0x00002d11

0000227c <core::str::slice_error_fail::h26c332087be94791>:
    227c:      	push	{r7, lr}
    227e:      	add	r7, sp, #0
    2280:      	sub	sp, #128
    2282:      	str	r3, [sp, #28]
    2284:      	str	r2, [sp, #24]
    2286:      	movs	r5, #1
    2288:      	lsls	r6, r5, #8
    228a:      	adds	r4, r6, #1
    228c:      	cmp	r1, r4
    228e:      	bhs	0x22a6 <core::str::slice_error_fail::h26c332087be94791+0x2a> @ imm = #20
    2290:      	str	r1, [sp, #36]
    2292:      	str	r0, [sp, #32]
    2294:      	ldr	r4, [pc, #968] <$d.487+0x8>
    2296:      	str	r4, [sp, #40]
    2298:      	movs	r6, #0
    229a:      	ldr	r4, [r7, #8]
    229c:      	str	r6, [sp, #44]
    229e:      	cmp	r2, r1
    22a0:      	bhi	0x22a4 <core::str::slice_error_fail::h26c332087be94791+0x28> @ imm = #0
    22a2:      	b	0x2474 <core::str::slice_error_fail::h26c332087be94791+0x1f8> @ imm = #462
    22a4:      	b	0x24ac <core::str::slice_error_fail::h26c332087be94791+0x230> @ imm = #516
    22a6:      	str	r2, [sp, #12]
    22a8:      	str	r5, [sp, #16]
    22aa:      	movs	r4, #0
    22ac:      	str	r0, [sp, #20]
    22ae:      	adds	r5, r0, r4
    22b0:      	mov	r0, r6
    22b2:      	ldrsb	r2, [r5, r6]
    22b4:      	movs	r6, #64
    22b6:      	mvns	r6, r6
    22b8:      	cmp	r2, r6
    22ba:      	ble	0x22be <core::str::slice_error_fail::h26c332087be94791+0x42> @ imm = #0
    22bc:      	b	0x23c8 <core::str::slice_error_fail::h26c332087be94791+0x14c> @ imm = #264
    22be:      	movs	r2, #255
    22c0:      	ldrsb	r2, [r5, r2]
    22c2:      	cmp	r2, r6
    22c4:      	ble	0x22c8 <core::str::slice_error_fail::h26c332087be94791+0x4c> @ imm = #0
    22c6:      	b	0x23cc <core::str::slice_error_fail::h26c332087be94791+0x150> @ imm = #258
    22c8:      	movs	r2, #254
    22ca:      	ldrsb	r2, [r5, r2]
    22cc:      	cmp	r2, r6
    22ce:      	bgt	0x23d0 <core::str::slice_error_fail::h26c332087be94791+0x154> @ imm = #254
    22d0:      	movs	r2, #253
    22d2:      	ldrsb	r2, [r5, r2]
    22d4:      	cmp	r2, r6
    22d6:      	bgt	0x23d4 <core::str::slice_error_fail::h26c332087be94791+0x158> @ imm = #250
    22d8:      	movs	r2, #252
    22da:      	ldrsb	r2, [r5, r2]
    22dc:      	cmp	r2, r6
    22de:      	bgt	0x23d8 <core::str::slice_error_fail::h26c332087be94791+0x15c> @ imm = #246
    22e0:      	movs	r2, #251
    22e2:      	ldrsb	r2, [r5, r2]
    22e4:      	cmp	r2, r6
    22e6:      	bgt	0x23dc <core::str::slice_error_fail::h26c332087be94791+0x160> @ imm = #242
    22e8:      	movs	r2, #250
    22ea:      	ldrsb	r2, [r5, r2]
    22ec:      	cmp	r2, r6
    22ee:      	bgt	0x23e0 <core::str::slice_error_fail::h26c332087be94791+0x164> @ imm = #238
    22f0:      	movs	r2, #249
    22f2:      	ldrsb	r2, [r5, r2]
    22f4:      	cmp	r2, r6
    22f6:      	bgt	0x23e4 <core::str::slice_error_fail::h26c332087be94791+0x168> @ imm = #234
    22f8:      	movs	r2, #248
    22fa:      	ldrsb	r2, [r5, r2]
    22fc:      	cmp	r2, r6
    22fe:      	bgt	0x23e8 <core::str::slice_error_fail::h26c332087be94791+0x16c> @ imm = #230
    2300:      	movs	r2, #247
    2302:      	ldrsb	r2, [r5, r2]
    2304:      	cmp	r2, r6
    2306:      	bgt	0x23ec <core::str::slice_error_fail::h26c332087be94791+0x170> @ imm = #226
    2308:      	movs	r2, #246
    230a:      	ldrsb	r2, [r5, r2]
    230c:      	cmp	r2, r6
    230e:      	bgt	0x23f0 <core::str::slice_error_fail::h26c332087be94791+0x174> @ imm = #222
    2310:      	movs	r2, #245
    2312:      	ldrsb	r2, [r5, r2]
    2314:      	cmp	r2, r6
    2316:      	bgt	0x23f4 <core::str::slice_error_fail::h26c332087be94791+0x178> @ imm = #218
    2318:      	movs	r2, #244
    231a:      	ldrsb	r2, [r5, r2]
    231c:      	cmp	r2, r6
    231e:      	bgt	0x23f8 <core::str::slice_error_fail::h26c332087be94791+0x17c> @ imm = #214
    2320:      	movs	r2, #243
    2322:      	ldrsb	r2, [r5, r2]
    2324:      	cmp	r2, r6
    2326:      	bgt	0x23fc <core::str::slice_error_fail::h26c332087be94791+0x180> @ imm = #210
    2328:      	movs	r2, #242
    232a:      	ldrsb	r2, [r5, r2]
    232c:      	cmp	r2, r6
    232e:      	bgt	0x2400 <core::str::slice_error_fail::h26c332087be94791+0x184> @ imm = #206
    2330:      	movs	r2, #241
    2332:      	ldrsb	r2, [r5, r2]
    2334:      	cmp	r2, r6
    2336:      	bgt	0x2404 <core::str::slice_error_fail::h26c332087be94791+0x188> @ imm = #202
    2338:      	movs	r2, #240
    233a:      	ldrsb	r2, [r5, r2]
    233c:      	cmp	r2, r6
    233e:      	bgt	0x2408 <core::str::slice_error_fail::h26c332087be94791+0x18c> @ imm = #198
    2340:      	movs	r2, #239
    2342:      	ldrsb	r2, [r5, r2]
    2344:      	cmp	r2, r6
    2346:      	bgt	0x240c <core::str::slice_error_fail::h26c332087be94791+0x190> @ imm = #194
    2348:      	movs	r2, #238
    234a:      	ldrsb	r2, [r5, r2]
    234c:      	cmp	r2, r6
    234e:      	bgt	0x2410 <core::str::slice_error_fail::h26c332087be94791+0x194> @ imm = #190
    2350:      	movs	r2, #237
    2352:      	ldrsb	r2, [r5, r2]
    2354:      	cmp	r2, r6
    2356:      	bgt	0x2414 <core::str::slice_error_fail::h26c332087be94791+0x198> @ imm = #186
    2358:      	movs	r2, #236
    235a:      	ldrsb	r2, [r5, r2]
    235c:      	cmp	r2, r6
    235e:      	bgt	0x2418 <core::str::slice_error_fail::h26c332087be94791+0x19c> @ imm = #182
    2360:      	movs	r2, #235
    2362:      	ldrsb	r2, [r5, r2]
    2364:      	cmp	r2, r6
    2366:      	bgt	0x241c <core::str::slice_error_fail::h26c332087be94791+0x1a0> @ imm = #178
    2368:      	movs	r2, #234
    236a:      	ldrsb	r2, [r5, r2]
    236c:      	cmp	r2, r6
    236e:      	bgt	0x2420 <core::str::slice_error_fail::h26c332087be94791+0x1a4> @ imm = #174
    2370:      	movs	r2, #233
    2372:      	ldrsb	r2, [r5, r2]
    2374:      	cmp	r2, r6
    2376:      	bgt	0x2424 <core::str::slice_error_fail::h26c332087be94791+0x1a8> @ imm = #170
    2378:      	movs	r2, #232
    237a:      	ldrsb	r2, [r5, r2]
    237c:      	cmp	r2, r6
    237e:      	bgt	0x2428 <core::str::slice_error_fail::h26c332087be94791+0x1ac> @ imm = #166
    2380:      	movs	r2, #231
    2382:      	ldrsb	r2, [r5, r2]
    2384:      	cmp	r2, r6
    2386:      	bgt	0x242c <core::str::slice_error_fail::h26c332087be94791+0x1b0> @ imm = #162
    2388:      	movs	r2, #230
    238a:      	ldrsb	r2, [r5, r2]
    238c:      	cmp	r2, r6
    238e:      	bgt	0x2430 <core::str::slice_error_fail::h26c332087be94791+0x1b4> @ imm = #158
    2390:      	movs	r2, #229
    2392:      	ldrsb	r2, [r5, r2]
    2394:      	cmp	r2, r6
    2396:      	bgt	0x2434 <core::str::slice_error_fail::h26c332087be94791+0x1b8> @ imm = #154
    2398:      	movs	r2, #228
    239a:      	ldrsb	r2, [r5, r2]
    239c:      	cmp	r2, r6
    239e:      	bgt	0x2438 <core::str::slice_error_fail::h26c332087be94791+0x1bc> @ imm = #150
    23a0:      	movs	r2, #227
    23a2:      	ldrsb	r2, [r5, r2]
    23a4:      	cmp	r2, r6
    23a6:      	bgt	0x243c <core::str::slice_error_fail::h26c332087be94791+0x1c0> @ imm = #146
    23a8:      	movs	r2, #226
    23aa:      	ldrsb	r2, [r5, r2]
    23ac:      	cmp	r2, r6
    23ae:      	bgt	0x2440 <core::str::slice_error_fail::h26c332087be94791+0x1c4> @ imm = #142
    23b0:      	movs	r2, #225
    23b2:      	ldrsb	r2, [r5, r2]
    23b4:      	cmp	r2, r6
    23b6:      	bgt	0x2444 <core::str::slice_error_fail::h26c332087be94791+0x1c8> @ imm = #138
    23b8:      	subs	r4, #32
    23ba:      	mov	r6, r0
    23bc:      	adds	r2, r4, r0
    23be:      	ldr	r0, [sp, #20]
    23c0:      	beq	0x23c4 <core::str::slice_error_fail::h26c332087be94791+0x148> @ imm = #0
    23c2:      	b	0x22ae <core::str::slice_error_fail::h26c332087be94791+0x32> @ imm = #-280
    23c4:      	movs	r2, #0
    23c6:      	b	0x245e <core::str::slice_error_fail::h26c332087be94791+0x1e2> @ imm = #148
    23c8:      	adds	r4, r4, r0
    23ca:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #120
    23cc:      	adds	r4, #255
    23ce:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #116
    23d0:      	adds	r4, #254
    23d2:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #112
    23d4:      	adds	r4, #253
    23d6:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #108
    23d8:      	adds	r4, #252
    23da:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #104
    23dc:      	adds	r4, #251
    23de:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #100
    23e0:      	adds	r4, #250
    23e2:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #96
    23e4:      	adds	r4, #249
    23e6:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #92
    23e8:      	adds	r4, #248
    23ea:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #88
    23ec:      	adds	r4, #247
    23ee:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #84
    23f0:      	adds	r4, #246
    23f2:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #80
    23f4:      	adds	r4, #245
    23f6:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #76
    23f8:      	adds	r4, #244
    23fa:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #72
    23fc:      	adds	r4, #243
    23fe:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #68
    2400:      	adds	r4, #242
    2402:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #64
    2404:      	adds	r4, #241
    2406:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #60
    2408:      	adds	r4, #240
    240a:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #56
    240c:      	adds	r4, #239
    240e:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #52
    2410:      	adds	r4, #238
    2412:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #48
    2414:      	adds	r4, #237
    2416:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #44
    2418:      	adds	r4, #236
    241a:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #40
    241c:      	adds	r4, #235
    241e:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #36
    2420:      	adds	r4, #234
    2422:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #32
    2424:      	adds	r4, #233
    2426:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #28
    2428:      	adds	r4, #232
    242a:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #24
    242c:      	adds	r4, #231
    242e:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #20
    2430:      	adds	r4, #230
    2432:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #16
    2434:      	adds	r4, #229
    2436:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #12
    2438:      	adds	r4, #228
    243a:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #8
    243c:      	adds	r4, #227
    243e:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #4
    2440:      	adds	r4, #226
    2442:      	b	0x2446 <core::str::slice_error_fail::h26c332087be94791+0x1ca> @ imm = #0
    2444:      	adds	r4, #225
    2446:      	cmp	r4, r1
    2448:      	bhs	0x2458 <core::str::slice_error_fail::h26c332087be94791+0x1dc> @ imm = #12
    244a:      	ldr	r2, [sp, #20]
    244c:      	ldrsb	r0, [r2, r4]
    244e:      	cmp	r0, r6
    2450:      	mov	r0, r2
    2452:      	ble	0x24e8 <core::str::slice_error_fail::h26c332087be94791+0x26c> @ imm = #146
    2454:      	mov	r2, r4
    2456:      	b	0x245e <core::str::slice_error_fail::h26c332087be94791+0x1e2> @ imm = #4
    2458:      	mov	r2, r1
    245a:      	ldr	r0, [sp, #20]
    245c:      	bne	0x24e8 <core::str::slice_error_fail::h26c332087be94791+0x26c> @ imm = #136
    245e:      	str	r2, [sp, #36]
    2460:      	str	r0, [sp, #32]
    2462:      	ldr	r2, [pc, #504] <$d.487+0x6>
    2464:      	str	r2, [sp, #40]
    2466:      	movs	r6, #5
    2468:      	ldr	r5, [sp, #16]
    246a:      	ldr	r2, [sp, #12]
    246c:      	ldr	r4, [r7, #8]
    246e:      	str	r6, [sp, #44]
    2470:      	cmp	r2, r1
    2472:      	bhi	0x24ac <core::str::slice_error_fail::h26c332087be94791+0x230> @ imm = #54
    2474:      	cmp	r3, r1
    2476:      	bhi	0x24ac <core::str::slice_error_fail::h26c332087be94791+0x230> @ imm = #50
    2478:      	cmp	r2, r3
    247a:      	bls	0x24f6 <core::str::slice_error_fail::h26c332087be94791+0x27a> @ imm = #120
    247c:      	movs	r0, #4
    247e:      	str	r0, [sp, #84]
    2480:      	add	r1, sp, #88
    2482:      	str	r1, [sp, #80]
    2484:      	movs	r1, #0
    2486:      	str	r1, [sp, #76]
    2488:      	str	r1, [sp, #72]
    248a:      	str	r0, [sp, #68]
    248c:      	ldr	r0, [pc, #492] <$d.487+0x24>
    248e:      	str	r0, [sp, #64]
    2490:      	ldr	r0, [pc, #468] <$d.487+0x10>
    2492:      	str	r0, [sp, #116]
    2494:      	add	r1, sp, #40
    2496:      	str	r1, [sp, #112]
    2498:      	str	r0, [sp, #108]
    249a:      	add	r0, sp, #32
    249c:      	str	r0, [sp, #104]
    249e:      	ldr	r0, [pc, #468] <$d.487+0x1e>
    24a0:      	str	r0, [sp, #100]
    24a2:      	add	r1, sp, #28
    24a4:      	str	r1, [sp, #96]
    24a6:      	str	r0, [sp, #92]
    24a8:      	add	r0, sp, #24
    24aa:      	b	0x24dc <core::str::slice_error_fail::h26c332087be94791+0x260> @ imm = #46
    24ac:      	cmp	r2, r1
    24ae:      	bhi	0x24b2 <core::str::slice_error_fail::h26c332087be94791+0x236> @ imm = #0
    24b0:      	mov	r2, r3
    24b2:      	str	r2, [sp, #56]
    24b4:      	movs	r0, #3
    24b6:      	str	r0, [sp, #84]
    24b8:      	add	r1, sp, #88
    24ba:      	str	r1, [sp, #80]
    24bc:      	movs	r1, #0
    24be:      	str	r1, [sp, #76]
    24c0:      	str	r1, [sp, #72]
    24c2:      	str	r0, [sp, #68]
    24c4:      	ldr	r0, [pc, #440] <$d.487+0x28>
    24c6:      	str	r0, [sp, #64]
    24c8:      	ldr	r0, [pc, #412] <$d.487+0x10>
    24ca:      	str	r0, [sp, #108]
    24cc:      	add	r1, sp, #40
    24ce:      	str	r1, [sp, #104]
    24d0:      	str	r0, [sp, #100]
    24d2:      	add	r0, sp, #32
    24d4:      	str	r0, [sp, #96]
    24d6:      	ldr	r0, [pc, #412] <$d.487+0x1e>
    24d8:      	str	r0, [sp, #92]
    24da:      	add	r0, sp, #56
    24dc:      	str	r0, [sp, #88]
    24de:      	add	r0, sp, #64
    24e0:      	mov	r1, r4
    24e2:      	bl	0x11c4 <core::panicking::panic_fmt::h884220a03f3bce26> @ imm = #-4898
    24e6:      	trap
    24e8:      	ldr	r2, [pc, #364] <$d.487>
    24ea:      	str	r2, [sp]
    24ec:      	movs	r2, #0
    24ee:      	mov	r3, r4
    24f0:      	bl	0x227c <core::str::slice_error_fail::h26c332087be94791> @ imm = #-632
    24f4:      	trap
    24f6:      	cmp	r2, #0
    24f8:      	bne	0x2512 <core::str::slice_error_fail::h26c332087be94791+0x296> @ imm = #22
    24fa:      	str	r3, [sp, #48]
    24fc:      	cmp	r3, #0
    24fe:      	bne	0x2554 <core::str::slice_error_fail::h26c332087be94791+0x2d8> @ imm = #82
    2500:      	movs	r3, #0
    2502:      	cmp	r3, r1
    2504:      	bne	0x252a <core::str::slice_error_fail::h26c332087be94791+0x2ae> @ imm = #34
    2506:      	ldr	r0, [pc, #368] <$d.487+0x22>
    2508:      	movs	r1, #43
    250a:      	mov	r2, r4
    250c:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #-5048
    2510:      	trap
    2512:      	cmp	r2, r1
    2514:      	bhs	0x2542 <core::str::slice_error_fail::h26c332087be94791+0x2c6> @ imm = #42
    2516:      	str	r4, [sp, #16]
    2518:      	mov	r4, r2
    251a:      	ldrsb	r6, [r0, r2]
    251c:      	movs	r2, #64
    251e:      	mvns	r2, r2
    2520:      	cmp	r6, r2
    2522:      	mov	r2, r4
    2524:      	ldr	r4, [sp, #16]
    2526:      	bgt	0x24fa <core::str::slice_error_fail::h26c332087be94791+0x27e> @ imm = #-48
    2528:      	b	0x2546 <core::str::slice_error_fail::h26c332087be94791+0x2ca> @ imm = #26
    252a:      	str	r5, [sp, #16]
    252c:      	mov	r2, r0
    252e:      	adds	r6, r0, r3
    2530:      	movs	r0, #0
    2532:      	str	r0, [sp, #12]
    2534:      	ldrsb	r0, [r6, r0]
    2536:      	uxtb	r5, r0
    2538:      	cmp	r0, #0
    253a:      	bmi	0x2572 <core::str::slice_error_fail::h26c332087be94791+0x2f6> @ imm = #52
    253c:      	str	r5, [sp, #52]
    253e:      	ldr	r5, [sp, #16]
    2540:      	b	0x2616 <core::str::slice_error_fail::h26c332087be94791+0x39a> @ imm = #210
    2542:      	cmp	r1, r2
    2544:      	beq	0x24fa <core::str::slice_error_fail::h26c332087be94791+0x27e> @ imm = #-78
    2546:      	str	r2, [sp, #48]
    2548:      	mov	r3, r2
    254a:      	b	0x2554 <core::str::slice_error_fail::h26c332087be94791+0x2d8> @ imm = #6
    254c:      	cmp	r1, r3
    254e:      	beq	0x2506 <core::str::slice_error_fail::h26c332087be94791+0x28a> @ imm = #-76
    2550:      	subs	r3, r3, #1
    2552:      	beq	0x2500 <core::str::slice_error_fail::h26c332087be94791+0x284> @ imm = #-86
    2554:      	cmp	r3, r1
    2556:      	bhs	0x254c <core::str::slice_error_fail::h26c332087be94791+0x2d0> @ imm = #-14
    2558:      	ldrsb	r6, [r0, r3]
    255a:      	movs	r2, #63
    255c:      	mvns	r2, r2
    255e:      	cmp	r6, r2
    2560:      	blt	0x2550 <core::str::slice_error_fail::h26c332087be94791+0x2d4> @ imm = #-20
    2562:      	cmp	r3, r1
    2564:      	bhs	0x25a6 <core::str::slice_error_fail::h26c332087be94791+0x32a> @ imm = #62
    2566:      	ldrsb	r6, [r0, r3]
    2568:      	movs	r2, #64
    256a:      	mvns	r2, r2
    256c:      	cmp	r6, r2
    256e:      	bgt	0x2502 <core::str::slice_error_fail::h26c332087be94791+0x286> @ imm = #-112
    2570:      	b	0x25aa <core::str::slice_error_fail::h26c332087be94791+0x32e> @ imm = #54
    2572:      	str	r5, [sp, #8]
    2574:      	adds	r1, r2, r1
    2576:      	adds	r0, r6, #1
    2578:      	movs	r2, #31
    257a:      	cmp	r0, r1
    257c:      	mov	r0, r1
    257e:      	beq	0x258a <core::str::slice_error_fail::h26c332087be94791+0x30e> @ imm = #8
    2580:      	ldrb	r0, [r6, #1]
    2582:      	movs	r5, #63
    2584:      	ands	r5, r0
    2586:      	str	r5, [sp, #12]
    2588:      	adds	r0, r6, #2
    258a:      	ldr	r5, [sp, #8]
    258c:      	ands	r2, r5
    258e:      	cmp	r5, #223
    2590:      	bls	0x259c <core::str::slice_error_fail::h26c332087be94791+0x320> @ imm = #8
    2592:      	cmp	r0, r1
    2594:      	bne	0x25b6 <core::str::slice_error_fail::h26c332087be94791+0x33a> @ imm = #30
    2596:      	movs	r6, #0
    2598:      	str	r1, [sp, #20]
    259a:      	b	0x25c0 <core::str::slice_error_fail::h26c332087be94791+0x344> @ imm = #34
    259c:      	lsls	r0, r2, #6
    259e:      	ldr	r1, [sp, #12]
    25a0:      	adds	r0, r1, r0
    25a2:      	ldr	r5, [sp, #16]
    25a4:      	b	0x25fe <core::str::slice_error_fail::h26c332087be94791+0x382> @ imm = #86
    25a6:      	cmp	r1, r3
    25a8:      	beq	0x2506 <core::str::slice_error_fail::h26c332087be94791+0x28a> @ imm = #-166
    25aa:      	str	r4, [sp]
    25ac:      	mov	r2, r3
    25ae:      	mov	r3, r1
    25b0:      	bl	0x227c <core::str::slice_error_fail::h26c332087be94791> @ imm = #-824
    25b4:      	trap
    25b6:      	ldrb	r5, [r0]
    25b8:      	movs	r6, #63
    25ba:      	ands	r6, r5
    25bc:      	adds	r0, r0, #1
    25be:      	str	r0, [sp, #20]
    25c0:      	ldr	r0, [sp, #12]
    25c2:      	lsls	r0, r0, #6
    25c4:      	adds	r0, r6, r0
    25c6:      	ldr	r5, [sp, #8]
    25c8:      	cmp	r5, #240
    25ca:      	blo	0x25d6 <core::str::slice_error_fail::h26c332087be94791+0x35a> @ imm = #8
    25cc:      	ldr	r5, [sp, #20]
    25ce:      	cmp	r5, r1
    25d0:      	bne	0x25de <core::str::slice_error_fail::h26c332087be94791+0x362> @ imm = #10
    25d2:      	movs	r1, #0
    25d4:      	b	0x25ea <core::str::slice_error_fail::h26c332087be94791+0x36e> @ imm = #18
    25d6:      	lsls	r1, r2, #12
    25d8:      	adds	r0, r0, r1
    25da:      	ldr	r5, [sp, #16]
    25dc:      	b	0x25fe <core::str::slice_error_fail::h26c332087be94791+0x382> @ imm = #30
    25de:      	mov	r1, r5
    25e0:      	mov	r5, r2
    25e2:      	ldrb	r2, [r1]
    25e4:      	movs	r1, #63
    25e6:      	ands	r1, r2
    25e8:      	mov	r2, r5
    25ea:      	ldr	r5, [sp, #16]
    25ec:      	lsls	r0, r0, #6
    25ee:      	lsls	r2, r2, #29
    25f0:      	lsrs	r2, r2, #11
    25f2:      	adds	r0, r0, r2
    25f4:      	adds	r0, r0, r1
    25f6:      	movs	r1, #17
    25f8:      	lsls	r1, r1, #16
    25fa:      	cmp	r0, r1
    25fc:      	beq	0x2506 <core::str::slice_error_fail::h26c332087be94791+0x28a> @ imm = #-250
    25fe:      	str	r0, [sp, #52]
    2600:      	cmp	r0, #128
    2602:      	blo	0x2616 <core::str::slice_error_fail::h26c332087be94791+0x39a> @ imm = #16
    2604:      	lsrs	r1, r0, #11
    2606:      	bne	0x260c <core::str::slice_error_fail::h26c332087be94791+0x390> @ imm = #2
    2608:      	movs	r5, #2
    260a:      	b	0x2616 <core::str::slice_error_fail::h26c332087be94791+0x39a> @ imm = #8
    260c:      	lsrs	r0, r0, #16
    260e:      	beq	0x2614 <core::str::slice_error_fail::h26c332087be94791+0x398> @ imm = #2
    2610:      	movs	r5, #4
    2612:      	b	0x2616 <core::str::slice_error_fail::h26c332087be94791+0x39a> @ imm = #0
    2614:      	movs	r5, #3
    2616:      	str	r3, [sp, #56]
    2618:      	adds	r0, r5, r3
    261a:      	str	r0, [sp, #60]
    261c:      	movs	r0, #5
    261e:      	str	r0, [sp, #84]
    2620:      	add	r1, sp, #88
    2622:      	str	r1, [sp, #80]
    2624:      	movs	r1, #0
    2626:      	str	r1, [sp, #76]
    2628:      	str	r1, [sp, #72]
    262a:      	str	r0, [sp, #68]
    262c:      	ldr	r0, [pc, #52] <$d.487+0xc>
    262e:      	str	r0, [sp, #64]
    2630:      	ldr	r0, [pc, #52] <$d.487+0x10>
    2632:      	str	r0, [sp, #124]
    2634:      	add	r1, sp, #40
    2636:      	str	r1, [sp, #120]
    2638:      	str	r0, [sp, #116]
    263a:      	add	r0, sp, #32
    263c:      	str	r0, [sp, #112]
    263e:      	ldr	r0, [pc, #44] <$d.487+0x16>
    2640:      	str	r0, [sp, #108]
    2642:      	add	r0, sp, #56
    2644:      	str	r0, [sp, #104]
    2646:      	ldr	r0, [pc, #40] <$d.487+0x1a>
    2648:      	str	r0, [sp, #100]
    264a:      	add	r0, sp, #52
    264c:      	str	r0, [sp, #96]
    264e:      	ldr	r0, [pc, #36] <$d.487+0x1e>
    2650:      	str	r0, [sp, #92]
    2652:      	add	r0, sp, #48
    2654:      	b	0x24dc <core::str::slice_error_fail::h26c332087be94791+0x260> @ imm = #-380
    2656:      	mov	r8, r8

00002658 <$d.487>:
    2658:	64 3a 00 00	.word	0x00003a64
    265c:	74 3a 00 00	.word	0x00003a74
    2660:	98 37 00 00	.word	0x00003798
    2664:	10 3b 00 00	.word	0x00003b10
    2668:	19 2e 00 00	.word	0x00002e19
    266c:	e5 0f 00 00	.word	0x00000fe5
    2670:	d9 1f 00 00	.word	0x00001fd9
    2674:	11 2d 00 00	.word	0x00002d11
    2678:	a4 37 00 00	.word	0x000037a4
    267c:	c4 3a 00 00	.word	0x00003ac4
    2680:	9c 3a 00 00	.word	0x00003a9c

00002684 <core::unicode::printable::is_printable::h6cdd76e17613ee9f>:
    2684:      	push	{r4, r5, r6, r7, lr}
    2686:      	add	r7, sp, #12
    2688:      	sub	sp, #20
    268a:      	mov	r6, r0
    268c:      	lsrs	r0, r0, #16
    268e:      	bne	0x2778 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xf4> @ imm = #230
    2690:      	uxtb	r5, r6
    2692:      	movs	r0, #9
    2694:      	lsls	r0, r0, #5
    2696:      	str	r0, [sp, #8]
    2698:      	str	r6, [sp]
    269a:      	lsrs	r0, r6, #8
    269c:      	uxtb	r0, r0
    269e:      	str	r0, [sp, #16]
    26a0:      	ldr	r1, [pc, #684] <$d.527+0x48>
    26a2:      	movs	r3, #0
    26a4:      	movs	r0, #1
    26a6:      	str	r0, [sp, #12]
    26a8:      	b	0x26b0 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x2c> @ imm = #4
    26aa:      	cmp	r0, #0
    26ac:      	mov	r3, r6
    26ae:      	bne	0x272c <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xa8> @ imm = #122
    26b0:      	ldrb	r6, [r1, #1]
    26b2:      	adds	r2, r3, r6
    26b4:      	ldrb	r0, [r1]
    26b6:      	adds	r1, r1, #2
    26b8:      	ldr	r4, [sp, #16]
    26ba:      	cmp	r0, r4
    26bc:      	bne	0x270c <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x88> @ imm = #76
    26be:      	cmp	r2, r3
    26c0:      	bhs	0x26c4 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x40> @ imm = #0
    26c2:      	b	0x28d6 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x252> @ imm = #528
    26c4:      	str	r2, [sp, #4]
    26c6:      	ldr	r0, [sp, #8]
    26c8:      	cmp	r2, r0
    26ca:      	bls	0x26ce <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x4a> @ imm = #0
    26cc:      	b	0x28e2 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x25e> @ imm = #530
    26ce:      	ldr	r0, [pc, #644] <$d.527+0x4e>
    26d0:      	adds	r0, r0, r3
    26d2:      	adds	r3, r0, r6
    26d4:      	cmp	r6, #0
    26d6:      	beq	0x2722 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x9e> @ imm = #72
    26d8:      	ldrb	r4, [r0]
    26da:      	movs	r2, #0
    26dc:      	cmp	r4, r5
    26de:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #142
    26e0:      	adds	r4, r0, #1
    26e2:      	cmp	r4, r3
    26e4:      	beq	0x2722 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x9e> @ imm = #58
    26e6:      	ldrb	r4, [r0, #1]
    26e8:      	cmp	r4, r5
    26ea:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #130
    26ec:      	adds	r4, r0, #2
    26ee:      	cmp	r4, r3
    26f0:      	beq	0x2722 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x9e> @ imm = #46
    26f2:      	ldrb	r4, [r0, #2]
    26f4:      	cmp	r4, r5
    26f6:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #118
    26f8:      	adds	r4, r0, #3
    26fa:      	cmp	r4, r3
    26fc:      	beq	0x2722 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x9e> @ imm = #34
    26fe:      	subs	r6, r6, #4
    2700:      	adds	r4, r0, #4
    2702:      	ldrb	r0, [r0, #3]
    2704:      	cmp	r0, r5
    2706:      	mov	r0, r4
    2708:      	bne	0x26d4 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x50> @ imm = #-56
    270a:      	b	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #98
    270c:      	mov	r6, r2
    270e:      	ldr	r2, [pc, #576] <$d.527+0x4a>
    2710:      	subs	r3, r1, r2
    2712:      	subs	r3, #80
    2714:      	rsbs	r2, r3, #0
    2716:      	adcs	r2, r3
    2718:      	cmp	r0, r4
    271a:      	ldr	r0, [sp, #12]
    271c:      	bhi	0x26aa <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x26> @ imm = #-118
    271e:      	mov	r0, r2
    2720:      	b	0x26aa <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x26> @ imm = #-122
    2722:      	ldr	r0, [pc, #556] <$d.527+0x4a>
    2724:      	adds	r0, #80
    2726:      	cmp	r1, r0
    2728:      	ldr	r3, [sp, #4]
    272a:      	bne	0x26b0 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x2c> @ imm = #-126
    272c:      	ldr	r0, [sp]
    272e:      	uxth	r0, r0
    2730:      	ldr	r1, [pc, #548] <$d.527+0x50>
    2732:      	ldr	r2, [sp, #12]
    2734:      	mov	r3, r1
    2736:      	adds	r6, r3, #1
    2738:      	ldrb	r4, [r3]
    273a:      	sxtb	r5, r4
    273c:      	cmp	r5, #0
    273e:      	bmi	0x2748 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xc4> @ imm = #6
    2740:      	mov	r3, r6
    2742:      	subs	r0, r0, r4
    2744:      	bpl	0x2762 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xde> @ imm = #26
    2746:      	b	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #38
    2748:      	movs	r4, #255
    274a:      	adds	r4, #48
    274c:      	adds	r4, r1, r4
    274e:      	cmp	r6, r4
    2750:      	bne	0x2754 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xd0> @ imm = #0
    2752:      	b	0x28fa <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x276> @ imm = #420
    2754:      	ldrb	r4, [r3, #1]
    2756:      	lsls	r5, r5, #25
    2758:      	lsrs	r5, r5, #17
    275a:      	adds	r4, r5, r4
    275c:      	adds	r3, r3, #2
    275e:      	subs	r0, r0, r4
    2760:      	bmi	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #12
    2762:      	movs	r4, #1
    2764:      	eors	r2, r4
    2766:      	movs	r4, #255
    2768:      	adds	r4, #48
    276a:      	adds	r4, r1, r4
    276c:      	cmp	r3, r4
    276e:      	bne	0x2736 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xb2> @ imm = #-60
    2770:      	movs	r0, #1
    2772:      	ands	r0, r2
    2774:      	add	sp, #20
    2776:      	pop	{r4, r5, r6, r7, pc}
    2778:      	lsrs	r0, r6, #17
    277a:      	bne	0x2858 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x1d4> @ imm = #218
    277c:      	uxtb	r5, r6
    277e:      	str	r6, [sp]
    2780:      	lsrs	r0, r6, #8
    2782:      	uxtb	r0, r0
    2784:      	str	r0, [sp, #12]
    2786:      	ldr	r4, [pc, #432] <$d.527+0x32>
    2788:      	movs	r1, #0
    278a:      	movs	r2, #1
    278c:      	str	r2, [sp, #8]
    278e:      	b	0x2796 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x112> @ imm = #4
    2790:      	cmp	r2, #0
    2792:      	ldr	r4, [sp, #16]
    2794:      	bne	0x2814 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x190> @ imm = #124
    2796:      	mov	r3, r1
    2798:      	ldrb	r0, [r4, #1]
    279a:      	adds	r1, r1, r0
    279c:      	ldrb	r2, [r4]
    279e:      	adds	r4, r4, #2
    27a0:      	ldr	r6, [sp, #12]
    27a2:      	cmp	r2, r6
    27a4:      	str	r4, [sp, #16]
    27a6:      	bne	0x27f4 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x170> @ imm = #74
    27a8:      	cmp	r1, r3
    27aa:      	bhs	0x27ae <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x12a> @ imm = #0
    27ac:      	b	0x28d8 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x254> @ imm = #296
    27ae:      	str	r1, [sp, #4]
    27b0:      	cmp	r1, #192
    27b2:      	bls	0x27b6 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x132> @ imm = #0
    27b4:      	b	0x28ee <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x26a> @ imm = #310
    27b6:      	ldr	r1, [pc, #388] <$d.527+0x36>
    27b8:      	adds	r6, r1, r3
    27ba:      	adds	r3, r6, r0
    27bc:      	cmp	r0, #0
    27be:      	beq	0x2808 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x184> @ imm = #70
    27c0:      	ldrb	r4, [r6]
    27c2:      	movs	r2, #0
    27c4:      	cmp	r4, r5
    27c6:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-90
    27c8:      	adds	r4, r6, #1
    27ca:      	cmp	r4, r3
    27cc:      	beq	0x2808 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x184> @ imm = #56
    27ce:      	ldrb	r4, [r6, #1]
    27d0:      	cmp	r4, r5
    27d2:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-102
    27d4:      	adds	r4, r6, #2
    27d6:      	cmp	r4, r3
    27d8:      	beq	0x2808 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x184> @ imm = #44
    27da:      	ldrb	r4, [r6, #2]
    27dc:      	cmp	r4, r5
    27de:      	beq	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-114
    27e0:      	adds	r4, r6, #3
    27e2:      	cmp	r4, r3
    27e4:      	beq	0x2808 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x184> @ imm = #32
    27e6:      	subs	r0, r0, #4
    27e8:      	adds	r4, r6, #4
    27ea:      	ldrb	r6, [r6, #3]
    27ec:      	cmp	r6, r5
    27ee:      	mov	r6, r4
    27f0:      	bne	0x27bc <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x138> @ imm = #-56
    27f2:      	b	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-134
    27f4:      	ldr	r0, [pc, #320] <$d.527+0x30>
    27f6:      	subs	r3, r4, r0
    27f8:      	subs	r3, #84
    27fa:      	rsbs	r0, r3, #0
    27fc:      	adcs	r0, r3
    27fe:      	cmp	r2, r6
    2800:      	ldr	r2, [sp, #8]
    2802:      	bhi	0x2790 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x10c> @ imm = #-118
    2804:      	mov	r2, r0
    2806:      	b	0x2790 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x10c> @ imm = #-122
    2808:      	ldr	r0, [pc, #300] <$d.527+0x30>
    280a:      	adds	r0, #84
    280c:      	ldr	r4, [sp, #16]
    280e:      	cmp	r4, r0
    2810:      	ldr	r1, [sp, #4]
    2812:      	bne	0x2796 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x112> @ imm = #-128
    2814:      	ldr	r0, [sp]
    2816:      	uxth	r0, r0
    2818:      	ldr	r1, [pc, #292] <$d.527+0x38>
    281a:      	ldr	r2, [sp, #8]
    281c:      	mov	r3, r1
    281e:      	adds	r6, r3, #1
    2820:      	ldrb	r4, [r3]
    2822:      	sxtb	r5, r4
    2824:      	cmp	r5, #0
    2826:      	bmi	0x2830 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x1ac> @ imm = #6
    2828:      	mov	r3, r6
    282a:      	subs	r0, r0, r4
    282c:      	bpl	0x2848 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x1c4> @ imm = #24
    282e:      	b	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-194
    2830:      	movs	r4, #219
    2832:      	lsls	r4, r4, #1
    2834:      	adds	r4, r1, r4
    2836:      	cmp	r6, r4
    2838:      	beq	0x28fa <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x276> @ imm = #190
    283a:      	ldrb	r4, [r3, #1]
    283c:      	lsls	r5, r5, #25
    283e:      	lsrs	r5, r5, #17
    2840:      	adds	r4, r5, r4
    2842:      	adds	r3, r3, #2
    2844:      	subs	r0, r0, r4
    2846:      	bmi	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-218
    2848:      	movs	r4, #1
    284a:      	eors	r2, r4
    284c:      	movs	r4, #219
    284e:      	lsls	r4, r4, #1
    2850:      	adds	r4, r1, r4
    2852:      	cmp	r3, r4
    2854:      	bne	0x281e <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x19a> @ imm = #-58
    2856:      	b	0x2770 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0xec> @ imm = #-234
    2858:      	ldr	r1, [pc, #172] <$d.527>
    285a:      	mov	r0, r1
    285c:      	adds	r0, #30
    285e:      	ands	r0, r6
    2860:      	ldr	r2, [pc, #168] <$d.527+0x4>
    2862:      	subs	r0, r0, r2
    2864:      	subs	r2, r0, #1
    2866:      	sbcs	r0, r2
    2868:      	ands	r1, r6
    286a:      	ldr	r2, [pc, #164] <$d.527+0xa>
    286c:      	subs	r2, r1, r2
    286e:      	subs	r1, r2, #1
    2870:      	sbcs	r2, r1
    2872:      	ldr	r1, [pc, #160] <$d.527+0xe>
    2874:      	adds	r4, r6, r1
    2876:      	movs	r1, #1
    2878:      	movs	r3, #0
    287a:      	cmp	r4, #6
    287c:      	mov	r4, r1
    287e:      	bhi	0x2882 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x1fe> @ imm = #0
    2880:      	mov	r4, r3
    2882:      	ands	r2, r4
    2884:      	ands	r2, r0
    2886:      	ldr	r0, [pc, #144] <$d.527+0x12>
    2888:      	adds	r0, r6, r0
    288a:      	cmp	r0, #13
    288c:      	mov	r0, r1
    288e:      	bhi	0x2892 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x20e> @ imm = #0
    2890:      	mov	r0, r3
    2892:      	ands	r2, r0
    2894:      	ldr	r0, [pc, #132] <$d.527+0x14>
    2896:      	adds	r0, r6, r0
    2898:      	ldr	r4, [pc, #132] <$d.527+0x18>
    289a:      	cmp	r0, r4
    289c:      	mov	r0, r1
    289e:      	bhi	0x28a2 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x21e> @ imm = #0
    28a0:      	mov	r0, r3
    28a2:      	ands	r2, r0
    28a4:      	ldr	r0, [pc, #124] <$d.527+0x1c>
    28a6:      	adds	r0, r6, r0
    28a8:      	ldr	r4, [pc, #124] <$d.527+0x20>
    28aa:      	cmp	r0, r4
    28ac:      	mov	r0, r1
    28ae:      	bhi	0x28b2 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x22e> @ imm = #0
    28b0:      	mov	r0, r3
    28b2:      	ands	r2, r0
    28b4:      	ldr	r0, [pc, #116] <$d.527+0x24>
    28b6:      	adds	r0, r6, r0
    28b8:      	ldr	r4, [pc, #116] <$d.527+0x28>
    28ba:      	cmp	r0, r4
    28bc:      	mov	r0, r1
    28be:      	bhi	0x28c2 <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x23e> @ imm = #0
    28c0:      	mov	r0, r3
    28c2:      	ands	r2, r0
    28c4:      	ldr	r0, [pc, #108] <$d.527+0x2c>
    28c6:      	cmp	r6, r0
    28c8:      	blo	0x28cc <core::unicode::printable::is_printable::h6cdd76e17613ee9f+0x248> @ imm = #0
    28ca:      	mov	r1, r3
    28cc:      	ands	r2, r1
    28ce:      	movs	r0, #1
    28d0:      	ands	r0, r2
    28d2:      	add	sp, #20
    28d4:      	pop	{r4, r5, r6, r7, pc}
    28d6:      	mov	r1, r2
    28d8:      	ldr	r2, [pc, #112] <$d.527+0x44>
    28da:      	mov	r0, r3
    28dc:      	bl	0x223c <core::slice::index::slice_index_order_fail::h35619d5607b7eea8> @ imm = #-1700
    28e0:      	trap
    28e2:      	ldr	r2, [pc, #104] <$d.527+0x46>
    28e4:      	ldr	r0, [sp, #4]
    28e6:      	ldr	r1, [sp, #8]
    28e8:      	bl	0x21fc <core::slice::index::slice_end_index_len_fail::h4968a5fa708ed4f2> @ imm = #-1776
    28ec:      	trap
    28ee:      	movs	r1, #192
    28f0:      	ldr	r2, [pc, #88] <$d.527+0x44>
    28f2:      	ldr	r0, [sp, #4]
    28f4:      	bl	0x21fc <core::slice::index::slice_end_index_len_fail::h4968a5fa708ed4f2> @ imm = #-1788
    28f8:      	trap
    28fa:      	ldr	r0, [pc, #72] <$d.527+0x3e>
    28fc:      	movs	r1, #43
    28fe:      	ldr	r2, [pc, #72] <$d.527+0x42>
    2900:      	bl	0x1158 <core::panicking::panic::hd188a7f3102defa3> @ imm = #-6060
    2904:      	trap
    2906:      	mov	r8, r8

00002908 <$d.527>:
    2908:	e0 ff 1f 00	.word	0x001fffe0
    290c:	1e b8 02 00	.word	0x0002b81e
    2910:	e0 a6 02 00	.word	0x0002a6e0
    2914:	c7 48 fd ff	.word	0xfffd48c7
    2918:	5e 31 fd ff	.word	0xfffd315e
    291c:	1f 14 fd ff	.word	0xfffd141f
    2920:	1e 0c 00 00	.word	0x00000c1e
    2924:	e2 05 fd ff	.word	0xfffd05e2
    2928:	e1 05 00 00	.word	0x000005e1
    292c:	b5 ec fc ff	.word	0xfffcecb5
    2930:	b4 ed 0a 00	.word	0x000aedb4
    2934:	f0 01 0e 00	.word	0x000e01f0
    2938:	1f 3e 00 00	.word	0x00003e1f
    293c:	73 3e 00 00	.word	0x00003e73
    2940:	33 3f 00 00	.word	0x00003f33
    2944:	a4 37 00 00	.word	0x000037a4
    2948:	70 3b 00 00	.word	0x00003b70
    294c:	60 3b 00 00	.word	0x00003b60
    2950:	80 3b 00 00	.word	0x00003b80
    2954:	d0 3b 00 00	.word	0x00003bd0
    2958:	f0 3c 00 00	.word	0x00003cf0

0000295c <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795>:
    295c:      	push	{r4, r5, r6, r7, lr}
    295e:      	add	r7, sp, #12
    2960:      	sub	sp, #148
    2962:      	mov	r6, r1
    2964:      	ldr	r1, [r1]
    2966:      	lsls	r2, r1, #27
    2968:      	bmi	0x2a20 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xc4> @ imm = #180
    296a:      	lsls	r1, r1, #26
    296c:      	bmi	0x2a68 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x10c> @ imm = #248
    296e:      	str	r6, [sp, #8]
    2970:      	ldr	r2, [r0]
    2972:      	ldr	r4, [pc, #420] <$d.873+0xa>
    2974:      	movs	r6, #39
    2976:      	cmp	r2, r4
    2978:      	bls	0x29d8 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x7c> @ imm = #92
    297a:      	mov	r5, r2
    297c:      	str	r6, [sp, #16]
    297e:      	mov	r0, r5
    2980:      	ldr	r1, [pc, #408] <$d.873+0xc>
    2982:      	bl	0x2f8c <__aeabi_uidiv>  @ imm = #1542
    2986:      	str	r0, [sp, #12]
    2988:      	adds	r1, r4, #1
    298a:      	muls	r1, r0, r1
    298c:      	subs	r1, r5, r1
    298e:      	uxth	r2, r1
    2990:      	lsrs	r2, r2, #2
    2992:      	ldr	r0, [pc, #396] <$d.873+0x12>
    2994:      	muls	r2, r0, r2
    2996:      	lsrs	r2, r2, #17
    2998:      	lsls	r3, r2, #1
    299a:      	ldr	r0, [pc, #392] <$d.873+0x16>
    299c:      	ldrb	r0, [r0, r3]
    299e:      	add	r4, sp, #20
    29a0:      	adds	r4, r4, r6
    29a2:      	subs	r6, r4, #4
    29a4:      	strb	r0, [r6]
    29a6:      	ldr	r0, [pc, #380] <$d.873+0x16>
    29a8:      	adds	r0, r0, r3
    29aa:      	ldrb	r0, [r0, #1]
    29ac:      	strb	r0, [r6, #1]
    29ae:      	ldr	r6, [sp, #16]
    29b0:      	movs	r0, #100
    29b2:      	muls	r0, r2, r0
    29b4:      	subs	r0, r1, r0
    29b6:      	uxth	r0, r0
    29b8:      	lsls	r0, r0, #1
    29ba:      	ldr	r2, [pc, #360] <$d.873+0x16>
    29bc:      	ldrb	r1, [r2, r0]
    29be:      	mov	r3, r2
    29c0:      	subs	r2, r4, #2
    29c2:      	ldr	r4, [pc, #340] <$d.873+0xa>
    29c4:      	strb	r1, [r2]
    29c6:      	adds	r0, r3, r0
    29c8:      	ldrb	r0, [r0, #1]
    29ca:      	strb	r0, [r2, #1]
    29cc:      	ldr	r2, [sp, #12]
    29ce:      	subs	r6, r6, #4
    29d0:      	ldr	r0, [pc, #340] <$d.873+0x18>
    29d2:      	cmp	r5, r0
    29d4:      	mov	r5, r2
    29d6:      	bhi	0x297c <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x20> @ imm = #-94
    29d8:      	cmp	r2, #99
    29da:      	bgt	0x29de <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x82> @ imm = #0
    29dc:      	b	0x2ae4 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x188> @ imm = #260
    29de:      	uxth	r0, r2
    29e0:      	lsrs	r0, r0, #2
    29e2:      	ldr	r1, [pc, #316] <$d.873+0x12>
    29e4:      	muls	r1, r0, r1
    29e6:      	lsrs	r1, r1, #17
    29e8:      	movs	r0, #100
    29ea:      	muls	r0, r1, r0
    29ec:      	subs	r0, r2, r0
    29ee:      	uxth	r0, r0
    29f0:      	lsls	r0, r0, #1
    29f2:      	ldr	r2, [pc, #304] <$d.873+0x16>
    29f4:      	ldrb	r3, [r2, r0]
    29f6:      	subs	r6, r6, #2
    29f8:      	add	r4, sp, #20
    29fa:      	strb	r3, [r4, r6]
    29fc:      	adds	r3, r4, r6
    29fe:      	adds	r0, r2, r0
    2a00:      	ldrb	r0, [r0, #1]
    2a02:      	strb	r0, [r3, #1]
    2a04:      	ldr	r0, [sp, #8]
    2a06:      	cmp	r1, #10
    2a08:      	blt	0x2aec <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x190> @ imm = #224
    2a0a:      	lsls	r1, r1, #1
    2a0c:      	ldr	r2, [pc, #276] <$d.873+0x14>
    2a0e:      	ldrb	r3, [r2, r1]
    2a10:      	subs	r5, r6, #2
    2a12:      	add	r4, sp, #20
    2a14:      	strb	r3, [r4, r5]
    2a16:      	adds	r3, r4, r5
    2a18:      	adds	r1, r2, r1
    2a1a:      	ldrb	r1, [r1, #1]
    2a1c:      	strb	r1, [r3, #1]
    2a1e:      	b	0x2af4 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x198> @ imm = #210
    2a20:      	ldr	r2, [r0]
    2a22:      	movs	r0, #1
    2a24:      	lsls	r0, r0, #8
    2a26:      	movs	r1, #129
    2a28:      	b	0x2a40 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xe4> @ imm = #20
    2a2a:      	movs	r3, #87
    2a2c:      	adds	r3, r3, r4
    2a2e:      	add	r4, sp, #20
    2a30:      	adds	r4, r4, r1
    2a32:      	subs	r4, r4, #3
    2a34:      	strb	r3, [r4]
    2a36:      	subs	r1, r1, #2
    2a38:      	lsrs	r3, r2, #8
    2a3a:      	cmp	r2, r0
    2a3c:      	mov	r2, r3
    2a3e:      	blo	0x2ad4 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x178> @ imm = #146
    2a40:      	movs	r3, #15
    2a42:      	mov	r4, r2
    2a44:      	ands	r4, r3
    2a46:      	cmp	r4, #10
    2a48:      	blo	0x2a4e <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xf2> @ imm = #2
    2a4a:      	movs	r5, #87
    2a4c:      	b	0x2a50 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xf4> @ imm = #0
    2a4e:      	movs	r5, #48
    2a50:      	adds	r4, r5, r4
    2a52:      	add	r5, sp, #20
    2a54:      	adds	r5, r5, r1
    2a56:      	subs	r5, r5, #2
    2a58:      	strb	r4, [r5]
    2a5a:      	lsrs	r4, r2, #4
    2a5c:      	beq	0x2ab0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x154> @ imm = #80
    2a5e:      	ands	r4, r3
    2a60:      	cmp	r4, #10
    2a62:      	bhs	0x2a2a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xce> @ imm = #-60
    2a64:      	movs	r3, #48
    2a66:      	b	0x2a2c <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xd0> @ imm = #-62
    2a68:      	ldr	r2, [r0]
    2a6a:      	movs	r0, #1
    2a6c:      	lsls	r0, r0, #8
    2a6e:      	movs	r1, #129
    2a70:      	b	0x2a88 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x12c> @ imm = #20
    2a72:      	movs	r3, #55
    2a74:      	adds	r3, r3, r4
    2a76:      	add	r4, sp, #20
    2a78:      	adds	r4, r4, r1
    2a7a:      	subs	r4, r4, #3
    2a7c:      	strb	r3, [r4]
    2a7e:      	subs	r1, r1, #2
    2a80:      	lsrs	r3, r2, #8
    2a82:      	cmp	r2, r0
    2a84:      	mov	r2, r3
    2a86:      	blo	0x2ad4 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x178> @ imm = #74
    2a88:      	movs	r3, #15
    2a8a:      	mov	r4, r2
    2a8c:      	ands	r4, r3
    2a8e:      	cmp	r4, #10
    2a90:      	blo	0x2a96 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x13a> @ imm = #2
    2a92:      	movs	r5, #55
    2a94:      	b	0x2a98 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x13c> @ imm = #0
    2a96:      	movs	r5, #48
    2a98:      	adds	r4, r5, r4
    2a9a:      	add	r5, sp, #20
    2a9c:      	adds	r5, r5, r1
    2a9e:      	subs	r5, r5, #2
    2aa0:      	strb	r4, [r5]
    2aa2:      	lsrs	r4, r2, #4
    2aa4:      	beq	0x2ab0 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x154> @ imm = #8
    2aa6:      	ands	r4, r3
    2aa8:      	cmp	r4, #10
    2aaa:      	bhs	0x2a72 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x116> @ imm = #-60
    2aac:      	movs	r3, #48
    2aae:      	b	0x2a74 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x118> @ imm = #-62
    2ab0:      	subs	r0, r1, #2
    2ab2:      	subs	r1, r1, #1
    2ab4:      	cmp	r0, #129
    2ab6:      	bhs	0x2ada <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x17e> @ imm = #32
    2ab8:      	movs	r2, #129
    2aba:      	subs	r1, r2, r1
    2abc:      	str	r1, [sp, #4]
    2abe:      	add	r1, sp, #20
    2ac0:      	adds	r0, r1, r0
    2ac2:      	str	r0, [sp]
    2ac4:      	movs	r1, #1
    2ac6:      	ldr	r2, [pc, #72] <$d.873+0x2>
    2ac8:      	movs	r3, #2
    2aca:      	mov	r0, r6
    2acc:      	bl	0x194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a> @ imm = #-4484
    2ad0:      	add	sp, #148
    2ad2:      	pop	{r4, r5, r6, r7, pc}
    2ad4:      	subs	r0, r1, #1
    2ad6:      	cmp	r0, #129
    2ad8:      	blo	0x2ab8 <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0x15c> @ imm = #-36
    2ada:      	movs	r1, #128
    2adc:      	ldr	r2, [pc, #52] <$d.873+0x4>
    2ade:      	bl	0x21bc <core::slice::index::slice_start_index_len_fail::h3080a8211123744d> @ imm = #-2342
    2ae2:      	trap
    2ae4:      	mov	r1, r2
    2ae6:      	ldr	r0, [sp, #8]
    2ae8:      	cmp	r1, #10
    2aea:      	bge	0x2a0a <core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h09259004d1de1795+0xae> @ imm = #-228
    2aec:      	subs	r5, r6, #1
    2aee:      	adds	r1, #48
    2af0:      	add	r2, sp, #20
    2af2:      	strb	r1, [r2, r5]
    2af4:      	movs	r1, #39
    2af6:      	subs	r1, r1, r5
    2af8:      	str	r1, [sp, #4]
    2afa:      	add	r1, sp, #20
    2afc:      	adds	r1, r1, r5
    2afe:      	str	r1, [sp]
    2b00:      	movs	r1, #1
    2b02:      	ldr	r2, [pc, #40] <$d.873+0x1e>
    2b04:      	movs	r3, #0
    2b06:      	bl	0x194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a> @ imm = #-4542
    2b0a:      	add	sp, #148
    2b0c:      	pop	{r4, r5, r6, r7, pc}
    2b0e:      	mov	r8, r8

00002b10 <$d.873>:
    2b10:	bc 38 00 00	.word	0x000038bc
    2b14:	ac 38 00 00	.word	0x000038ac
    2b18:	0f 27 00 00	.word	0x0000270f
    2b1c:	10 27 00 00	.word	0x00002710
    2b20:	7b 14 00 00	.word	0x0000147b
    2b24:	be 38 00 00	.word	0x000038be
    2b28:	ff e0 f5 05	.word	0x05f5e0ff
    2b2c:	98 37 00 00	.word	0x00003798

00002b30 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4>:
    2b30:      	push	{r4, r5, r6, r7, lr}
    2b32:      	add	r7, sp, #12
    2b34:      	sub	sp, #52
    2b36:      	mov	r5, r1
    2b38:      	ldrh	r1, [r0]
    2b3a:      	add	r0, sp, #12
    2b3c:      	adds	r0, #35
    2b3e:      	ldr	r3, [pc, #184] <$d.881+0x2>
    2b40:      	cmp	r1, r3
    2b42:      	bls	0x2b88 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0x58> @ imm = #66
    2b44:      	uxth	r2, r1
    2b46:      	lsrs	r2, r2, #4
    2b48:      	str	r5, [sp, #8]
    2b4a:      	ldr	r5, [pc, #184] <$d.881+0xe>
    2b4c:      	muls	r5, r2, r5
    2b4e:      	lsrs	r2, r5, #19
    2b50:      	adds	r3, r3, #1
    2b52:      	muls	r3, r2, r3
    2b54:      	subs	r1, r1, r3
    2b56:      	uxth	r3, r1
    2b58:      	lsrs	r3, r3, #2
    2b5a:      	ldr	r5, [pc, #160] <$d.881+0x6>
    2b5c:      	muls	r5, r3, r5
    2b5e:      	lsrs	r3, r5, #17
    2b60:      	lsls	r5, r3, #1
    2b62:      	ldr	r6, [pc, #156] <$d.881+0xa>
    2b64:      	ldrb	r4, [r6, r5]
    2b66:      	strb	r4, [r0]
    2b68:      	adds	r4, r6, r5
    2b6a:      	ldr	r5, [sp, #8]
    2b6c:      	ldrb	r4, [r4, #1]
    2b6e:      	strb	r4, [r0, #1]
    2b70:      	movs	r4, #100
    2b72:      	muls	r4, r3, r4
    2b74:      	subs	r1, r1, r4
    2b76:      	uxth	r1, r1
    2b78:      	lsls	r1, r1, #1
    2b7a:      	ldrb	r3, [r6, r1]
    2b7c:      	strb	r3, [r0, #2]
    2b7e:      	adds	r1, r6, r1
    2b80:      	ldrb	r1, [r1, #1]
    2b82:      	strb	r1, [r0, #3]
    2b84:      	movs	r0, #35
    2b86:      	b	0x2bd2 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0xa2> @ imm = #72
    2b88:      	cmp	r1, #99
    2b8a:      	bls	0x2bca <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0x9a> @ imm = #60
    2b8c:      	uxth	r2, r1
    2b8e:      	lsrs	r2, r2, #2
    2b90:      	ldr	r3, [pc, #104] <$d.881+0x4>
    2b92:      	muls	r3, r2, r3
    2b94:      	lsrs	r2, r3, #17
    2b96:      	movs	r3, #100
    2b98:      	muls	r3, r2, r3
    2b9a:      	subs	r1, r1, r3
    2b9c:      	uxth	r1, r1
    2b9e:      	lsls	r1, r1, #1
    2ba0:      	ldr	r3, [pc, #92] <$d.881+0x8>
    2ba2:      	ldrb	r4, [r3, r1]
    2ba4:      	strb	r4, [r0, #2]
    2ba6:      	adds	r1, r3, r1
    2ba8:      	ldrb	r1, [r1, #1]
    2baa:      	strb	r1, [r0, #3]
    2bac:      	movs	r0, #37
    2bae:      	mov	r1, r2
    2bb0:      	cmp	r1, #10
    2bb2:      	blo	0x2bd0 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0xa0> @ imm = #26
    2bb4:      	lsls	r1, r1, #1
    2bb6:      	ldr	r2, [pc, #72] <$d.881+0xa>
    2bb8:      	ldrb	r3, [r2, r1]
    2bba:      	subs	r0, r0, #2
    2bbc:      	add	r4, sp, #12
    2bbe:      	strb	r3, [r4, r0]
    2bc0:      	adds	r3, r4, r0
    2bc2:      	adds	r1, r2, r1
    2bc4:      	ldrb	r1, [r1, #1]
    2bc6:      	strb	r1, [r3, #1]
    2bc8:      	b	0x2bda <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0xaa> @ imm = #14
    2bca:      	movs	r0, #39
    2bcc:      	cmp	r1, #10
    2bce:      	bhs	0x2bb4 <core::fmt::num::imp::<impl core::fmt::Display for u16>::fmt::h604aa11fce4661b4+0x84> @ imm = #-30
    2bd0:      	mov	r2, r1
    2bd2:      	subs	r0, r0, #1
    2bd4:      	adds	r2, #48
    2bd6:      	add	r1, sp, #12
    2bd8:      	strb	r2, [r1, r0]
    2bda:      	movs	r1, #39
    2bdc:      	subs	r1, r1, r0
    2bde:      	str	r1, [sp, #4]
    2be0:      	add	r1, sp, #12
    2be2:      	adds	r0, r1, r0
    2be4:      	str	r0, [sp]
    2be6:      	movs	r1, #1
    2be8:      	ldr	r2, [pc, #28] <$d.881+0x10>
    2bea:      	movs	r3, #0
    2bec:      	mov	r0, r5
    2bee:      	bl	0x194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a> @ imm = #-4774
    2bf2:      	add	sp, #52
    2bf4:      	pop	{r4, r5, r6, r7, pc}
    2bf6:      	mov	r8, r8

00002bf8 <$d.881>:
    2bf8:	0f 27 00 00	.word	0x0000270f
    2bfc:	7b 14 00 00	.word	0x0000147b
    2c00:	be 38 00 00	.word	0x000038be
    2c04:	47 03 00 00	.word	0x00000347
    2c08:	98 37 00 00	.word	0x00003798

00002c0c <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548>:
    2c0c:      	push	{r4, r5, r6, r7, lr}
    2c0e:      	add	r7, sp, #12
    2c10:      	sub	sp, #68
    2c12:      	str	r1, [sp, #16]
    2c14:      	ldr	r0, [r0]
    2c16:      	asrs	r1, r0, #31
    2c18:      	str	r0, [sp, #12]
    2c1a:      	adds	r2, r0, r1
    2c1c:      	eors	r2, r1
    2c1e:      	ldr	r4, [pc, #216] <$d.883+0x2>
    2c20:      	movs	r6, #39
    2c22:      	cmp	r2, r4
    2c24:      	bls	0x2c84 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0x78> @ imm = #92
    2c26:      	mov	r5, r2
    2c28:      	str	r6, [sp, #24]
    2c2a:      	mov	r0, r5
    2c2c:      	ldr	r1, [pc, #204] <$d.883+0x4>
    2c2e:      	bl	0x2f8c <__aeabi_uidiv>  @ imm = #858
    2c32:      	str	r0, [sp, #20]
    2c34:      	adds	r1, r4, #1
    2c36:      	muls	r1, r0, r1
    2c38:      	subs	r1, r5, r1
    2c3a:      	uxth	r2, r1
    2c3c:      	lsrs	r2, r2, #2
    2c3e:      	ldr	r0, [pc, #192] <$d.883+0xa>
    2c40:      	muls	r2, r0, r2
    2c42:      	lsrs	r2, r2, #17
    2c44:      	lsls	r3, r2, #1
    2c46:      	ldr	r0, [pc, #188] <$d.883+0xe>
    2c48:      	ldrb	r0, [r0, r3]
    2c4a:      	add	r4, sp, #28
    2c4c:      	adds	r4, r4, r6
    2c4e:      	subs	r6, r4, #4
    2c50:      	strb	r0, [r6]
    2c52:      	ldr	r0, [pc, #176] <$d.883+0xe>
    2c54:      	adds	r0, r0, r3
    2c56:      	ldrb	r0, [r0, #1]
    2c58:      	strb	r0, [r6, #1]
    2c5a:      	ldr	r6, [sp, #24]
    2c5c:      	movs	r0, #100
    2c5e:      	muls	r0, r2, r0
    2c60:      	subs	r0, r1, r0
    2c62:      	uxth	r0, r0
    2c64:      	lsls	r0, r0, #1
    2c66:      	ldr	r2, [pc, #156] <$d.883+0xe>
    2c68:      	ldrb	r1, [r2, r0]
    2c6a:      	mov	r3, r2
    2c6c:      	subs	r2, r4, #2
    2c6e:      	ldr	r4, [pc, #136] <$d.883+0x2>
    2c70:      	strb	r1, [r2]
    2c72:      	adds	r0, r3, r0
    2c74:      	ldrb	r0, [r0, #1]
    2c76:      	strb	r0, [r2, #1]
    2c78:      	ldr	r2, [sp, #20]
    2c7a:      	subs	r6, r6, #4
    2c7c:      	ldr	r0, [pc, #136] <$d.883+0x10>
    2c7e:      	cmp	r5, r0
    2c80:      	mov	r5, r2
    2c82:      	bhi	0x2c28 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0x1c> @ imm = #-94
    2c84:      	cmp	r2, #99
    2c86:      	ble	0x2cc8 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0xbc> @ imm = #62
    2c88:      	uxth	r0, r2
    2c8a:      	lsrs	r0, r0, #2
    2c8c:      	ldr	r1, [pc, #112] <$d.883+0x8>
    2c8e:      	muls	r1, r0, r1
    2c90:      	lsrs	r1, r1, #17
    2c92:      	movs	r0, #100
    2c94:      	muls	r0, r1, r0
    2c96:      	subs	r0, r2, r0
    2c98:      	uxth	r0, r0
    2c9a:      	lsls	r0, r0, #1
    2c9c:      	ldr	r2, [pc, #100] <$d.883+0xc>
    2c9e:      	ldrb	r3, [r2, r0]
    2ca0:      	subs	r6, r6, #2
    2ca2:      	add	r4, sp, #28
    2ca4:      	strb	r3, [r4, r6]
    2ca6:      	adds	r3, r4, r6
    2ca8:      	adds	r0, r2, r0
    2caa:      	ldrb	r0, [r0, #1]
    2cac:      	strb	r0, [r3, #1]
    2cae:      	cmp	r1, #10
    2cb0:      	blt	0x2cce <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0xc2> @ imm = #26
    2cb2:      	lsls	r1, r1, #1
    2cb4:      	ldr	r2, [pc, #76] <$d.883+0xc>
    2cb6:      	ldrb	r3, [r2, r1]
    2cb8:      	subs	r0, r6, #2
    2cba:      	add	r4, sp, #28
    2cbc:      	strb	r3, [r4, r0]
    2cbe:      	adds	r3, r4, r0
    2cc0:      	adds	r1, r2, r1
    2cc2:      	ldrb	r1, [r1, #1]
    2cc4:      	strb	r1, [r3, #1]
    2cc6:      	b	0x2cd6 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0xca> @ imm = #12
    2cc8:      	mov	r1, r2
    2cca:      	cmp	r1, #10
    2ccc:      	bge	0x2cb2 <core::fmt::num::imp::<impl core::fmt::Display for isize>::fmt::hf394190e68450548+0xa6> @ imm = #-30
    2cce:      	subs	r0, r6, #1
    2cd0:      	adds	r1, #48
    2cd2:      	add	r2, sp, #28
    2cd4:      	strb	r1, [r2, r0]
    2cd6:      	movs	r1, #39
    2cd8:      	subs	r1, r1, r0
    2cda:      	str	r1, [sp, #4]
    2cdc:      	add	r1, sp, #28
    2cde:      	adds	r0, r1, r0
    2ce0:      	str	r0, [sp]
    2ce2:      	ldr	r0, [sp, #12]
    2ce4:      	mvns	r0, r0
    2ce6:      	lsrs	r1, r0, #31
    2ce8:      	ldr	r2, [pc, #32] <$d.883+0x14>
    2cea:      	movs	r3, #0
    2cec:      	ldr	r0, [sp, #16]
    2cee:      	bl	0x194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a> @ imm = #-5030
    2cf2:      	add	sp, #68
    2cf4:      	pop	{r4, r5, r6, r7, pc}
    2cf6:      	mov	r8, r8

00002cf8 <$d.883>:
    2cf8:	0f 27 00 00	.word	0x0000270f
    2cfc:	10 27 00 00	.word	0x00002710
    2d00:	7b 14 00 00	.word	0x0000147b
    2d04:	be 38 00 00	.word	0x000038be
    2d08:	ff e0 f5 05	.word	0x05f5e0ff
    2d0c:	98 37 00 00	.word	0x00003798

00002d10 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0>:
    2d10:      	push	{r4, r5, r6, r7, lr}
    2d12:      	add	r7, sp, #12
    2d14:      	sub	sp, #60
    2d16:      	str	r1, [sp, #8]
    2d18:      	ldr	r2, [r0]
    2d1a:      	ldr	r4, [pc, #212] <$d.885+0x2>
    2d1c:      	movs	r6, #39
    2d1e:      	cmp	r2, r4
    2d20:      	bls	0x2d80 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0x70> @ imm = #92
    2d22:      	mov	r5, r2
    2d24:      	str	r6, [sp, #16]
    2d26:      	mov	r0, r5
    2d28:      	ldr	r1, [pc, #200] <$d.885+0x4>
    2d2a:      	bl	0x2f8c <__aeabi_uidiv>  @ imm = #606
    2d2e:      	str	r0, [sp, #12]
    2d30:      	adds	r1, r4, #1
    2d32:      	muls	r1, r0, r1
    2d34:      	subs	r1, r5, r1
    2d36:      	uxth	r2, r1
    2d38:      	lsrs	r2, r2, #2
    2d3a:      	ldr	r0, [pc, #188] <$d.885+0xa>
    2d3c:      	muls	r2, r0, r2
    2d3e:      	lsrs	r2, r2, #17
    2d40:      	lsls	r3, r2, #1
    2d42:      	ldr	r0, [pc, #184] <$d.885+0xe>
    2d44:      	ldrb	r0, [r0, r3]
    2d46:      	add	r4, sp, #20
    2d48:      	adds	r4, r4, r6
    2d4a:      	subs	r6, r4, #4
    2d4c:      	strb	r0, [r6]
    2d4e:      	ldr	r0, [pc, #172] <$d.885+0xe>
    2d50:      	adds	r0, r0, r3
    2d52:      	ldrb	r0, [r0, #1]
    2d54:      	strb	r0, [r6, #1]
    2d56:      	ldr	r6, [sp, #16]
    2d58:      	movs	r0, #100
    2d5a:      	muls	r0, r2, r0
    2d5c:      	subs	r0, r1, r0
    2d5e:      	uxth	r0, r0
    2d60:      	lsls	r0, r0, #1
    2d62:      	ldr	r2, [pc, #152] <$d.885+0xe>
    2d64:      	ldrb	r1, [r2, r0]
    2d66:      	mov	r3, r2
    2d68:      	subs	r2, r4, #2
    2d6a:      	ldr	r4, [pc, #132] <$d.885+0x2>
    2d6c:      	strb	r1, [r2]
    2d6e:      	adds	r0, r3, r0
    2d70:      	ldrb	r0, [r0, #1]
    2d72:      	strb	r0, [r2, #1]
    2d74:      	ldr	r2, [sp, #12]
    2d76:      	subs	r6, r6, #4
    2d78:      	ldr	r0, [pc, #132] <$d.885+0x10>
    2d7a:      	cmp	r5, r0
    2d7c:      	mov	r5, r2
    2d7e:      	bhi	0x2d24 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0x14> @ imm = #-94
    2d80:      	cmp	r2, #99
    2d82:      	ble	0x2dc4 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0xb4> @ imm = #62
    2d84:      	uxth	r0, r2
    2d86:      	lsrs	r0, r0, #2
    2d88:      	ldr	r1, [pc, #108] <$d.885+0x8>
    2d8a:      	muls	r1, r0, r1
    2d8c:      	lsrs	r1, r1, #17
    2d8e:      	movs	r0, #100
    2d90:      	muls	r0, r1, r0
    2d92:      	subs	r0, r2, r0
    2d94:      	uxth	r0, r0
    2d96:      	lsls	r0, r0, #1
    2d98:      	ldr	r2, [pc, #96] <$d.885+0xc>
    2d9a:      	ldrb	r3, [r2, r0]
    2d9c:      	subs	r6, r6, #2
    2d9e:      	add	r4, sp, #20
    2da0:      	strb	r3, [r4, r6]
    2da2:      	adds	r3, r4, r6
    2da4:      	adds	r0, r2, r0
    2da6:      	ldrb	r0, [r0, #1]
    2da8:      	strb	r0, [r3, #1]
    2daa:      	cmp	r1, #10
    2dac:      	blt	0x2dca <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0xba> @ imm = #26
    2dae:      	lsls	r1, r1, #1
    2db0:      	ldr	r2, [pc, #72] <$d.885+0xc>
    2db2:      	ldrb	r3, [r2, r1]
    2db4:      	subs	r0, r6, #2
    2db6:      	add	r4, sp, #20
    2db8:      	strb	r3, [r4, r0]
    2dba:      	adds	r3, r4, r0
    2dbc:      	adds	r1, r2, r1
    2dbe:      	ldrb	r1, [r1, #1]
    2dc0:      	strb	r1, [r3, #1]
    2dc2:      	b	0x2dd2 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0xc2> @ imm = #12
    2dc4:      	mov	r1, r2
    2dc6:      	cmp	r1, #10
    2dc8:      	bge	0x2dae <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h5a264564fe0b0ea0+0x9e> @ imm = #-30
    2dca:      	subs	r0, r6, #1
    2dcc:      	adds	r1, #48
    2dce:      	add	r2, sp, #20
    2dd0:      	strb	r1, [r2, r0]
    2dd2:      	movs	r1, #39
    2dd4:      	subs	r1, r1, r0
    2dd6:      	str	r1, [sp, #4]
    2dd8:      	add	r1, sp, #20
    2dda:      	adds	r0, r1, r0
    2ddc:      	str	r0, [sp]
    2dde:      	movs	r1, #1
    2de0:      	ldr	r2, [pc, #32] <$d.885+0x14>
    2de2:      	movs	r3, #0
    2de4:      	ldr	r0, [sp, #8]
    2de6:      	bl	0x194c <core::fmt::Formatter::pad_integral::h8d5011e63a4c639a> @ imm = #-5278
    2dea:      	add	sp, #60
    2dec:      	pop	{r4, r5, r6, r7, pc}
    2dee:      	mov	r8, r8

00002df0 <$d.885>:
    2df0:	0f 27 00 00	.word	0x0000270f
    2df4:	10 27 00 00	.word	0x00002710
    2df8:	7b 14 00 00	.word	0x0000147b
    2dfc:	be 38 00 00	.word	0x000038be
    2e00:	ff e0 f5 05	.word	0x05f5e0ff
    2e04:	98 37 00 00	.word	0x00003798

00002e08 <<&T as core::fmt::Debug>::fmt::h8d6d0cd170979dee>:
    2e08:      	push	{r7, lr}
    2e0a:      	add	r7, sp, #0
    2e0c:      	ldr	r2, [r0]
    2e0e:      	ldr	r0, [r0, #4]
    2e10:      	ldr	r3, [r0, #12]
    2e12:      	mov	r0, r2
    2e14:      	blx	r3
    2e16:      	pop	{r7, pc}

00002e18 <<&T as core::fmt::Display>::fmt::ha2fc02d9d303d404>:
    2e18:      	push	{r7, lr}
    2e1a:      	add	r7, sp, #0
    2e1c:      	mov	r3, r1
    2e1e:      	ldm	r0!, {r1, r2}
    2e20:      	mov	r0, r3
    2e22:      	bl	0x1ca8 <core::fmt::Formatter::pad::haa777c0a9492680f> @ imm = #-4478
    2e26:      	pop	{r7, pc}

00002e28 <<&T as core::fmt::Display>::fmt::hd97a7489159c6164>:
    2e28:      	push	{r7, lr}
    2e2a:      	add	r7, sp, #0
    2e2c:      	mov	r3, r1
    2e2e:      	ldr	r0, [r0]
    2e30:      	ldm	r0!, {r1, r2}
    2e32:      	mov	r0, r3
    2e34:      	bl	0x1ca8 <core::fmt::Formatter::pad::haa777c0a9492680f> @ imm = #-4496
    2e38:      	pop	{r7, pc}

00002e3a <<&T as core::fmt::Display>::fmt::hf610f8399ba96788>:
    2e3a:      	push	{r4, r5, r6, r7, lr}
    2e3c:      	add	r7, sp, #12
    2e3e:      	sub	sp, #28
    2e40:      	ldr	r2, [r1, #24]
    2e42:      	str	r2, [sp]
    2e44:      	ldr	r1, [r1, #28]
    2e46:      	ldr	r0, [r0]
    2e48:      	add	r2, sp, #4
    2e4a:      	mov	r4, r2
    2e4c:      	ldm	r0!, {r3, r5, r6}
    2e4e:      	stm	r4!, {r3, r5, r6}
    2e50:      	ldm	r0!, {r3, r5, r6}
    2e52:      	stm	r4!, {r3, r5, r6}
    2e54:      	ldr	r0, [sp]
    2e56:      	bl	0x17ec <core::fmt::write::hff185d7d684cc368> @ imm = #-5742
    2e5a:      	add	sp, #28
    2e5c:      	pop	{r4, r5, r6, r7, pc}
    2e5e:      	bmi	0x2e0a <<&T as core::fmt::Debug>::fmt::h8d6d0cd170979dee+0x2> @ imm = #-88

00002e60 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5>:
    2e60:      	push	{r4, r5, r6, r7, lr}
    2e62:      	add	r7, sp, #12
    2e64:      	sub	sp, #4
    2e66:      	lsls	r1, r0, #11
    2e68:      	movs	r3, #0
    2e6a:      	movs	r5, #32
    2e6c:      	ldr	r2, [pc, #160] <$d.1200>
    2e6e:      	mov	r4, r5
    2e70:      	b	0x2e78 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x18> @ imm = #4
    2e72:      	adds	r3, r5, #1
    2e74:      	subs	r5, r4, r3
    2e76:      	bls	0x2e94 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x34> @ imm = #26
    2e78:      	lsrs	r5, r5, #1
    2e7a:      	adds	r5, r5, r3
    2e7c:      	lsls	r6, r5, #2
    2e7e:      	ldr	r6, [r2, r6]
    2e80:      	lsls	r6, r6, #11
    2e82:      	cmp	r1, r6
    2e84:      	bhi	0x2e72 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x12> @ imm = #-22
    2e86:      	cmp	r6, r1
    2e88:      	beq	0x2e92 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x32> @ imm = #6
    2e8a:      	mov	r4, r5
    2e8c:      	subs	r5, r4, r3
    2e8e:      	bhi	0x2e78 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x18> @ imm = #-26
    2e90:      	b	0x2e94 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x34> @ imm = #0
    2e92:      	adds	r3, r5, #1
    2e94:      	cmp	r3, #31
    2e96:      	bhi	0x2efe <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x9e> @ imm = #100
    2e98:      	lsls	r5, r3, #2
    2e9a:      	ldr	r4, [pc, #124] <$d.1200+0xa>
    2e9c:      	cmp	r3, #31
    2e9e:      	beq	0x2ea6 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x46> @ imm = #4
    2ea0:      	adds	r4, r5, r2
    2ea2:      	ldr	r4, [r4, #4]
    2ea4:      	lsrs	r4, r4, #21
    2ea6:      	subs	r3, r3, #1
    2ea8:      	bhs	0x2eae <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x4e> @ imm = #2
    2eaa:      	movs	r6, #0
    2eac:      	b	0x2eba <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x5a> @ imm = #10
    2eae:      	cmp	r3, #32
    2eb0:      	bhs	0x2f04 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0xa4> @ imm = #80
    2eb2:      	lsls	r3, r3, #2
    2eb4:      	ldr	r3, [r2, r3]
    2eb6:      	ldr	r6, [pc, #104] <$d.1200+0x12>
    2eb8:      	ands	r6, r3
    2eba:      	ldr	r2, [r2, r5]
    2ebc:      	lsrs	r2, r2, #21
    2ebe:      	adds	r3, r2, #1
    2ec0:      	cmp	r4, r3
    2ec2:      	beq	0x2eea <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x8a> @ imm = #36
    2ec4:      	ldr	r5, [pc, #80] <$d.1200+0x8>
    2ec6:      	cmp	r2, r5
    2ec8:      	mov	r3, r2
    2eca:      	bhi	0x2ece <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x6e> @ imm = #0
    2ecc:      	mov	r3, r5
    2ece:      	subs	r5, r0, r6
    2ed0:      	subs	r0, r4, #1
    2ed2:      	movs	r4, #0
    2ed4:      	ldr	r1, [pc, #76] <$d.1200+0x14>
    2ed6:      	cmp	r3, r2
    2ed8:      	beq	0x2ef2 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x92> @ imm = #22
    2eda:      	ldrb	r6, [r1, r2]
    2edc:      	adds	r4, r4, r6
    2ede:      	cmp	r4, r5
    2ee0:      	bhi	0x2eea <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x8a> @ imm = #6
    2ee2:      	adds	r2, r2, #1
    2ee4:      	cmp	r0, r2
    2ee6:      	bne	0x2ed6 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0x76> @ imm = #-20
    2ee8:      	mov	r2, r0
    2eea:      	movs	r0, #1
    2eec:      	ands	r0, r2
    2eee:      	add	sp, #4
    2ef0:      	pop	{r4, r5, r6, r7, pc}
    2ef2:      	ldr	r2, [pc, #52] <$d.1200+0x1a>
    2ef4:      	mov	r0, r3
    2ef6:      	ldr	r1, [pc, #32] <$d.1200+0xa>
    2ef8:      	bl	0x1184 <core::panicking::panic_bounds_check::h5d2fdbe20d7940cc> @ imm = #-7544
    2efc:      	trap
    2efe:      	movs	r1, #32
    2f00:      	ldr	r2, [pc, #16] <$d.1200+0x4>
    2f02:      	b	0x2f08 <core::unicode::unicode_data::grapheme_extend::lookup::h918bcec3bba124e5+0xa8> @ imm = #2
    2f04:      	movs	r1, #32
    2f06:      	ldr	r2, [pc, #20] <$d.1200+0xe>
    2f08:      	mov	r0, r3
    2f0a:      	bl	0x1184 <core::panicking::panic_bounds_check::h5d2fdbe20d7940cc> @ imm = #-7562
    2f0e:      	trap

00002f10 <$d.1200>:
    2f10:	44 41 00 00	.word	0x00004144
    2f14:	14 41 00 00	.word	0x00004114
    2f18:	c3 02 00 00	.word	0x000002c3
    2f1c:	34 41 00 00	.word	0x00004134
    2f20:	ff ff 1f 00	.word	0x001fffff
    2f24:	c4 41 00 00	.word	0x000041c4
    2f28:	24 41 00 00	.word	0x00004124

00002f2c <rust_begin_unwind>:
    2f2c:      	push	{r7, lr}
    2f2e:      	add	r7, sp, #0
    2f30:      	sub	sp, #40
    2f32:      	str	r0, [sp]
    2f34:      	bl	0xf68 <__cpsid>         @ imm = #-8144
    2f38:      	movs	r4, #0
    2f3a:      	mov	r0, r4
    2f3c:      	bl	0xe38 <rtt_target::UpChannel::conjure::h81109ceede8d3325> @ imm = #-8456
    2f40:      	cmp	r0, #1
    2f42:      	bne	0x2f74 <rust_begin_unwind+0x48> @ imm = #46
    2f44:      	str	r1, [sp, #4]
    2f46:      	add	r5, sp, #4
    2f48:      	movs	r6, #2
    2f4a:      	mov	r0, r5
    2f4c:      	mov	r1, r6
    2f4e:      	bl	0xe1e <rtt_target::UpChannel::set_mode::haebb8f1fc86fca3d> @ imm = #-8500
    2f52:      	movs	r0, #1
    2f54:      	str	r0, [sp, #28]
    2f56:      	add	r0, sp, #32
    2f58:      	str	r0, [sp, #24]
    2f5a:      	str	r4, [sp, #20]
    2f5c:      	str	r4, [sp, #16]
    2f5e:      	str	r6, [sp, #12]
    2f60:      	ldr	r0, [pc, #20] <$d.1>
    2f62:      	str	r0, [sp, #8]
    2f64:      	ldr	r0, [pc, #20] <$d.1+0x4>
    2f66:      	str	r0, [sp, #36]
    2f68:      	mov	r0, sp
    2f6a:      	str	r0, [sp, #32]
    2f6c:      	add	r1, sp, #8
    2f6e:      	mov	r0, r5
    2f70:      	bl	0xe58 <<rtt_target::UpChannel as core::fmt::Write>::write_fmt::h05b44bba687d3d89> @ imm = #-8476
    2f74:      	b	0x2f74 <rust_begin_unwind+0x48> @ imm = #-4
    2f76:      	mov	r8, r8

00002f78 <$d.1>:
    2f78:	88 44 00 00	.word	0x00004488
    2f7c:	81 2f 00 00	.word	0x00002f81

00002f80 <<&T as core::fmt::Display>::fmt::h678799f7bde9582d>:
    2f80:      	push	{r7, lr}
    2f82:      	add	r7, sp, #0
    2f84:      	ldr	r0, [r0]
    2f86:      	bl	0x1044 <<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h980d98f06e764e0e> @ imm = #-8006
    2f8a:      	pop	{r7, pc}

00002f8c <__aeabi_uidiv>:
    2f8c:      	push	{r7, lr}
    2f8e:      	add	r7, sp, #0
    2f90:      	bl	0x30c8 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5> @ imm = #308
    2f94:      	pop	{r7, pc}

00002f96 <memcpy>:
    2f96:      	push	{r4, r5, r6, r7, lr}
    2f98:      	add	r7, sp, #12
    2f9a:      	sub	sp, #4
    2f9c:      	cmp	r2, #0
    2f9e:      	beq	0x2fee <memcpy+0x58>    @ imm = #76
    2fa0:      	movs	r4, #3
    2fa2:      	mov	r3, r2
    2fa4:      	ands	r3, r4
    2fa6:      	subs	r5, r2, #1
    2fa8:      	cmp	r5, #3
    2faa:      	str	r3, [sp]
    2fac:      	bhs	0x2fb2 <memcpy+0x1c>    @ imm = #2
    2fae:      	movs	r4, #0
    2fb0:      	b	0x2fd0 <memcpy+0x3a>    @ imm = #28
    2fb2:      	bics	r2, r4
    2fb4:      	movs	r4, #0
    2fb6:      	ldrb	r5, [r1, r4]
    2fb8:      	strb	r5, [r0, r4]
    2fba:      	adds	r5, r0, r4
    2fbc:      	adds	r6, r1, r4
    2fbe:      	ldrb	r3, [r6, #1]
    2fc0:      	strb	r3, [r5, #1]
    2fc2:      	ldrb	r3, [r6, #2]
    2fc4:      	strb	r3, [r5, #2]
    2fc6:      	ldrb	r3, [r6, #3]
    2fc8:      	strb	r3, [r5, #3]
    2fca:      	adds	r4, r4, #4
    2fcc:      	cmp	r2, r4
    2fce:      	bne	0x2fb6 <memcpy+0x20>    @ imm = #-28
    2fd0:      	ldr	r5, [sp]
    2fd2:      	cmp	r5, #0
    2fd4:      	beq	0x2fee <memcpy+0x58>    @ imm = #22
    2fd6:      	ldrb	r2, [r1, r4]
    2fd8:      	strb	r2, [r0, r4]
    2fda:      	cmp	r5, #1
    2fdc:      	beq	0x2fee <memcpy+0x58>    @ imm = #14
    2fde:      	adds	r2, r4, #1
    2fe0:      	ldrb	r3, [r1, r2]
    2fe2:      	strb	r3, [r0, r2]
    2fe4:      	cmp	r5, #2
    2fe6:      	beq	0x2fee <memcpy+0x58>    @ imm = #4
    2fe8:      	adds	r2, r4, #2
    2fea:      	ldrb	r1, [r1, r2]
    2fec:      	strb	r1, [r0, r2]
    2fee:      	add	sp, #4
    2ff0:      	pop	{r4, r5, r6, r7, pc}

00002ff2 <memset>:
    2ff2:      	push	{r4, r5, r7, lr}
    2ff4:      	add	r7, sp, #8
    2ff6:      	cmp	r2, #0
    2ff8:      	beq	0x3032 <memset+0x40>    @ imm = #54
    2ffa:      	movs	r4, #3
    2ffc:      	mov	r3, r2
    2ffe:      	ands	r3, r4
    3000:      	subs	r5, r2, #1
    3002:      	cmp	r5, #3
    3004:      	bhs	0x300a <memset+0x18>    @ imm = #2
    3006:      	movs	r4, #0
    3008:      	b	0x301e <memset+0x2c>    @ imm = #18
    300a:      	bics	r2, r4
    300c:      	movs	r4, #0
    300e:      	strb	r1, [r0, r4]
    3010:      	adds	r5, r0, r4
    3012:      	strb	r1, [r5, #3]
    3014:      	strb	r1, [r5, #2]
    3016:      	strb	r1, [r5, #1]
    3018:      	adds	r4, r4, #4
    301a:      	cmp	r2, r4
    301c:      	bne	0x300e <memset+0x1c>    @ imm = #-18
    301e:      	cmp	r3, #0
    3020:      	beq	0x3032 <memset+0x40>    @ imm = #14
    3022:      	strb	r1, [r0, r4]
    3024:      	cmp	r3, #1
    3026:      	beq	0x3032 <memset+0x40>    @ imm = #8
    3028:      	adds	r2, r4, r0
    302a:      	strb	r1, [r2, #1]
    302c:      	cmp	r3, #2
    302e:      	beq	0x3032 <memset+0x40>    @ imm = #0
    3030:      	strb	r1, [r2, #2]
    3032:      	pop	{r4, r5, r7, pc}

00003034 <__aeabi_memcpy>:
    3034:      	push	{r7, lr}
    3036:      	add	r7, sp, #0
    3038:      	bl	0x2f96 <memcpy>         @ imm = #-166
    303c:      	pop	{r7, pc}

0000303e <__aeabi_memset>:
    303e:      	push	{r7, lr}
    3040:      	add	r7, sp, #0
    3042:      	mov	r3, r1
    3044:      	mov	r1, r2
    3046:      	mov	r2, r3
    3048:      	bl	0x2ff2 <memset>         @ imm = #-90
    304c:      	pop	{r7, pc}

0000304e <__aeabi_memset4>:
    304e:      	push	{r4, r5, r6, r7, lr}
    3050:      	add	r7, sp, #12
    3052:      	sub	sp, #4
    3054:      	mov	r5, r2
    3056:      	mov	r4, r1
    3058:      	mov	r3, r0
    305a:      	uxtb	r2, r2
    305c:      	cmp	r1, #4
    305e:      	blo	0x308e <__aeabi_memset4+0x40> @ imm = #44
    3060:      	lsls	r0, r5, #24
    3062:      	lsls	r1, r2, #16
    3064:      	adds	r0, r1, r0
    3066:      	lsls	r1, r2, #8
    3068:      	adds	r0, r0, r1
    306a:      	adds	r5, r0, r2
    306c:      	subs	r1, r4, #4
    306e:      	lsrs	r0, r1, #2
    3070:      	adds	r0, r0, #1
    3072:      	movs	r6, #3
    3074:      	ands	r6, r0
    3076:      	str	r1, [sp]
    3078:      	beq	0x309a <__aeabi_memset4+0x4c> @ imm = #30
    307a:      	mov	r0, r3
    307c:      	stm	r0!, {r5}
    307e:      	cmp	r6, #1
    3080:      	beq	0x309e <__aeabi_memset4+0x50> @ imm = #26
    3082:      	str	r5, [r3, #4]
    3084:      	cmp	r6, #2
    3086:      	bne	0x3094 <__aeabi_memset4+0x46> @ imm = #10
    3088:      	subs	r4, #8
    308a:      	adds	r3, #8
    308c:      	b	0x309a <__aeabi_memset4+0x4c> @ imm = #10
    308e:      	mov	r0, r3
    3090:      	mov	r1, r4
    3092:      	b	0x30b4 <__aeabi_memset4+0x66> @ imm = #30
    3094:      	str	r5, [r3, #8]
    3096:      	subs	r4, #12
    3098:      	adds	r3, #12
    309a:      	mov	r1, r4
    309c:      	mov	r0, r3
    309e:      	ldr	r3, [sp]
    30a0:      	cmp	r3, #12
    30a2:      	blo	0x30b4 <__aeabi_memset4+0x66> @ imm = #14
    30a4:      	str	r5, [r0]
    30a6:      	str	r5, [r0, #4]
    30a8:      	str	r5, [r0, #8]
    30aa:      	str	r5, [r0, #12]
    30ac:      	adds	r0, #16
    30ae:      	subs	r1, #16
    30b0:      	cmp	r1, #3
    30b2:      	bhi	0x30a4 <__aeabi_memset4+0x56> @ imm = #-18
    30b4:      	bl	0x303e <__aeabi_memset> @ imm = #-122
    30b8:      	add	sp, #4
    30ba:      	pop	{r4, r5, r6, r7, pc}

000030bc <__aeabi_memclr8>:
    30bc:      	push	{r7, lr}
    30be:      	add	r7, sp, #0
    30c0:      	movs	r2, #0
    30c2:      	bl	0x304e <__aeabi_memset4> @ imm = #-120
    30c6:      	pop	{r7, pc}

000030c8 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5>:
    30c8:      	push	{r4, r5, r6, r7, lr}
    30ca:      	add	r7, sp, #12
    30cc:      	sub	sp, #12
    30ce:      	mov	r2, r0
    30d0:      	cmp	r0, r1
    30d2:      	bhs	0x30dc <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x14> @ imm = #6
    30d4:      	movs	r0, #0
    30d6:      	mov	r1, r2
    30d8:      	add	sp, #12
    30da:      	pop	{r4, r5, r6, r7, pc}
    30dc:      	lsrs	r5, r2, #16
    30de:      	cmp	r1, r5
    30e0:      	mov	r0, r2
    30e2:      	bhi	0x30fe <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x36> @ imm = #24
    30e4:      	mov	r0, r5
    30e6:      	lsrs	r6, r0, #8
    30e8:      	cmp	r1, r6
    30ea:      	bls	0x3104 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x3c> @ imm = #22
    30ec:      	lsrs	r3, r0, #4
    30ee:      	cmp	r1, r3
    30f0:      	bhi	0x310c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x44> @ imm = #24
    30f2:      	mov	r0, r3
    30f4:      	str	r3, [sp, #4]
    30f6:      	lsrs	r3, r0, #2
    30f8:      	cmp	r1, r3
    30fa:      	bls	0x3114 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x4c> @ imm = #22
    30fc:      	b	0x3116 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x4e> @ imm = #22
    30fe:      	lsrs	r6, r0, #8
    3100:      	cmp	r1, r6
    3102:      	bhi	0x30ec <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x24> @ imm = #-26
    3104:      	mov	r0, r6
    3106:      	lsrs	r3, r0, #4
    3108:      	cmp	r1, r3
    310a:      	bls	0x30f2 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x2a> @ imm = #-28
    310c:      	str	r3, [sp, #4]
    310e:      	lsrs	r3, r0, #2
    3110:      	cmp	r1, r3
    3112:      	bhi	0x3116 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x4e> @ imm = #0
    3114:      	mov	r0, r3
    3116:      	str	r3, [sp, #8]
    3118:      	lsrs	r3, r0, #1
    311a:      	movs	r4, #1
    311c:      	movs	r0, #0
    311e:      	cmp	r1, r3
    3120:      	mov	r3, r4
    3122:      	bls	0x3126 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x5e> @ imm = #0
    3124:      	mov	r3, r0
    3126:      	cmp	r1, r5
    3128:      	mov	r5, r4
    312a:      	bls	0x312e <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x66> @ imm = #0
    312c:      	mov	r5, r0
    312e:      	str	r3, [sp]
    3130:      	lsls	r5, r5, #4
    3132:      	cmp	r1, r6
    3134:      	mov	r6, r4
    3136:      	bls	0x313a <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x72> @ imm = #0
    3138:      	mov	r6, r0
    313a:      	lsls	r3, r6, #3
    313c:      	adds	r5, r3, r5
    313e:      	ldr	r3, [sp, #4]
    3140:      	cmp	r1, r3
    3142:      	mov	r3, r4
    3144:      	bls	0x3148 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x80> @ imm = #0
    3146:      	mov	r3, r0
    3148:      	lsls	r3, r3, #2
    314a:      	adds	r3, r5, r3
    314c:      	ldr	r5, [sp, #8]
    314e:      	cmp	r1, r5
    3150:      	mov	r5, r4
    3152:      	bls	0x3156 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x8e> @ imm = #0
    3154:      	mov	r5, r0
    3156:      	lsls	r0, r5, #1
    3158:      	adds	r0, r3, r0
    315a:      	ldr	r3, [sp]
    315c:      	adds	r3, r0, r3
    315e:      	lsls	r4, r3
    3160:      	mov	r5, r1
    3162:      	lsls	r5, r3
    3164:      	subs	r6, r2, r5
    3166:      	cmp	r6, r1
    3168:      	bhs	0x3174 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xac> @ imm = #8
    316a:      	mov	r2, r6
    316c:      	mov	r0, r4
    316e:      	mov	r1, r2
    3170:      	add	sp, #12
    3172:      	pop	{r4, r5, r6, r7, pc}
    3174:      	cmp	r5, #0
    3176:      	bmi	0x3180 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xb8> @ imm = #6
    3178:      	mov	r1, r4
    317a:      	mov	r0, r4
    317c:      	mov	r2, r6
    317e:      	b	0x31ac <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xe4> @ imm = #42
    3180:      	lsrs	r5, r5, #1
    3182:      	subs	r2, r6, r5
    3184:      	subs	r3, r3, #1
    3186:      	movs	r0, #31
    3188:      	str	r3, [sp, #4]
    318a:      	ands	r0, r3
    318c:      	str	r0, [sp, #8]
    318e:      	movs	r0, #1
    3190:      	ldr	r3, [sp, #8]
    3192:      	lsls	r0, r3
    3194:      	cmp	r2, #0
    3196:      	str	r0, [sp, #8]
    3198:      	bge	0x319c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xd4> @ imm = #0
    319a:      	movs	r0, #0
    319c:      	cmp	r2, #0
    319e:      	bge	0x31a2 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xda> @ imm = #0
    31a0:      	mov	r2, r6
    31a2:      	orrs	r0, r4
    31a4:      	cmp	r2, r1
    31a6:      	ldr	r1, [sp, #8]
    31a8:      	ldr	r3, [sp, #4]
    31aa:      	blo	0x30d6 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0xe> @ imm = #-216
    31ac:      	subs	r1, r1, #1
    31ae:      	cmp	r3, #0
    31b0:      	beq	0x31de <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x116> @ imm = #42
    31b2:      	str	r1, [sp, #4]
    31b4:      	subs	r4, r5, #1
    31b6:      	movs	r6, #3
    31b8:      	ands	r6, r3
    31ba:      	subs	r1, r3, #1
    31bc:      	str	r1, [sp, #8]
    31be:      	cmp	r6, #0
    31c0:      	beq	0x31e2 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x11a> @ imm = #30
    31c2:      	lsls	r2, r2, #1
    31c4:      	subs	r2, r2, r4
    31c6:      	asrs	r5, r2, #31
    31c8:      	ands	r5, r4
    31ca:      	adds	r5, r5, r2
    31cc:      	cmp	r6, #1
    31ce:      	bne	0x31ee <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x126> @ imm = #28
    31d0:      	mov	r2, r5
    31d2:      	ldr	r6, [sp, #8]
    31d4:      	ldr	r1, [sp, #8]
    31d6:      	cmp	r1, #3
    31d8:      	ldr	r1, [sp, #4]
    31da:      	blo	0x3244 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x17c> @ imm = #102
    31dc:      	b	0x3216 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x14e> @ imm = #54
    31de:      	mov	r5, r2
    31e0:      	b	0x3244 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x17c> @ imm = #96
    31e2:      	mov	r6, r3
    31e4:      	ldr	r1, [sp, #8]
    31e6:      	cmp	r1, #3
    31e8:      	ldr	r1, [sp, #4]
    31ea:      	blo	0x3244 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x17c> @ imm = #86
    31ec:      	b	0x3216 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x14e> @ imm = #38
    31ee:      	lsls	r2, r5, #1
    31f0:      	subs	r2, r2, r4
    31f2:      	asrs	r5, r2, #31
    31f4:      	ands	r5, r4
    31f6:      	adds	r5, r5, r2
    31f8:      	cmp	r6, #2
    31fa:      	bne	0x3200 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x138> @ imm = #2
    31fc:      	subs	r6, r3, #2
    31fe:      	b	0x320c <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x144> @ imm = #10
    3200:      	lsls	r2, r5, #1
    3202:      	subs	r2, r2, r4
    3204:      	asrs	r5, r2, #31
    3206:      	ands	r5, r4
    3208:      	adds	r5, r5, r2
    320a:      	subs	r6, r3, #3
    320c:      	mov	r2, r5
    320e:      	ldr	r1, [sp, #8]
    3210:      	cmp	r1, #3
    3212:      	ldr	r1, [sp, #4]
    3214:      	blo	0x3244 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x17c> @ imm = #44
    3216:      	mov	r5, r2
    3218:      	lsls	r2, r5, #1
    321a:      	subs	r2, r2, r4
    321c:      	asrs	r5, r2, #31
    321e:      	ands	r5, r4
    3220:      	adds	r2, r5, r2
    3222:      	lsls	r2, r2, #1
    3224:      	subs	r2, r2, r4
    3226:      	asrs	r5, r2, #31
    3228:      	ands	r5, r4
    322a:      	adds	r2, r5, r2
    322c:      	lsls	r2, r2, #1
    322e:      	subs	r2, r2, r4
    3230:      	asrs	r5, r2, #31
    3232:      	ands	r5, r4
    3234:      	adds	r2, r5, r2
    3236:      	lsls	r2, r2, #1
    3238:      	subs	r2, r2, r4
    323a:      	asrs	r5, r2, #31
    323c:      	ands	r5, r4
    323e:      	adds	r5, r5, r2
    3240:      	subs	r6, r6, #4
    3242:      	bne	0x3218 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x150> @ imm = #-46
    3244:      	movs	r2, #31
    3246:      	ands	r3, r2
    3248:      	mov	r2, r5
    324a:      	lsrs	r2, r3
    324c:      	ands	r1, r5
    324e:      	orrs	r0, r1
    3250:      	mov	r1, r2
    3252:      	add	sp, #12
    3254:      	pop	{r4, r5, r6, r7, pc}
    3256:      	bmi	0x3202 <compiler_builtins::int::specialized_div_rem::u32_div_rem::h530760ff03a3a1a5+0x13a> @ imm = #-88

00003258 <__clzsi2>:
    3258:      	push	{r7, lr}
    325a:      	lsrs	r3, r0, #16
    325c:      	add	r7, sp, #0
    325e:      	cmp	r3, #0
    3260:      	beq	0x3298 <__clzsi2+0x40>  @ imm = #52
    3262:      	movs	r0, r3
    3264:      	movs	r1, #8
    3266:      	movs	r2, #0
    3268:      	movs	r3, #255
    326a:      	lsls	r3, r3, #8
    326c:      	tst	r0, r3
    326e:      	beq	0x3274 <__clzsi2+0x1c>  @ imm = #2
    3270:      	movs	r1, r2
    3272:      	lsrs	r0, r0, #8
    3274:      	movs	r3, #240
    3276:      	tst	r3, r0
    3278:      	beq	0x32a2 <__clzsi2+0x4a>  @ imm = #38
    327a:      	lsrs	r0, r0, #4
    327c:      	movs	r3, #12
    327e:      	tst	r3, r0
    3280:      	beq	0x329e <__clzsi2+0x46>  @ imm = #26
    3282:      	lsrs	r0, r0, #2
    3284:      	movs	r2, #1
    3286:      	lsrs	r3, r0, #1
    3288:      	bics	r2, r3
    328a:      	movs	r3, #2
    328c:      	mov	sp, r7
    328e:      	rsbs	r2, r2, #0
    3290:      	subs	r0, r3, r0
    3292:      	ands	r0, r2
    3294:      	adds	r0, r0, r1
    3296:      	pop	{r7, pc}
    3298:      	movs	r1, #24
    329a:      	movs	r2, #16
    329c:      	b	0x3268 <__clzsi2+0x10>  @ imm = #-56
    329e:      	adds	r1, #2
    32a0:      	b	0x3284 <__clzsi2+0x2c>  @ imm = #-32
    32a2:      	adds	r1, #4
    32a4:      	b	0x327c <__clzsi2+0x24>  @ imm = #-44
    32a6:      	mov	r8, r8

000032a8 <HardFaultTrampoline>:
    32a8:      	mov	r0, lr
    32aa:      	movs	r1, #4
    32ac:      	tst	r0, r1
    32ae:      	bne	0x32b6 <HardFaultTrampoline+0xe> @ imm = #4
    32b0:      	mrs	r0, msp
    32b4:      	b	0x32bc <HardFault_>     @ imm = #4
    32b6:      	mrs	r0, psp
    32ba:      	b	0x32bc <HardFault_>     @ imm = #-2

000032bc <HardFault_>:
    32bc:      	b	0x32bc <HardFault_>     @ imm = #-4
    32be:      	bmi	0x326a <__clzsi2+0x12>  @ imm = #-88
